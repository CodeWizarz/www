---
layout: markdown_page
title: "Static Analysis group priorities"
description: "What GitLab Static Analysis group plans to work on"
canonical_path: "/direction/secure/static-analysis/"
---

- TOC
{:toc}

## Why our group exists

We believe that the world is safer when [everyone can contribute](https://handbook.gitlab.com/handbook/company/mission/#mission) to software security.
Our customers, and those they serve, are better protected when developers and security professionals can fix potential security risks earlier.

The earliest possible time to catch a security issue is when the code is first written.
GitLab sees code very early in the software development lifecycle, since we store production code and also support customer workflows (like merge requests) for pre-production development.
So, our group is uniquely positioned to integrate static analysis everywhere as part of a comprehensive DevSecOps platform.
We can do what others can't by making security omnipresent, and by supporting collaboration right in the tools that development teams are already using to do their jobs.

Building on those fundamental beliefs, the Static Analysis group's _business_ purpose is to build value for GitLab and our customers...
1. By encouraging organizations to use GitLab Ultimate...
1. By delivering more value to them in the GitLab platform...
1. By enabling them to secure their code early in the development process...
1. By using static analysis techniques.

## Our responsibility

We are responsible for ensuring that customers can use GitLab Ultimate to:
- Remove existing security “point solutions”, with a special focus on SAST, Secret Detection, IaC Scanning, Code Quality, and similar static analysis disciplines. (Customers often use the savings from removing other tools to pay for GitLab Ultimate.)
- Satisfy their security and compliance requirements relevant to these areas.
- Meaningfully increase their confidence in the security of their code as soon as it is written.

Our responsibility is for the **full customer experience**—not just security analyzers or specific software systems we maintain. At times this may mean:
- Imagining and implementing workflows that helps everyone know about and fix security issues.
- Integrating open-source tools into GitLab.
- Creating innovative static analysis technology.
- Driving changes in other areas of the GitLab platform.
- Contributing to documentation or other educational material that helps explain how to use GitLab effectively.

**We will do what it takes** to deliver these customer results—our customers use the entire product to do their jobs, so it's important that we collaborate effectively with other groups to deliver end-to-end results.

## What this page is and isn't

This page is a summary of how Static Analysis invests our time and energy, and how we make those decisions.
It:
- Includes "headline" items that we're planning to work on, and why we plan to work on.
- May include epics, issues, or general themes.
- Ranks items across the feature categories that Static Analysis maintains.

However, it doesn't:
- Include every task that our group will do, since the single source of truth for our task list is [the issue tracker](https://gitlab.com/gitlab-org/gitlab/-/issues/?sort=created_date&state=opened&label_name%5B%5D=group%3A%3Astatic%20analysis).
- Include community contributions that we facilitate, since we can't predict when these will land.
- Replace direction pages, since these pages describe the vision and strategy holistically for each feature category.
    - For details, check the directions for [SAST](./sast/), [Secret Detection](./secret-detection/), and [Code Quality](./code_quality/).
- Guarantee delivery order or delivery timing, since these aspects of planning are always subject to the realities encountered during development.
    - See the [disclaimer](#legal-disclaimer) at the top of the page for details.

<details markdown="1">
<summary markdown="span">_Aside:_ Why does this page exist?</summary>

_For group members:_

We all should know why our group exists, what we're shooting for, and what GitLab needs from us to be successful as a business.

Sometimes, it can be hard to understand a prioritization decision, or a de-prioritization can feel like an indication that an idea is not valuable at all. Having a shared understanding of our group's role in the business and our current areas of investment should help explain this type of decision, and make it possible for more team members to come to the same conclusion independently.

This document (in particular the lists above) are likely to be incomplete at any given time, but the goal is to clarify and improve them over time. Any questions, suggestions, or opportunities for clarification are very welcome.

_For others:_

This page is designed to clarify competing priorities between feature categories and provide a high-level summary of the problems the Static Analysis group plans to tackle.

</details>

## Overall themes
1. Make every result trustworthy.
1. Speed up triage and remediation, and reduce toil in these steps.
1. Build toward a long-term architecture that allows SAST, Secret Detection, and Code Quality to be on by default.
1. Integrate security findings in useful places throughout the DevSecOps platform.

Team members can see more details in the group charter; search "Static Analysis group charter" on Google Docs to find the doc.
<!-- Note: we try not to directly link to Google docs because passersby sometimes request access to them, and it's easy to mistakenly grant access to those users. -->

## Priorities
### Features

| Name | Rationale | Needs | Status/progress |
| ---- | --------- | ----- | --------------- |
<% data.product_priorities.static_analysis.priorities.each.with_index do |priority, index| %>
| [<%= priority.name %>](<%= priority.url %>) | <%= priority.rationale %> | <%= priority.needs %> | <%= priority.status %> |
<% end %>

### UX initiatives

| Name | Rationale | Needs | Status/progress |
| ---- | --------- | ----- | --------------- |
<% data.product_priorities.static_analysis.ux_priorities.each.with_index do |priority, index| %>
| [<%= priority.name %>](<%= priority.url %>) | <%= priority.rationale %> | <%= priority.needs %> | <%= priority.status %> |
<% end %>

## Page Updates

| | |
| --- | --- |
| Stage | [Secure](/direction/secure/) |
| Content Last Reviewed | `2023-09-14` |
| Content Last Updated  | `2023-09-14` |
