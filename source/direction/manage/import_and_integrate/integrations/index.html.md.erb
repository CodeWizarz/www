---
layout: markdown_page
title: "Category Direction - Integrations"
description: "This GitLab product category is focused on enabling intuitive collaboration with tools GitLab's customers rely on. Find more information here!"
canonical_path: "/direction/manage/import_and_integrate/integrations/"
---

- TOC
{:toc}

## Integrations

| | |
| --- | --- |
| Stage | [Manage](/direction/manage/) |
| Maturity | [Viable](/direction/maturity/) |
| Content Last Reviewed | `2023-07-27` |

### Introduction and how you can help

Thanks for visiting this category direction page on Integrations in GitLab. This page belongs to the [Import and Integrate](https://about.gitlab.com/handbook/product/categories/#import-and-integrate-group) group of the Manage stage and is maintained by the group's Product Manager, [Magdalena Frankiewicz](https://gitlab.com/m_frankiewicz) ([E-mail](mailto:mfrankiewicz@gitlab.com), [Calendly](https://calendly.com/gitlab-magdalenafrankiewicz/45mins)).

This direction page is a work in progress, and everyone can contribute:
 
- Please comment and contribute in the linked [issues](https://gitlab.com/groups/gitlab-org/-/issues/?sort=created_date&state=opened&label_name%5B%5D=Category%3AIntegrations&first_page_size=20) and [epics](https://gitlab.com/groups/gitlab-org/-/epics?state=opened&page=1&sort=start_date_desc&label_name[]=Category:Integrations) on this page. Sharing your feedback directly on GitLab.com is the best way to contribute to our strategy and vision.
 - Please share feedback directly via email, Twitter, or on a video call. If you're a GitLab user and want to discuss how GitLab can improve Importers, we'd especially love to hear from you.

### Strategy and Themes

<!-- Describe your category. Capture the main problems to be solved in market (themes). Describe how you intend to solve these with GitLab (strategy). Provide enough context that someone unfamiliar with the details of the category can understand what is being discussed. -->

<%= partial("direction/manage/import_and_integrate/integrations/templates/overview") %>

### 1 year plan
<!--
1 year plan for what we will be working on linked to up-to-date epics. This section will be most similar to a "road-map". Items in this section should be linked to issues or epics that are up to date. Indicate relative priority of initiatives in this section so that the audience understands the sequence in which you intend to work on them. 
 -->

<%= partial("direction/manage/import_and_integrate/integrations/templates/next") %>

#### What is next for us
<!-- This is a 3 month look ahead for the next iteration that you have planned for the category. This section must provide links to issues or
or to [epics](https://about.gitlab.com/handbook/product/product-processes/#epics-for-a-single-iteration) that are scoped to a single iteration. Please do not link to epics encompass a vision that is a longer horizon and don't lay out an iteration plan. -->

From mid July 2023 we won't be able to focus on Integrations, as we shift our attention to improve high-priority importers, GitLab to GitLab importer, GitHub importer and BitBucket Server importer.

#### What we are currently working on
<!-- Scoped to the current month. This section can contain the items that you choose to highlight on the kickoff call. Only link to issues, not Epics.  -->

From mid July 2023 we are not able to work on Integrations, as we shift our attention to improve high-priority importers, GitLab to GitLab importer, GitHub importer and BitBucket Server importer.

#### What we recently completed
<!-- Lookback limited to 3 months. Link to the relevant issues or release post items. -->

- [Associated GitLab deployments with commits mentioning Jira issues](https://gitlab.com/gitlab-org/gitlab/-/issues/300031), to make them visible in the Jira Development Panel. *16.2*
- [Made GitLab for Slack app available on self-managed instances](https://gitlab.com/gitlab-org/gitlab/-/issues/358872). On self-managed GitLab, you can create
a copy of the GitLab for Slack app from a [manifest file](https://api.slack.com/reference/manifests#creating_apps) and
install that copy in your Slack workspace. Each copy is private and not publicly distributable. To create and configure the app, see [GitLab for Slack app administration](https://docs.gitlab.com/ee/user/admin_area/settings/slack_app.html). *16.2*
- Created a [feedback issue for GitLab for Jira Cloud app](https://gitlab.com/gitlab-org/gitlab/-/issues/413652) and [linked to it from the app](https://gitlab.com/gitlab-org/gitlab/-/issues/414382). Please share your feedback there! *16.2*
- Improved usability and [documentation]((https://docs.gitlab.com/ee/integration/jira/connect-app.html)) of GitLab for Jira Cloud app by e.g. [improving error message appearing during setting up the app](https://gitlab.com/gitlab-org/gitlab/-/issues/406650). *16.1*
- [Included outgoing Jira API endpoint information in exception logs for Jira issue integration](https://gitlab.com/gitlab-org/gitlab/-/issues/404711). Current [Jira issue integration](https://docs.gitlab.com/ee/integration/jira/configure.html) logs don't currently show enough details to easily troubleshoot what the problem is, unless you are very familiar with the codebase. *16.1*
- Improved documentation of [Jira issue integration](https://docs.gitlab.com/ee/integration/jira/configure.html). *16.0, 16.1*
- Added [support of Personal Access Tokens for Jira issue integration with Jira Data Center and Jira Server](https://gitlab.com/groups/gitlab-org/-/epics/8222). Before this change you could only authenticate the [Jira issue integration](https://docs.gitlab.com/ee/integration/jira/configure.html) with a Jira username and password. Now you can use a [Jira personal access token](https://confluence.atlassian.com/enterprise/using-personal-access-tokens-1026032365.html) to authenticate if you are using Jira Data Center and Jira Server with Jira 8.14 and later. A Jira personal access token is a safer alternative to a username and password. *16.0*

#### What is Not Planned Right Now
<!--  Often it's just as important to talk about what you're not doing as it is to
discuss what you are. This section should include items that people might hope or think
we are working on as part of the category, but aren't, and it should help them understand why that's the case.
Also, thinking through these items can often help you catch something that you should
in fact do. We should limit this to a few items that are at a high enough level so
someone with not a lot of detailed information about the product can understand -->

<%= partial("direction/manage/import_and_integrate/integrations/templates/not_doing") %>

### Integration Ownership

During 2023, Import and Integrations will work to shift responsibilities as DRIs of most integrations to individual product teams within the domain areas across GitLab. This will empower product teams to own the comprehensive strategy in their domain, and allow us to best scale to support the need so of our customers.

Over time, Product Managers in other stages will become owners for integrations that are particular to their domain, giving them full visibility and ownership in serving customers in their domain based on their strategy, as has been the case for many integrations to date (such as SAST/DAST Scanners in Security). Many times, individual groups will have more in-depth knowledge of customer pain points and how integrations should work within their product stage.

As we work to better define ownership of integrations across GitLab, this table (in draft) will make it clearer for teams who is responsible for maintenance, security, and new feature development. It will also make it clearer for customers who owns each integration and how deeply it's supported or how much it's being prioritized.

|                                                   Integration                                                   |        Category         |              Owner (Group)              |   Author (Contributor/Maintainer)    |
| --------------------------------------------------------------------------------------------------------------- | ----------------------- | --------------------------------------- | ------------------------------------ |
| [Akismet](https://docs.gitlab.com/ee/integration/akismet.html)                                                  | Spam Protection         | Data Science:Anti-Abuse                 | GitLab                               |
| [Anchore](https://docs.anchore.com/current/docs/configuration/integration/ci_cd/gitlab/)                                | Security        | Secure:Composition Analysis             | Anchore                              |
| [Arkose Protect](https://docs.gitlab.com/ee/integration/arkose.html)                                            | Security                | Data Science:Anti-Abuse                 | Arkose Protect                       |
| [Asana](https://docs.gitlab.com/ee/user/project/integrations/asana.html)                                        | Project Management      | Plan:Project Management                 | GitLab                               |
| [Assembla]()                                                                                                    | Code Intelligence       | Create:Source Code                      | N/A                                  |
| [Bamboo CI](https://docs.gitlab.com/ee/user/project/integrations/bamboo.html)                                   | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [Bridgecrew](https://docs.bridgecrew.io/docs/integrate-with-gitlab-self-managed)                                | Security                | Secure:Static Analysis                  | GitLab                               |
| [Bugzilla ](https://docs.gitlab.com/ee/user/project/integrations/bugzilla.html)                                 | Project Management      | Plan:Project Management                 | GitLab                               |
| [Buildkite ]()                                                                                                  | CI/CD                   | Verify:Pipeline Execution               | N/A                                  |
| [Campfire]()                                                                                                    | Chat                    | Manage:Integrations                     | N/A                                  |
| [Cloudrail (previously Indeni)](https://docs.cloudrail.app/#/integrations/gitlab)                               | Security                | Secure:Static Analysis                  | GitLab                               |
| [Confluence Workspace](https://docs.gitlab.com/ee/api/integrations.html#confluence-integration)                 | Wiki                    | Plan:Knowledge                           | GitLab                               |
| [Checkmarx ](https://checkmarx.com/why-checkmarx/checkmarx-and-gitlab/)                                         | Security                | Secure:Static Analysis                  | Checkmarx                            |
| [Custom issue tracker](https://docs.gitlab.com/ee/user/project/integrations/custom_issue_tracker.html)          | Project Management      | Plan:Project Management                 | GitLab                               |
| [Datadog](https://docs.gitlab.com/ee/integration/datadog.html)                                                  | Monitoring              | Monitor:Respond                         | DataDog                              |
| [Deepfactor](https://docs.deepfactor.io/hc/en-us/articles/1500008981941)                                        | Security                | Secure:Static Analysis                  | Deepfactor                           |
| [Discord](https://docs.gitlab.com/ee/user/project/integrations/discord_notifications.html)                      | Chat                    | Manage:Integrations                     | GitLab                               |
| [Drone CI]()                                                                                                    | Chat                    | Verify:Pipeline Execution               | GitLab                               |
| [Emails on Push](https://docs.gitlab.com/ee/user/project/integrations/emails_on_push.html)                      | Email                   | Manage:Integrations                     | GitLab                               |
| [Elasticsearch  ](https://docs.gitlab.com/ee/integration/elasticsearch.html)                                    | Data Warehouse & Search | Data Stores:Global Search               | GitLab                               |
| [External Wiki  ]()                                                                                             | Wiki                    | Plan:Knowledge                           | GitLab                               |
| [Flowdock (CA Technologies) ]()                                                                                 | Chat                    | Manage:Integrations                     | GitLab                               |
| [GitHub ](https://docs.gitlab.com/ee/user/project/integrations/github.html)                                     | SCM                     | Create:Source Code                      | GitLab                               |
| [GitPod  ](https://docs.gitlab.com/ee/integration/gitpod.html)                                                  | IDE                     | Create:IDE                           | GitLab                               |
| [Google Chat ](https://docs.gitlab.com/ee/user/project/integrations/hangouts_chat.html)                         | Chat                    | Manage:Integrations                     | GitLab                               |
| [Gmail Actions Buttons](https://docs.gitlab.com/ee/integration/gmail_action_buttons_for_gitlab.html)            | Email                   | Manage:Integrations                     | GitLab                               |
| [GrammaTech](https://www.grammatech.com/codesonar-gitlab-integration)                                           | Security                | Secure:Static Analysis                  | GrammaTech                           |
| [Harbor](https://docs.gitlab.com/ee/user/project/integrations/harbor.html)                                      | Package Management      | Package:Package                         | JiHu                                 |
| [IBM Engineering Workflow Management (EWM)](https://docs.gitlab.com/ee/user/project/integrations/ewm.html)      | Project Management      | Plan:Project Management                 | Community contribution (open source) |
| [Irker](https://docs.gitlab.com/ee/user/project/integrations/irker.html)                                        | Chat                    | Manage:Integrations                     | GitLab                               |
| [Jenkins ](https://docs.gitlab.com/ee/integration/jenkins.html)                                                 | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [JetBrains TeamCity CI ]()                                                                                      | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [Jira ](https://docs.gitlab.com/ee/integration/jira/)                                                           | Project Management      | Plan:Project Management (temporarily supported by Manage:Integrations)                | GitLab                               |
| [JScrambler](https://docs.jscrambler.com/code-integrity/documentation/gitlab-ci-integration)                    | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [Kroki diagrams ](https://docs.gitlab.com/ee/administration/integration/kroki.html)                             | Diagramming             | Plan:Project Management                 | GitLab                               |
| [Mailgun](https://docs.gitlab.com/ee/administration/integration/mailgun.html)                                   | Email                   | Plan:Project Management                 | GitLab                               |
| [Mattermost notifications](https://docs.gitlab.com/ee/user/project/integrations/mattermost.html)                | Chat                    | Manage:Integrations                     | GitLab                               |
| [Mattermost slash commands  ](https://docs.gitlab.com/ee/user/project/integrations/mattermost.html)             | Chat                    | Manage:Integrations                     | GitLab                               |
| [Mend (previously Whitesource)](https://docs.mend.io/bundle/integrations/page/mend_for_gitlab.html)             | Security                | Secure:Static Analysis                  | Mend                                 |
| [Microsoft Teams](https://docs.gitlab.com/ee/user/project/integrations/microsoft_teams.html)                    | Chat                    | Manage:Integrations                     | GitLab                               |
| [Mock CI ](https://docs.gitlab.com/ee/user/project/integrations/mock_ci.html)                                   | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [Packagist]()                                                                                                   | CI/CD                   | Package:Package                         | GitLab                               |
| [Pipeline status emails](https://docs.gitlab.com/ee/user/project/integrations/pipeline_status_emails.html)      | Email                   | Manage:Integrations                     | GitLab                               |
| [Pivotal Tracker  ](https://docs.gitlab.com/ee/user/project/integrations/pivotal_tracker.html)                  | Project Management      | Plan:Project Management                 | GitLab                               |
| [PlantUML](https://docs.gitlab.com/ee/administration/integration/plantuml.html)                                 | Diagramming             | Plan:Project Management                 | GitLab                               |
| [Prometheus](https://docs.gitlab.com/ee/user/project/integrations/prometheus.html)                              | Monitoring              | Monitor:Respond                         | GitLab                               |
| [Pumble](https://docs.gitlab.com/ee/user/project/integrations/pumble.html)                                      | Chat                    | Manage:Integrations                     | Community contribution (open source) |
| [Redmine ](https://docs.gitlab.com/ee/user/project/integrations/redmine.html)                                   | Project Management      | Plan:Project Management                 | Community contribution (open source) |
| [reCAPTCHA ](https://docs.gitlab.com/ee/integration/recaptcha.html)                                             | Spam Protection         | Data Science:Anti-Abuse | GitLab                               |
| [ServiceNow - DevOps / Change Management](https://docs.gitlab.com/ee/user/project/integrations/servicenow.html) | Change Management       | Manage:Integrations                     | ServiceNow                               |
| [Semgrep ](https://semgrep.dev/for/gitlab)                                                                      | Security                | Secure:Static Analysis                  | Semgrep                              |
| [Slack notifications ](https://docs.gitlab.com/ee/user/project/integrations/slack.html)                         | Chat                    | Manage:Integrations                     | GitLab                               |
| [Slack slash commands ](https://docs.gitlab.com/ee/user/project/integrations/slack.html)                        | Chat                    | Manage:Integrations                     | GitLab                               |
| [Slack application ](https://docs.gitlab.com/ee/user/project/integrations/slack.html)                           | Chat                    | Manage:Integrations                     | GitLab                               |
| [Sourcegraph](https://docs.gitlab.com/ee/integration/sourcegraph.html)                                          | Code Intelligence       | Create:Code Review                      | GitLab                               |
| [StackHawk ](https://docs.stackhawk.com/continuous-integration/gitlab.html)                                     | Security                | Secure:Static Analysis                  | StackHawk                            |
| [Tenable](https://docs.tenable.com/tenableio/Content/ContainerSecurity/GetStarted.htm)                          | Security                | Secure:Static Analysis                  | Tenable                              |
| [Trello  ](https://docs.gitlab.com/ee/integration/trello_power_up.html)                                         | Project Management      | Plan:Project Management                 | GitLab                               |
| [Unify Circuit ](https://docs.gitlab.com/ee/user/project/integrations/unify_circuit.html)                       | Chat                    | Manage:Integrations                     | Community contribution (open source) |
| [Venafi ](https://marketplace.venafi.com/details/gitlab-ci-cd/)                                                 | Security                | Secure:Static Analysis                  | Venafi                               |
| [Veracode ](https://community.veracode.com/s/knowledgeitem/gitlab-ci-MCEKSYPRWL35BRTGOVI55SK5RI4A)              | Security                | Secure:Static Analysis                  | Veracode                             |
| [Visual Studio Code extension  ](https://docs.gitlab.com/ee/user/project/repository/vscode.html)                | IDE                     | Create:Code Review                      | GitLab                               |
| [Webex Teams](https://docs.gitlab.com/ee/user/project/integrations/webex_teams.html)                            | Chat                    | Manage:Integrations                     | Community contribution (open source) |
| [Youtrack ](https://docs.gitlab.com/ee/user/project/integrations/youtrack.html)                                 | Project Management      | Plan:Project Management                 | Community contribution (open source) |

### Insights 

#### Customer Insights

* [Top Growth Opportunities](https://docs.google.com/document/d/1RzZpN-_trbyPZu6-vL4YpDW-3PLj_TaRynJMvt6ZzSc/edit?usp=sharing)
* In our [Integrations Leadership Survey [Dec 2022 Report]](https://docs.google.com/presentation/d/1ovHeGfEnFAWzQTEYJe6SHIC2cUyn4QjO35-uQmVskSo/edit#slide=id.g19bafe62b00_0_588), we investigated the importance of integrations to GitLab users who are either buyers or influence purchase decisions for new tools at their company. We learned that:
    * Integrations has an impact on the decision to purchase GitLab for 62% of respondents.
    * Leaders preferred that GitLab provide deeper integration instead of focusing on new integrations.
    * CI and AppDev are the two most critical workflows when it comes to integration.
    * Leaders were interested in more API support for integrations, as well as the ability to use CLI or SDK to connect home grown systems.
    * Many wanted deeper Slack integration, or use CI integrations to solve for more Slack use cases
    * Native integrations are often not customizable enough to suit varied use cases, requiring too much work to get them functional

#### Partner/Ecosystem Insights

- Consider our integration efforts so far. What integrations have been most successful up to this point? [Jira, Slack, Prometheus](https://app.periscopedata.com/app/gitlab/577690/Integrations-Usage-Dashboard). Why? Our hypothesis is that they serve larger Enterprises with real, complex challenges that would be valuable to solve. These Enterprises have many users that are trying to follow standard processes, using standard tools chosen by their org.
- Secondarily, these partners (Atlassian, Slack) have large CSMs - they work with mutual customers and prospects that could gain value from pairing their products with GitLab.

### Key Objectives

Based on our Vision/Strategy, we will follow and track the following key objectives to identify if our Strategy is effective:

* Total API/webhook usage
* \# of community contributions (based on improvements to our API strategy and integration experience), especially new integrations or integration features contributed
* \# of total lovable integrations
* ARR / # of Integrations
* Total CMAU
* Deal Blockers - Track Opportunities Won where an Integration is cited by customer as a key requirement
* [Customer Churn](https://www.crossbeam.com/blog/tech-ecosystem-maturity-track-churn-and-youre-3-6x-more-likely-to-have-dedicated-budget-for-integrations/) - Overall Customer Churn should decrease as we increase the stickiness of our product via our Ecosystem
* New Revenue through Partnerships

### Maturity

The Integrations group tracks [Maturity](/direction/maturity/)
on a per-integration basis. Each integration is evaluated based on the following
criteria:

* A **Minimal** integration meets a single basic need for a small set of customers, and may only push data one way from one system to the other without surfacing much data or functionality directly in the UI.
* A **Viable** integration meets the core needs of most customers, and is robust or configurable enough to meet all the needs of some customers.
* A **Complete** integration meets the needs of the vast majority of usecases for the majority of users, and the integration allows users to work painlessly between the two products.
* A **Lovable** integration not only meets the needs of the vast majority of users, but it makes the experience of using both products as productive and easy as possible. This may mean things like special consideration taken to intra-product navigation and how we surface notifications from the other service, for example.

#### Most used Integrations

_You can view a list of all of our current integrations on our [Integrations page](https://docs.gitlab.com/ee/user/project/integrations/overview.html)_

| Integration           | Maturity Level      | Documentation                                                                               | Issues / Planning Epic    |
| ---                   | ---                 | ---                                                                                         | --- |
| Atlassian Jira        | Viable              | [Documentation](https://docs.gitlab.com/ee/integration/jira/)             | [Open Issues](https://gitlab.com/gitlab-org/gitlab/-/issues?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=Integration%3A%3AJira) |
| Slack                 | Viable              | [Documentation](https://docs.gitlab.com/ee/user/project/integrations/slack.html)            | [Open Issues](https://gitlab.com/gitlab-org/gitlab/-/issues?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=Integration%3A%3ASlack) |
| Microsoft Teams       | Minimal             | [Documentation](https://docs.gitlab.com/ee/user/project/integrations/microsoft_teams.html)  | [Epic](https://gitlab.com/groups/gitlab-org/-/epics/880) |

### Contributing

GitLab groups develop and maintain specific integrations inside the GitLab codebase, but that doesn't preclude you and your team from adding your own. At GitLab, one of our values is that everyone can contribute. If you're looking to contribute your own integration, or otherwise get involved with features in the Integrations area, [you can find open issues here](https://gitlab.com/groups/gitlab-org/-/issues?scope=all&state=opened&label_name[]=group%3A%3Aintegrations).

Feel free to reach out to the team directly if you need guidance or want
feedback on your work by using the ~"group::import and integrate" label on your open merge requests.

You can read more about our general contribution guidelines [here](https://gitlab.com/gitlab-org/gitlab/-/blob/master/CONTRIBUTING.md).

### Partnership

If your company is interested in partnering with GitLab, check out the [Partner with GitLab](https://about.gitlab.com/partners/technology-partners/integrate/) page for more info.

The Alliance team will support in establishing relationships and facilitating the ecosystem expansion with technology partners as owners of those relationships and work more hands-on with product teams in each of the domain areas. The Alliance Partner Integration Engineering (PIE) team, which is being newly assembled, will serve a solutions engineering role in guiding and supporting community contributors. The PIE team will guide any other potential partners in how to establish integrations. This team can and should scale based on the needs and impact of community contributions.
