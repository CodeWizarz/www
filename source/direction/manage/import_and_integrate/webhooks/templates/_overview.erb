Webhooks are a generic way for projects to be integrated with any other service. GitLab's APIs allow other services to _reach in to_ our data, Webhooks proactively send data to another service when certain events happen. These are increasingly important for external vendors, as they offer a key way to integrate with GitLab that doesn't require them building inside our codebase. Webhooks also give users, customers, and partners a more efficient pattern for receiving data triggered based on events, rather than inefficiently polling to see if any new events are available.

We want to increase the robustness of our webhook offering and align with other teams on how best to achieve an event-driven architecture. This includes making it easier to configure and maintain webhooks, as well as troubleshooting issues, easily redelivering events, and coordinating webhooks into usable workflows.

Our customers should enjoy learning about and using our webhooks to design creative solutions and intelligent workflows, and be motivated to share GitLab as an example of an incredible third-party developer experience.

As we establish core webhook functionality, we'll want to collaborate with product teams within CI, AppDev, and Security areas to define generic patterns that enable scalable integration that satisfies our customer demand.