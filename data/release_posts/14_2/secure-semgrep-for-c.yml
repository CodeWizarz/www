---
features:
  secondary:
  - name: "Semgrep SAST Analyzer for C"
    available_in: [core, premium, ultimate]
    gitlab_com: true
    documentation_link: 'https://docs.gitlab.com/ee/user/application_security/sast/#supported-languages-and-frameworks'
    reporter: tmccaslin
    stage: secure
    categories:
    - SAST
    issue_url: 'https://gitlab.com/gitlab-org/gitlab/-/merge_requests/68143'
    description: |
      In GitLab 13.12 we [released Semgrep for Javascript, TypeScript, and Python](https://about.gitlab.com/releases/2021/05/22/gitlab-13-12-released/#semgrep-sast-analyzer-for-javascript-typescript-and-python). Today we're expanding the Semgrep analyzer to support projects written in the C language. 
      [Developed in partnership](https://about.gitlab.com/releases/2021/04/22/gitlab-13-11-released/#gitlab--semgrep-upgrading-sast-for-the-future) with [r2c](https://r2c.dev/), the team behind Semgrep who share our mission to help developers write more secure code. After an extensive beta with hundreds of customers trying out our [experimental analyzer](https://docs.gitlab.com/ee/user/application_security/sast/#experimental-features), we're ready to start the transition to Semgrep.
      With 14.2, we're updating our managed 'SAST.gitlab-ci.yml' CI template to automatically run this new analyzer alongside our existing C/C++ analyzer, [Flawfinder](https://gitlab.com/gitlab-org/security-products/analyzers/flawfinder/). In a future release, we will fully disable Flawfinder once we add support for C++, but for now it will work in unison with Semgrep. We've done work to deduplicate findings, so you should not notice any difference in findings. If you include our 'SAST.gitlab-ci.yml', you don't need to do anything to start benefiting from the Semgrep analyzer. However if you override or manage your own SAST CI configuration, [you should update your CI configuration](https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/SAST.gitlab-ci.yml#L236). 
      We are excited about the future of this transition to bring you fast and wide coverage Static Application Security Testing (SAST). We'll continue to expand the Semgrep analyzer through new security detection rules as well as expanding coverage to other languages. We've created a [feedback issue](https://gitlab.com/gitlab-org/gitlab/-/issues/330578) where you can share your experience with this transition or ask questions. 
