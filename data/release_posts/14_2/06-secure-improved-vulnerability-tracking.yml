---
features:
  primary:
  - name: "Improved vulnerability tracking for GoSec, Semgrep, and Brakeman analyzers"
    available_in: [ultimate]
    documentation_link: 'https://docs.gitlab.com/ee/user/application_security/sast/analyzers'
    reporter: tmccaslin
    image_url: '/images/14_2/secure-improved-vuln-tracking.png'
    stage: secure
    categories:
    - SAST
    epic_url: 'https://gitlab.com/groups/gitlab-org/-/epics/5144'
    description: |
        Over the course of a project's life cycle, code is moved around. Refactoring, additions to the code base, removals, will all happen. Our current fingerprinting of findings is too coarse and results in a lot of duplicated findings over time as code is moved around. SAST and Secret Detection findings currently use [location within a file](https://gitlab.com/gitlab-org/security-products/analyzers/common/-/blob/master/issue/issue.go#L244-261) to declare where they exist within a codebase. Over time we lose the ability to track the movement of a finding as lines are added to, or removed from the file above the finding in question. This reality makes it hard to discern findings that are truly _new_, especially in the context of a merge request.

        We've developed a new vulnerability tracking algorithm that is more advanced and looks at the signature of a vulnerability rather than just its location. This new tracking improves the accuracy of identifying the same vulnerability that has moved locations due to code refactoring.

        We've now brought this new vulnerability tracking system to our GoSec (Go) analyzer, Semgrep (JavaScript, TypeScript, React, and Python), and Brakeman (Ruby and Ruby on Rails) analyzers. We will continue expanding coverage of this new vulnerability tracking system to other language analyzers in future releases.
