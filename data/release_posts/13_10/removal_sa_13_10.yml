---
removals:
- feature_name: "Migrate from SAST_DEFAULT_ANALYZERS to SAST_EXCLUDED_ANALYZERS"
  reporter: tmccaslin
  date_of_removal: June 22, 2021
  issue_url: 'https://gitlab.com/gitlab-org/gitlab/-/issues/229974'
  description: |
    Until GitLab 13.9, if you wanted to avoid running one particular GitLab SAST analyzer, you needed to remove it from the [long string of analyzers in the `SAST.gitlab-ci.yml` file](https://gitlab.com/gitlab-org/gitlab/-/blob/390afc431e7ce1ac253b35beb39f19e49c746bff/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml#L12) and use that to set the [`SAST_DEFAULT_ANALYZERS`](https://docs.gitlab.com/ee/user/application_security/sast/#docker-images) variable in your project's CI file. If you did this, it would exclude you from future new analyzers because this string hard codes the list of analyzers to execute. We avoid this problem by inverting this variable's logic to exclude, rather than choose default analyzers. 
    Beginning with 13.9, [we migrated](https://gitlab.com/gitlab-org/gitlab/-/blob/14fed7a33bfdbd4663d8928e46002a5ef3e3282c/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml#L13) to `SAST_EXCLUDED_ANALYZERS` in our `SAST.gitlab-ci.yml` file. We encourage anyone who uses a [customized SAST configuration](https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings) in their project CI file to migrate to this new variable. If you have not overridden `SAST_DEFAULT_ANALYZERS`, no action is needed. The CI/CD variable `SAST_DEFAULT_ANALYZERS` will be removed in GitLab 14.0, which will release on June 22, 2021.
- feature_name: "Remove secret_detection_default_branch job"
  reporter: tmccaslin
  date_of_removal: June 22, 2021
  issue_url: 'https://gitlab.com/gitlab-org/gitlab/-/issues/297269'
  description: |
    To ensure Secret Detection was scanning both default branches and feature branches we introduced two separate secret detection CI jobs in our managed [`Secret-Detection.gitlab-ci.yml`](https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Security/Secret-Detection.gitlab-ci.yml) template. These two CI jobs, `secret_detection_default_branch` and `secret_detection`, created confusion and complexity in the CI rules logic. As part of this deprecation, we are moving the `rule` logic into the `script` section which will determine how the `secret_detection` job is run (historic, on a branch, commits, etc).
    If you override or maintain custom versions of `SAST.gitlab-ci.yml` or `Secret-Detection.gitlab-ci.yml`, you must update your CI templates. We strongly encourage [inheriting and overriding our managed CI templates](https://docs.gitlab.com/ee/user/application_security/secret_detection/#custom-settings-example) to futureproof your CI templates. We will stop supporting the old `secret_detection_default_branch` job with GitLab 14.0, releasing June 22, 2021. 
- feature_name: "Remove SAST analyzer SAST_GOSEC_CONFIG variable in favor of
    custom rulesets"
  reporter: tmccaslin
  date_of_removal: June 22, 2021
  issue_url: 'https://gitlab.com/gitlab-org/gitlab/-/issues/301215'
  description: |
    With the release of [SAST Custom Rulesets](https://docs.gitlab.com/ee/user/application_security/sast/#customize-rulesets) in GitLab 13.5 we allow greater flexibility in configuration options for our Go analyzer (GoSec). As a result we no longer plan to support our less flexible [`SAST_GOSEC_CONFIG`](https://docs.gitlab.com/ee/user/application_security/sast/#analyzer-settings) analyzer setting. This variable was deprecated in GitLab 13.10. 
    If you override or leverage `SAST_GOSEC_CONFIG` in your CI file, you will need to update your SAST CI configuration or pin to an older version of the GoSec analyzer. We strongly encourage [inheriting and overriding our managed CI templates](https://docs.gitlab.com/ee/user/application_security/secret_detection/#custom-settings-example) to future proof your CI templates. We will remove the old `SAST_GOSEC_CONFIG variable` in GitLab 14.0, releasing June 22, 2021. 
