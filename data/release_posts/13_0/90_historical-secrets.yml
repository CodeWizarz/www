features:
  secondary:
    - name: "Secret Detection for the Full History of a Repository"
      available_in: [ultimate]
      gitlab_com: true
      documentation_link: 'https://docs.gitlab.com/ee/user/application_security/secret_detection/#full-history-secret-scan'
      video: "https://www.youtube-nocookie.com/embed/wDtc_K00Y0A"
      reporter: tmccaslin
      stage: secure
      categories:
        - 'Secret Detection'
      issue_url: 'https://gitlab.com/groups/gitlab-org/-/epics/2921'
      description: |
        GitLab 13.0 updates our [Secret Detection Security Scanning](https://docs.gitlab.com/ee/user/application_security/secret_detection/) to support a new configuration variable ([`SAST_GITLEAKS_HISTORIC_SCAN`](https://docs.gitlab.com/ee/user/application_security/secret_detection/#full-history-secret-scan)) to allow scanning the full history of a repository. This allows you to identify historical secrets that might be hiding in your older git commit history. Since introduction in [GitLab 11.9](https://about.gitlab.com/releases/2019/03/22/gitlab-11-9-released/#detect-secrets-and-credentials-in-the-repository), Secret Detection scanned the commit history of changes in a merge request. This would detect new secrets but would not identify secrets in the repository's older git history. This new functionality is particularly useful when you are enabling Secret Detection in a repository for the first time and you want to perform a full secret scan.  
        
        We have created a [short video walkthrough](https://youtu.be/wDtc_K00Y0A) showcasing how you can perform a historical secret scan via [scheduled pipeline](https://docs.gitlab.com/ee/ci/pipelines/schedules.html) or with a [manual pipeline](https://docs.gitlab.com/ee/ci/pipelines/#run-a-pipeline-manually).
