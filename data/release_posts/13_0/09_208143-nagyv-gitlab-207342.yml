features:
  primary:
    - name: "GitLab HTTP Terraform state backend"
      available_in: [core, starter, premium, ultimate]
      gitlab_com: true
      documentation_link: 'https://docs.gitlab.com/ee/user/infrastructure/'
      image_url: '/images/13_0/terraform-gitlab-backend.png'
      reporter: nagyv-gitlab
      stage: deploy
      categories:
        - 'Infrastructure as Code'
      issue_url: 'https://gitlab.com/groups/gitlab-org/-/epics/2673'
      description: |
        Users of Terraform know the pain of setting up their state file (a map of your configuration to real-world resources that also keeps track of additional metadata). The process includes starting a new Terraform project and setting up a third party backend to store the state file that is reliable, secure, and outside of your git repo. 

        Many users wanted a simpler way to set up their state file storage without involving additional services or setups. Starting with GitLab 13.0, GitLab can be used as an HTTP backend for Terraform, eliminating the need to set up state storage separately for every new project.

        The GitLab HTTP Terraform state backend allows for a seamless experience with minimal configuration, and the ability to store your state files in a location controlled by the GitLab instance. They can be accessed using Terraform's [HTTP backend](https://www.terraform.io/docs/backends/types/http.html), leveraging GitLab for authentication. Users can migrate to the GitLab HTTP Terraform backend easily, while also accessing it from their local terminals.

        The GitLab HTTP Terraform state backend supports:

        *  Multiple named state files per project
        *  Locking
        *  Object storage
        *  Encryption at rest

        It is available both for GitLab Self-Managed installations and on GitLab.com.
