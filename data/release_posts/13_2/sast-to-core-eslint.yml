features:
  secondary:
    - name: "JavaScript & TypeScript SAST analyzer available for all"
      available_in: [core, starter, premium, ultimate]
      documentation_link: 'https://docs.gitlab.com/ee/user/application_security/sast/#supported-languages-and-frameworks'
      image_url: '/images/13_2/eslint-secure.png'
      reporter: tmccaslin
      stage: secure
      categories:
        - 'SAST'
      issue_url: 'https://gitlab.com/gitlab-org/gitlab/-/issues/34707'
      description: |
        We want to help developers write better code and worry less about common security mistakes. [Static Application Security Testing (SAST)](https://docs.gitlab.com/ee/user/application_security/sast/) helps prevent security vulnerabilities by allowing developers to easily identify common security issues as code is being contributed and to mitigate proactively. As part of our [community stewardship commitment](/company/stewardship/#promises) we are making our JavaScript & TypeScript [SAST analyzer](https://docs.gitlab.com/ee/user/application_security/sast/#supported-languages-and-frameworks) (ESLint) available in every [GitLab tier](/pricing/). This will allow **ALL** GitLab users developing in JavaScript or TypeScript to leverage [SAST security Scans](https://docs.gitlab.com/ee/user/application_security/sast/) for their projects.
        As part of this move, we have deprecated our existing TSLint Analyzer, as its functionality is now present in ESLint. You can learn more about this in our [deprecation notice](#deprecation-and-planned-removal-of-tslint-secure-analyzers).
        We will continue to move other open source (OSS) SAST analyzers to Core. You can follow our [SAST to Core epic](https://gitlab.com/groups/gitlab-org/-/epics/2098) to see when other analyzers will become available, and even contribute to this effort.
