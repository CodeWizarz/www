---
features:
  secondary:
  - name: "Automatic response to leaked Google Cloud secrets"
    available_in: [gold]
    documentation_link: 'https://docs.gitlab.com/ee/user/application_security/secret_detection/automatic_response.html'
    reporter: connorgilbert
    stage: secure
    categories:
    - Secret Detection
    issue_url: 'https://gitlab.com/groups/gitlab-org/-/epics/8835'
    description: |
        We've integrated Secret Detection with Google Cloud to better protect customers who use GitLab to develop applications on Google Cloud. Now, if an organization leaks a Google Cloud credential to a public project on GitLab.com, GitLab can automatically protect the organization by working with Google Cloud to protect the account.

        Secret Detection searches for three types of secrets issued by Google Cloud:

        - [Service account keys](https://cloud.google.com/iam/docs/best-practices-for-managing-service-account-keys)
        - [API keys](https://cloud.google.com/docs/authentication/api-keys)
        - [OAuth client secrets](https://support.google.com/cloud/answer/6158849#rotate-client-secret)

        Publicly leaked secrets are sent to Google Cloud after they're discovered. Google Cloud verifies the leaks, then works to protect customer accounts against abuse.

        This integration is on by default for projects that have [enabled Secret Detection](https://docs.gitlab.com/ee/user/application_security/secret_detection/#enable-secret-detection) on GitLab.com. Secret Detection scanning is available in all GitLab tiers, but an automatic response to leaked secrets is currently only available in Ultimate projects.

        See [the blog post about this integration](https://about.gitlab.com/blog/2023/06/13/how-secret-detection-can-proactively-revoke-leaked-credentials/) for further details.
