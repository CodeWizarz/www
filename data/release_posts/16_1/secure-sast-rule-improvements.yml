---
features:
  secondary:
  - name: "Clearer guidance and better coverage for SAST rules"
    available_in: [core, premium, ultimate]
    documentation_link: 'https://docs.gitlab.com/ee/user/application_security/sast/analyzers'
    reporter: connorgilbert
    stage: secure
    categories:
    - SAST
    issue_url: 'https://gitlab.com/gitlab-org/gitlab/-/issues/382119'
    description: |
      We've updated the GitLab SAST rules to:

      - More clearly explain the type of weakness each rule targets and how to fix it. We've updated the description and guidance text for C, C#, Go, and Java rules so far. The remaining languages are tracked in [issue 382119](https://gitlab.com/gitlab-org/gitlab/-/issues/382119).
      - Catch additional vulnerabilities in existing Java rules.

      These improvements are part of a collaboration between the GitLab Static Analysis and Vulnerability Research teams to [improve the default Static Analysis rulesets](https://gitlab.com/groups/gitlab-org/-/epics/8170).
      We would welcome any feedback on the default rules for SAST, Secret Detection, and IaC Scanning in [epic 8170](https://gitlab.com/groups/gitlab-org/-/epics/8170).

      For more details on the changes to GitLab SAST rules, see the [CHANGELOG](https://gitlab.com/gitlab-org/security-products/sast-rules/-/blob/main/CHANGELOG.md).
      As of GitLab 16.1, the [`sast-rules` project](https://gitlab.com/gitlab-org/security-products/sast-rules) is the single source of all GitLab-managed default rules used in the Semgrep-based SAST analyzer.
