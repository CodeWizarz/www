features:
  secondary:
  - name: "Coverage-guided fuzz testing corpus management"
    available_in: [ultimate]
    documentation_link: 'https://docs.gitlab.com/ee/user/application_security/coverage_fuzzing/#corpus-registry'
    image_url: '/images/14_8/covfuzz-corpus-management.png'
    reporter: derekferguson
    stage: secure
    categories:
    - 'Fuzz Testing'
    issue_url: 'https://gitlab.com/groups/gitlab-org/-/epics/5017'
    description: |
      In previous versions of GitLab, if you wanted to use a seed corpus in a coverage-guided fuzz test, you would need to upload the file to a location and define the path to the corpus via the `COVFUZZ_SEED_CORPUS` variable. The management of any corpus that you might use in a test was completely manual, including updating the corpus after running a test. With GitLab 14.8, corpus management is now integrated into the Security & Compliance Configuration section. By setting the `COVFUZZ_USE_REGISTRY` to `"true"`, setting the `COVFUZZ_GITLAB_TOKEN` variable to a personal access token, and specifying the corpus name via the `COVFUZZ_CORPUS_NAME` variable, corpus management can be easily integrated into your testing workflow. Corpus files can be automatically added to the registry from pipelines as coverage-guided fuzz tests are run. They can also be automatically updated with the artifacts output from a coverage-guided fuzz test job, rather than only manually updated. If a corpus is no longer needed, you can delete it directly from the registry page. Corpus files that are listed in the registry can also be downloaded for inspection or use elsewhere. This management UI provides a major improvement to the coverage-guided fuzz testing experience when seed corpuses are used.
