---
    features:
      secondary:
      - name: "Faster, easier Scala scanning in SAST"
        available_in: [core, premium, ultimate]
        documentation_link: 'https://docs.gitlab.com/ee/user/application_security/sast/#supported-languages-and-frameworks'
        reporter: connorgilbert
        stage: secure
        categories:
        - SAST
        issue_url: 'https://gitlab.com/gitlab-org/gitlab/-/issues/362958'
        description: |
          GitLab Static Application Security Testing (SAST) now offers Semgrep-based scanning for Scala code.
          This work builds on our previous introduction of Semgrep-based Java scanning [in GitLab 14.10](https://about.gitlab.com/releases/2022/04/22/gitlab-14-10-released/#faster-easier-java-scanning-in-sast).
          As with the other languages we have [transitioned to Semgrep-based scanning](https://docs.gitlab.com/ee/user/application_security/sast/analyzers.html#transition-to-semgrep-based-scanning), Scala scanning coverage uses GitLab-managed detection rules to detect a variety of security issues.
    
          The new Semgrep-based scanning runs significantly faster than the existing analyzer based on SpotBugs.
          It also doesn't need to compile your code before scanning, so it's simpler to use.
          
          GitLab's Static Analysis and Vulnerability Research teams worked together to translate rules to the Semgrep format, preserving most existing rules.
          We also updated, refined, and tested the rules as we converted them.
    
          If you use [the GitLab-managed SAST template](https://docs.gitlab.com/ee/user/application_security/sast/#configure-sast-in-your-cicd-yaml) ([`SAST.gitlab-ci.yml`](https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml)), both Semgrep-based and SpotBugs-based analyzers now run whenever Scala code is found.
          In GitLab Ultimate, the Security Dashboard combines findings from the two analyzers, so you won't see duplicate vulnerability reports.
    
          In a future release, we'll change [the GitLab-managed SAST template](https://docs.gitlab.com/ee/user/application_security/sast/#configure-sast-in-your-cicd-yaml) ([`SAST.gitlab-ci.yml`](https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml)) to only run the Semgrep-based analyzer for Scala code.
          The SpotBugs-based analyzer will still scan code for other languages, including Groovy and Kotlin.
          You can [disable SpotBugs early](https://gitlab.com/gitlab-org/gitlab/-/issues/412060) if you prefer to use only Semgrep-based scanning.
    
          If you have any questions, feedback, or issues with the new Semgrep-based Scala scanning, please [file an issue](https://gitlab.com/gitlab-org/gitlab/-/issues/new?issuable_template=Bug&add_related_issue=362958&issue[title]=Feedback%20on%20SAST%20Semgrep%20Scala%20support&issue[description]=%2Flabel%20~%22group%3A%3Astatic%20analysis%22), we'll be glad to help.
    
