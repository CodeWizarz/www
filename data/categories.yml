# Categories that GitLab has offerings in. Drives /handbook/product/categories

# Format description and documentation for this file is in the handbook
# https://about.gitlab.com/handbook/marketing/digital-experience/website/#working-with-stages-groups-and-categories

# Manage

user_management:
  name: 'User Management'
  stage: govern
  feature_labels:
    - user management
  documentation: https://docs.gitlab.com/ee/user/profile/account/create_accounts.html
  direction: /direction/govern/auth/user-management
  description: 'GitLab user lifecycle management. Includes provisioning users and their attributes. Does not include user profile, groups, projects, or sharing.'
  roi: true
  available: 2017-10-01
  viable: 2018-06-22
  complete:
  lovable:
  maturity: viable
  dogfooding_status: Active
  marketing: true
  priority_level: high

system_access:
  name: 'System Access'
  stage: govern
  feature_labels:
    - saml
    - ldap
    - oauth
    - authentication
    - 2FA
    - permissions
  documentation: https://docs.gitlab.com/ee/administration/auth/
  direction: /direction/govern/auth/system-access
  description: 'Authentication through all points of GitLab - UI, CLI, API. Does not include authentication within other stages of GitLab (for example, job tokens ). Also includes what the individual/process has access to once they authenticate, determined by their role.'
  roi: true
  available: 2017-10-01
  viable: 2018-06-22
  complete: 2019-08-22
  lovable:
  maturity: complete
  dogfooding_status: Active
  marketing: true

importers:
  name: 'Importers'
  label: 'Category:Importers'
  stage: manage
  feature_labels:
    - import
    - project export
    - project import
  description: 'Import existing work into GitLab from a wide variety of sources.'
  documentation: https://docs.gitlab.com/ee/user/project/import/
  direction: /direction/manage/import_and_integrate/importers/
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/gitlab-org/gitlab/-/issues/331469
  dogfooding_group: Professional Services
  ux_scorecard_score: '-'
  marketing: false
  roi: false
  priority_level: high

internationalization:
  name: 'Internationalization'
  label: 'Category:Internationalization'
  stage: manage
  documentation: https://docs.gitlab.com/ee/development/i18n/
  direction: /direction/manage/import_and_integrate/internationalization/
  description: 'Support for crowd-sourced internationalization of GitLab.'
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/gitlab-org/gitlab/-/issues/339601
  dogfooding_group: All (non-English)
  ux_scorecard_score: '-'
  marketing: false
  roi: false
  priority_level: low

# Plan

team_planning:
  name: Team Planning
  stage: plan
  label: Category:Team Planning
  feature_labels:
    - assignees
    - move and clone work items
    - work item detail page
    - status
    - issue and work items weight
    - issue and work items dates
    - issues
    - labels
    - markdown
    - milestones
    - iterations
    - notifications
    - todos
    - time tracking
    - discussions
    - emojis
    - internal notes
    - work items
    - MR linking to issues
    - development work items widget
    - work items settings and configuration
    - description

  marketing_page:
  documentation: https://docs.gitlab.com/ee/topics/plan_and_track.html#team-planning
  direction: /direction/plan/project_management/team_planning/
  description: 'Plan, organize, and track team progress using Scrum, Kanban, SAFe, and other Agile methodologies.'
  roi: true
  available: 2017-01-01
  viable: 2018-01-01
  complete: 2023-12-22
  lovable: 2024-12-22
  new_maturity: true
  maturity: viable
  marketing: true
  priority_level: high
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/450
  ux_scorecard_score: D
  dogfooding_status: Active
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/issues/tracking-your-work-with-issues/about-issues

portfolio_management:
  name: 'Portfolio Management'
  stage: plan
  label: Category:Portfolio Management
  feature_labels:
    - epics
    - sub epics
    - issues and epic lists
    - issue and epic boards
    - issue and epic dates
    - roadmaps
    - health status
    - linked items
    - parent/child items widget
    - relationships of work items
    - epic data rollups
    - work items filters
    - issue and epic filters
    - bulk editing
    - import/export of work items
    - quick actions
  marketing_page: /stages-devops-lifecycle/plan/
  documentation: https://docs.gitlab.com/ee/topics/plan_and_track.html#portfolio-management
  direction: /direction/plan/portfolio_management/
  description: 'Plan upcoming work by creating Epics and mapping all relevant Issues to them. Create and track against multiple milestones at the portfolio level to see status over time and review progress towards your goals'
  roi: false
  available: 2018-01-01
  viable: 2019-05-22
  complete: 2024-12-31
  lovable: 2025-07-01
  maturity: viable
  marketing: true
  priority_level: high
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/489
  ux_scorecard_score: C
  body: |
    ## Plan and manage work between multiple groups and projects with Epics and Milestones

    ### Drive Alignment

    * Plan and deliver with clear objectives and timelines
    * Create and link multiple epics together to represent complex development plans
    * Map out time based delivery schedules and agile sprints with milestones

    ### Manage portfolio delivery

    * Communicate status and future changes
    * Prioritize epics to ensure alignment
    * Identify cross-project relationships
    * Track status and delivery
  dogfooding_status: Active
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/issues/trying-out-the-new-projects-experience/about-projects

requirements_management:
  name: 'Requirements Management'
  stage: plan
  label: Category:Requirements Management
  documentation: https://docs.gitlab.com/ee/user/project/requirements/
  direction: /direction/plan/
  description: 'Gather and manage the use cases and requirements to meet business objectives.'
  roi: false
  available: 2020-02-22
  feature_labels:
    - requirements
    - link requirements to test cases
    - merge request to issue traceability
    - issue description diff
  maturity: minimal
  marketing: false
  priority_level: high
  ux_scorecard_link:
  ux_scorecard_score:
  dogfooding_status: Not Planned

quality_management:
  name: 'Quality Management'
  label: Category:Quality Management
  stage: plan
  documentation: https://docs.gitlab.com/ee/ci/test_cases/index.html
  direction: /direction/plan/
  description: 'Plan and track testing and quality of your product.'
  roi: false
  available: 2020-11-22
  feature_labels:
    - test cases
  maturity: minimal
  marketing: false
  priority_level: low
  ux_scorecard_link:
  ux_scorecard_score:
  dogfooding_status: Active

design_management:
  name: 'Design Management'
  label: Category:Design Management
  stage: plan
  documentation: https://docs.gitlab.com/ee/user/project/issues/design_management.html
  direction: /direction/plan/
  description: 'Upload design assets to GitLab issues for easy collaboration on designs with a single source of truth.'
  roi: false
  available: 2019-08-22
  viable: 2020-12-22
  feature_labels:
    - design assets
    - link issues to designs
    - figma plugin
  maturity: viable
  new_maturity: true
  marketing: false
  priority_level: medium
  ux_scorecard_link:
  ux_scorecard_score:
  dogfooding_status: Active

dora_metrics:
  name: 'DORA Metrics'
  stage: plan
  feature_labels:
    - DORA Metrics
  documentation: https://docs.gitlab.com/ee/user/analytics/dora_metrics
  marketing_page: /solutions/value-stream-management/dora/
  direction: /direction/plan/dora_metrics/
  description: "Drive software engineering excellence with GitLab's out-of-the-box DORA metrics."
  available: 2022-10-01
  viable: 2024-01-01
  complete: 2024-06-01
  lovable: 2025-06-01
  marketing: true
  maturity: minimal
  priority_level: high
  dogfooding_status: Active

value_stream_management:
  name: 'Value Stream Management'
  stage: plan
  feature_labels:
    - value stream analytics
  documentation: https://docs.gitlab.com/ee/user/analytics/value_stream_analytics
  marketing_page: /solutions/value-stream-management/
  direction: /direction/plan/value_stream_management/
  description: 'Visualize, manage and optimize the flow of work through the DevOps lifecycle value stream.'
  roi: false
  available: 2017-01-01
  viable: 2023-09-28
  complete: 2024-09-01
  lovable: 2025-06-01
  maturity: viable
  dogfooding_status: Active
  new_maturity: true
  marketing: true
  priority_level: high
  ux_scorecard_link: https://gitlab.com/groups/gitlab-org/-/epics/1454
  ux_scorecard_score: C

devops_reports:
  name: 'DevOps Reports'
  stage: plan
  feature_labels:
    - convdev
    - devops score
  documentation: https://docs.gitlab.com/ee/administration/analytics/dev_ops_report.html
  direction: /direction/plan/devops-reports/
  description: 'Get an overview of how well your organization is adopting DevOps and to see the impact on your velocity.'
  roi: false
  available: 2017-01-01
  viable:
  complete:
  lovable:
  maturity: minimal
  dogfooding_status: Active
  ux_scorecard_score: '-'
  new_maturity: true
  marketing: true
  priority_level: high

# Create

navigation:
  name: 'Navigation & Settings'
  stage: manage
  description: 'How users easily discover and configure product features.'
  documentation:
  direction: /direction/manage/foundations/navigation_settings/
  marketing: false
  roi:
  priority_level:

source_code_management:
  name: 'Source Code Management'
  stage: create
  feature_labels:
    - encoding
    - forking
    - lfs
    - mirror
    - repository
    - 'Category:Source Code Management'
    - 'Source Code Management::Snippets'
  marketing_page: /stages-devops-lifecycle/source-code-management/
  documentation: https://docs.gitlab.com/ee/user/project/repository/
  direction: /direction/create/source_code_management/
  description: 'Source code management enables coordination, sharing, and collaboration across an entire software development team. GitLab supports teams to rapidly collaborate and iterate on new features and deliver business value.'
  link: https://gitlab.com/users/sign_in
  link_description: 'Try GitLab free'
  roi: true
  available: 2011-10-08
  viable: 2012-08-24
  complete: 2015-09-22
  lovable: 2017-03-22
  maturity: lovable
  dogfooding_status: Active
  ux_scorecard_score: '-'
  marketing: true
  priority_level: high
  competitors:
    github:
      maturity: lovable

code_review_workflow:
  name: 'Code Review Workflow'
  stage: create
  feature_labels:
    - image diff
    - diff
    - approvals
    - merge requests
  marketing_page: /stages-devops-lifecycle/create/
  documentation: https://docs.gitlab.com/ee/user/project/merge_requests/
  direction: /direction/create/code_review_workflow/
  description: 'Review code, discuss changes, share knowledge, and identify defects in code among distributed teams via asynchronous review and commenting. Automate, track and report code reviews.'
  link: https://gitlab.com/users/sign_in
  link_description: 'Sign up for GitLab.com'
  roi: true
  available: 2011-12-20
  viable: 2013-08-13
  complete: 2017-03-22
  lovable: 2019-05-22
  maturity: lovable
  dogfooding_status: Active
  marketing: true
  priority_level: high
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/441
  ux_scorecard_score: C/D
  body: |
    ## Streamline code review and approvals

    Enable your development team to collaborate, review and improve their code.

    ### Collaborate

    * Review, comment, and improve each other's code.
    * Approval workflow enables reviewing and approving changes.
    * Inline comments enable asynchronous review and feedback.
  competitors:
    github:
      maturity: lovable

wiki:
  name: "Wiki"
  stage: plan
  documentation: https://docs.gitlab.com/ee/user/project/wiki/
  direction: /direction/plan/knowledge/wiki/
  description: "Share documentation and organization information with a built in wiki."
  roi: false
  available: 2017-10-15
  viable: 2017-10-15
  complete: 2024-10-22
  lovable: 2025-12-22
  maturity: viable
  marketing: true
  dogfooding_status: Active
  ux_scorecard_score: '-'
  priority_level: low
  competitors:
    github:
      maturity: lovable

pages:
  name: "Pages"
  stage: plan
  marketing_page: /stages-devops-lifecycle/pages/
  documentation: https://docs.gitlab.com/ee/user/project/pages/
  direction: /direction/plan/knowledge/pages/
  description: "Use any static site generator to create websites that are easily managed and deployed by GitLab."
  roi: false
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2017-01-01
  lovable: 2024-12-22
  maturity: complete
  marketing: true
  priority_level: low
  dogfooding_status: Active
  dogfooding_group: All
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/412
  ux_scorecard_score: C
  label: 'Category:Pages'
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages

gitlab_docs:
  name: 'GitLab Documentation Site'
  stage: manage
  label: Category:Docs Site
  feature_labels:
    - gitlab docs
  documentation: 'https://docs.gitlab.com/ee/development/documentation/site_architecture/'
  description: 'Improve and maintain the features, style, and build process for the GitLab Documentation website.'
  direction: /direction/manage/foundations/gitlab_docs/
  roi: false
  marketing: false
  dogfooding_status: Active
  ux_scorecard_score: '-'
  priority_level: medium

web_ide:
  name: 'Web IDE'
  stage: create
  feature_labels:
    - 'Category:Web IDE'
    - 'Web IDE::Live Preview'
  documentation: https://docs.gitlab.com/ee/user/project/web_ide/index.html
  direction: /direction/create/ide/web_ide/
  description: 'A full featured Integrated Development Environment (IDE) built into GitLab so you can start contributing on day one with no need to spend days getting all the right packages installed into your local dev environment.'
  roi: true
  available: 2018-01-01
  viable: 2019-05-22
  complete: 2023-10-22
  lovable: 2024-11-22
  maturity: viable
  marketing: true
  dogfooding_status: Active
  ux_scorecard_score: '-'
  priority_level: medium
  competitors:
    github:
      maturity: lovable
      documentation: https://docs.github.com/en/codespaces

gitlab_cli:
  name: 'GitLab CLI'
  stage: create
  documentation: https://docs.gitlab.com/ee/integration/glab
  direction: /direction/create/gitlab_cli/
  description: 'A GitLab CLI to support developers where they work and how they work with GitLab.'
  roi: true
  available: 2020-05-22
  viable: 2022-07-22
  complete: 2024-05-22
  lovable: 2025-05-22
  maturity: viable
  marketing: true
  priority_level: medium
  dogfooding_status: Planned
  competitors:
    github:
      maturity: lovable
      description: GitHub is deeply integrated with developer tools.

editor_extensions:
  name: 'Editor Extensions'
  stage: create
  documentation: https://docs.gitlab.com/ee/editor_extensions/
  direction: /direction/create/editor_extensions/
  description: 'Editor Extensions to support integrations between GitLab and Local Development Environments.'
  roi: true
  available: 2023-05-17
  viable: 2024-05-22
  complete: 2025-05-22
  lovable: 2026-05-22
  maturity: minimal
  marketing: false
  priority_level: high
  dogfooding_status: Active
  competitors:
    github:
      maturity: lovable
      description: GitHub is deeply integrated with developer tools.

remote_development:
  name: 'Remote Development'
  stage: create
  documentation: https://docs.gitlab.com/ee/user/project/remote_development/
  feature_labels:
    - 'Category:Remote Development'
  direction: /direction/create/ide/remote_development/
  description: 'Accelerate your workflow and ensure a consistent developer experience by ditching your local environment and moving to standardized, secure, remote development environments.'
  roi: false
  available: 2022-12-22
  viable: 2024-06-22
  complete: 2025-09-22
  lovable: 2026-12-22
  maturity: minimal
  dogfooding_status: Planned
  marketing: true
  opportunity: Core

api:
  name: API
  stage: manage
  label: 'Category:API'
  direction: /direction/manage/import_and_integrate/api/
  documentation: https://docs.gitlab.com/ee/api/rest/index.html
  description: 'GitLab offers a REST and GraphQL API to give customers options on how to best integrate with GitLab.'
  roi: false
  marketing: false

integrations:
  name: Integrations
  stage: manage
  label: 'Category:Integrations'
  direction: /direction/manage/import_and_integrate/integrations/
  documentation: https://docs.gitlab.com/ee/integration/
  description: 'Integrations are places where the GitLab product connects to features and services from other products. These integrations seek to offer our customers a seamless experience between these products, and range from lightweight features like Slack notifications for projects, to deep and complex integrations with Atlassian JIRA that connect a wide array of functionality throughout the GitLab product.'
  roi: false
  marketing: true
  maturity: viable
  available: 2017-01-01
  viable: 2018-01-22
  complete:
  lovable:
  dogfooding_status: Active


webhooks:
  name: Webhooks
  stage: manage
  label: 'Category:Webhooks'
  direction: /direction/manage/import_and_integrate/webhooks/
  documentation: https://docs.gitlab.com/ee/user/project/integrations/webhooks.html
  description: "Webhooks are a generic way for projects to be integrated with any other service. GitLab's Webhooks proactively send data to another service when certain events happen. These are increasingly important for external vendors, as they offer a key way to integrate with GitLab that doesn't require them building inside our codebase."
  roi: false
  marketing: false

design_system:
  name: Design System
  stage: manage
  documentation: https://design.gitlab.com
  direction: /direction/manage/foundations/design_system/
  description: "GitLab's design system called Pajamas. Used internally to power GitLab in order to improve user interface consistency and accessibility."
  feature_labels:
    - Category:Foundations
  roi: false
  marketing: false

# Verify

continuous_integration:
  name: 'Continuous Integration (CI)'
  label: Category:Continuous Integration
  stage: verify
  feature_labels:
    - 'ci::usage'
    - 'ci::processing'
    - 'ci::permissions'
    - 'ci::api-interactions'
    - 'ci::notifications'
    - 'ci::metrics'
    - 'ci::merge-request'
    - 'ci::scaling'
    - 'CI jobs'
    - 'CI reports'
    - 'CI minutes'
    - 'pipeline schedules'
    - 'CI/CD Settings'
  marketing_page: /features/continuous-integration/
  documentation: https://docs.gitlab.com/ee/ci/
  direction: /direction/verify/continuous_integration/
  description: 'Gain the confidence to ship at blistering speed and immense scale with automated builds, testing, and out-of-the-box security to verify each commit moves you forward.'
  roi: true
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2017-01-01
  lovable: 2024-06-22
  maturity: complete
  marketing: true
  ux_scorecard_link: https://gitlab.com/gitlab-org/ux-research/-/issues/330
  ux_scorecard_score: C
  dogfooding_status: Active
  dogfooding_group: Development
  competitors:
    github:
      maturity: lovable
      documentation: https://docs.github.com/en/actions
  # body: |
  #   ![GitLab CI/CD](/images/ci/ci-cd-test-deploy-illustration_2x.png)
  #
  #   ## Simple to use
  #
  #     - GitLab CI comes built-in to GitLab's single DevOps application for a seamless experience.
  #     - Developers can self-service and easily collaborate with QA teams by working from versionable, configuration YAML file.
  #     - CI results appear together with code and comments in single place so you get one conversation thread with visibility into all the info you need to review, troubleshoot, and improve faster.
  #     - Seemless experience together with [GitLab CD release automation](/product/cd).
  #
  #   ## Rated #1 in the Forrester CI Wave™
  #
  #   ![Forrester CI Wave](/images/home/forrester-ci-wave-graphic.svg)
  #
  #   “GitLab supports development teams with a well-documented installation and configuration processes, an easy-to-follow UI, and a flexible per-seat pricing model that supports self service. GitLab’s vision is to serve enterprise-scale, integrated software development teams that want to spend more time writing code and less time maintaining their tool chain.” - Forrester CI Wave™
  #
  #   [Learn more](/resources/forrester-wave-ci-2017/){: .btn .cta-btn .accent}
  #
  #   ## Powerful capabilities
  #
  #     - **Multi-platform**: Execute builds on Unix, Windows, macOS, and any other platform that supports Go.
  #     - **Multi-language**: Build scripts are command line driven and work with Java, PHP, Ruby, C, and any other language.
  #     - **Stable**: Builds run on a different machine than GitLab.
  #     - **Parallel builds**: GitLab CI/CD splits builds over multiple machines, for fast execution.
  #     - **Realtime logging**: A link in the merge request takes you to the current build log that updates dynamically.
  #     - **Versioned tests**: A [.gitlab-ci.yml](https://docs.gitlab.com/ee/ci/yaml/) file that contains your tests, allowing everyone to contribute changes and ensuring every branch gets the tests it needs.
  #     - **Pipeline**: Define multiple jobs per stage and you can [trigger other builds](https://docs.gitlab.com/ee/ci/triggers/).
  #     - **Autoscaling**: [Automatically spin up and down VM's](/releases/2016/03/29/gitlab-runner-1-1-released/) to make sure your builds get processed immediately and minimize costs.
  #     - **Build artifacts**: Upload binaries and other build artifacts to GitLab and browse and download them.
  #     - **Test locally**: [Multiple executors](https://docs.gitlab.com/runner/executors/) let you [reproduce tests locally](https://gitlab.com/gitlab-org/gitlab-runner/issues/312).
  #     - **Docker support**: Use custom Docker images, spin up [services](https://docs.gitlab.com/ee/ci/services/) as part of testing, [build new Docker images](https://docs.gitlab.com/ee/ci/docker/using_docker_build.html), even run on [Kubernetes](/solutions/kubernetes/).
  #
  #   ## More information
  #
  #     - Read how to use GitLab CI in the [GitLab CI/CD documentation](https://docs.gitlab.com/ee/ci/)
  #     - View a [demo of GitLab CI/CD](https://www.youtube.com/watch?v=1iXFbchozdY)
  #     - [HumanGeo switched from Jenkins to GitLab and cut costs by 1/3](/blog/2017/11/14/humangeo-switches-jenkins-gitlab-ci/)
  #     - [Ticketmaster sped up build times by 15x with GitLab CI](/blog/2017/06/07/continuous-integration-ticketmaster/)
  #     - View a step-by-step guide to [migrate from Jenkins to GitLab](https://www.youtube.com/watch?v=RlEVGOpYF5Y)
  #     - [Autoscale GitLab CI runners and save 90% on EC2 costs](/blog/2017/11/23/autoscale-ci-runners/)

pipeline_composition:
  name: 'Pipeline Composition'
  label: Category:Pipeline Composition
  stage: verify
  feature_labels:
    - 'ci::persistence'
    - 'ci::variables'
    - 'ci::rules'
    - 'ci::integrations'
    - 'ci::bridge-pipelines'
    - 'ci::dag'
    - 'ci::pipeline-graphs'
  marketing_page: /features/continuous-integration/
  documentation: https://docs.gitlab.com/ee/ci/
  direction: /direction/verify/pipeline_authoring/
  description: 'Category containing features associated with edit/compose your `.gitlab-ci.yml`.'
  roi: false
  available: 2021-01-22
  viable: 2021-06-22
  complete: 2023-11-22
  lovable: 2024-01-22
  maturity: viable
  marketing: false
  dogfooding_status: Active
  dogfooding_group: All
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/1376
  ux_scorecard_score: D
  competitors:
    github:
      maturity: lovable

secrets_management:
  name: 'Secrets Management'
  stage: verify
  feature_labels:
    - 'ci::variables'
    - 'ci job token'
  direction: /direction/verify/secrets_management/
  description: 'Manage secrets and protect sensitive data to enable GitLab, or a component built within GitLab to connect to other systems.'
  documentation: https://docs.gitlab.com/ee/ci/variables/
  roi: false
  available: 2019-12-22
  viable: 2024-03-30
  complete:
  lovable:
  maturity: minimal
  new_maturity: true
  marketing: true
  dogfooding_status: Active
  dogfooding_issue: 'https://gitlab.com/gitlab-org/gitlab/-/issues/?sort=created_date&state=opened&label_name%5B%5D=Dogfooding&label_name%5B%5D=Category%3ASecrets%20Management&first_page_size=20'
  dogfooding_group: Infrastructure
  competitors:
    github:
      maturity: viable
      documentation: https://docs.github.com/en/actions/security-guides/encrypted-secrets

runner:
  name: 'GitLab Runner Core'
  label: 'Category:Runner Core'
  documentation: https://docs.gitlab.com/runner/
  direction: /direction/verify/runner_core/
  stage: verify
  description: 'GitLab Runner is the execution agent that is used to run your CI jobs and send the results back to GitLab.'
  roi: false
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2017-01-01
  lovable: 2017-01-01
  maturity: lovable
  marketing: false
  dogfooding_status: Active
  dogfooding_group: All
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/600
  ux_scorecard_score: D
  competitors:
    github:
      maturity: lovable

runner_saas:
  name: 'GitLab Runner SaaS'
  label: 'Category:Runner SaaS'
  documentation: https://docs.gitlab.com/ee/ci/runners/
  direction: /direction/verify/runner_saas/
  stage: verify
  description: 'GitLab hosted Runners for GitLab CI on SaaS'
  roi: true
  marketing: false
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2024-01-22
  lovable: 2024-05-22
  maturity: viable
  dogfooding_status: Active
  dogfooding_group: All
  ux_scorecard_link:
  ux_scorecard_score:
  competitors:
    github:
      maturity: complete
    circleci:
      maturity: complete

runner_fleet:
  name: 'Runner Fleet'
  label: 'Category:Runner Fleet'
  documentation: https://docs.gitlab.com/ee/administration/admin_area.html#administering-runners
  direction: /direction/verify/runner_fleet/
  stage: verify
  description: 'GitLab Runner fleet management at enterprise scale'
  roi: false
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2022-11-22
  lovable: 2024-08-22
  maturity: complete
  marketing: false
  dogfooding_status: Active
  dogfooding_group: All
  ux_scorecard_link:
  ux_scorecard_score:
  competitors:
    github:
      maturity: viable
      documentation: https://docs.github.com/en/actions/hosting-your-own-runners

code_testing:
  name: 'Code Testing and Coverage'
  label: Category:Code Testing and Coverage
  documentation: https://docs.gitlab.com/ee/ci/unit_test_reports.html
  direction: /direction/verify/code_testing/
  stage: verify
  feature_labels:
    - 'testing::code testing'
    - 'testing::coverage'
    - 'testing::accessibility'
    - 'testing::browser performance'
    - 'testing::load performance'
  description: 'Code testing and coverage ensure that individual components built within a pipeline perform as expected, and are an important part of a Continuous Integration framework.'
  roi: false
  available: 2017-01-01
  viable: 2021-01-12
  complete: 2024-07-22
  lovable: 2024-11-18
  maturity: viable
  marketing: true
  dogfooding_status: Active
  dogfooding_group: Quality

build_artifacts:
  name: 'Build Artifacts'
  label: Category:Build Artifacts
  stage: verify
  documentation: https://docs.gitlab.com/ee/ci/
  direction: /direction/verify/build_artifacts/
  description: 'Keep build artifacts under control and actionable.'
  roi: true
  available: 2021-04-01
  viable: 2025-07-01
  complete: 2026-06-01
  lovable: 2028-12-01
  maturity: minimal
  marketing: false
  dogfooding_status: Active
  dogfooding_group: Development

merge_trains:
  name: 'Merge Trains'
  label: Category:Merge Trains
  documentation: https://docs.gitlab.com/ee/ci/pipelines/merge_trains.html
  direction: /direction/verify/merge_trains/
  stage: verify
  description: 'Keeping master green and ensuring the stability of collaboration on branches is vitally important. GitLab has introduced Merge Trains as an important way to accomplish this.'
  roi: true
  available: 2019-04-22
  viable: 2019-07-22
  complete: 2024-07-22
  lovable: 2026-07-22
  maturity: viable
  marketing: true
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/gitlab-org/quality/team-tasks/-/issues/195#known-issues-improvements
  dogfooding_group: Quality

review_apps:
  name: 'Review Apps'
  stage: verify
  feature_labels:
    - 'testing::review apps'
    - 'testing::visual review tool'
    - 'testing::usability'
  direction: /direction/verify/review_apps/
  marketing_page: /stages-devops-lifecycle/review-apps/
  documentation: https://docs.gitlab.com/ee/ci/review_apps/
  description: 'Get a fully functional pre-production environment for every merge request that updates on each commit. See code running, and enable user acceptance testing and automated smoke tests before you merge.'
  roi: true
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2017-01-01
  lovable: 2025-11-30
  maturity: complete
  marketing: true
  priority_level: low
  dogfooding_status: Active
  dogfooding_group: Development, All
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab/-/issues/352789
  ux_scorecard_score: B
  label: "Category:Review Apps"

ci-cd_visibility:
  name: "CI/CD Visibility"
  stage: verify
  feature_labels:
    - pipeline_reports
    - CI analytics
  direction: /direction/verify/ci-cd_analtyics_visibility/
  documentation: https://docs.gitlab.com/ee/ci/
  description: "Continuous Integration is an important part of any software development pipeline. It must be easy to use, reliable, and accurate."
  roi: true
  available: 2024-01-22
  viable: 2024-06-22
  complete: 2025-11-22
  lovable: 2029-01-22
  maturity: planned
  marketing: true
  priority_level: low
  dogfooding_status: Planned
  dogfooding_group: None
  ux_scorecard_link:
  ux_scorecard_score:
  label: "Category:CI/CD Visibility"


# Package

package_registry:
  name: 'Package Registry'
  stage: package
  documentation: https://docs.gitlab.com/ee/user/packages/package_registry/
  direction: /direction/package/#package-registry
  description: |
    Every team needs a place to store their packages and dependencies. GitLab aims to provide a comprehensive solution, integrated into our single application, that supports package management for all commonly used languages and binary formats.
  roi: true
  available: 2018-01-01
  viable: 2020-01-22
  complete: 2023-12-22
  lovable: 2025-04-22
  maturity: viable
  marketing: true
  dogfooding_status: Planned
  dogfooding_issue: https://gitlab.com/gitlab-org/gitlab/-/issues/334454
  dogfooding_group: Development, Distribution:Build, Distribution:Deploy
  competitors:
    github:
      maturity: lovable
      documentation: https://docs.github.com/en/packages/learn-github-packages/introduction-to-github-packages

container_registry:
  name: 'Container Registry'
  stage: package
  documentation: https://docs.gitlab.com/ee/user/packages/container_registry/
  direction: /direction/package/#container-registry
  description: |
    A secure and private registry for Docker images built-in to GitLab. Creating, pushing, and retrieving images works out of the box with GitLab CI/CD.
  roi: true
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2023-12-22
  lovable: 2024-11-22
  maturity: viable
  marketing: true
  dogfooding_status: Active
  dogfooding_group: Development, Distribution:Build, Distribution:Deploy
  competitors:
    github:
      maturity: lovable
      documentation: https://docs.github.com/en/packages/learn-github-packages/introduction-to-github-packages

helm_chart_registry:
  name: 'Helm Chart Registry'
  stage: package
  documentation: https://docs.gitlab.com/ee/user/packages/helm_repository/#helm-charts-in-the-package-registry
  direction: /direction/package/#helm-chart-registry
  description: |
    Kubernetes cluster integrations can take advantage of Helm charts to
    standardize their distribution and install processes. Supporting a built-in
    helm chart registry allows for better, self-managed container orchestration.
  roi: false
  available: 2020-01-22
  viable: 2021-07-22
  complete: 2024-06-22
  lovable: 2024-07-22
  maturity: viable
  marketing: true
  dogfooding_status: Planned
  dogfooding_issue: https://gitlab.com/gitlab-org/gitlab/-/issues/334452
  dogfooding_group: Distribution:Build, Distribution:Deploy

dependency_proxy:
  name: 'Dependency Proxy'
  stage: package
  documentation: https://docs.gitlab.com/ee/user/packages/dependency_proxy/
  direction: /direction/package/#dependency-proxy
  description: |
    The GitLab Dependency Proxy can serve as an intermediary between your local
    developers and automation and the world of packages that need to be fetched
    from remote repositories. By adding a security and validation layer to a
    caching proxy, you can ensure reliability, accuracy, and auditability for the
    packages you depend on.
  roi: false
  available: 2019-05-22
  viable: 2020-02-22
  complete: 2024-12-22
  lovable: 2025-11-22
  maturity: viable
  marketing: true
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/gitlab-org/gitlab/-/issues/334454
  dogfooding_group: Development, Quality, Distribution:Build, Distribution:Deploy

dependency_firewall:
  name: 'Dependency Firewall'
  stage: package
  direction: /direction/package/#dependency-firewall
  description: |
    GitLab ensures that the dependencies stored in your package registries conform to your corporate compliance guidelines. This means you can prevent your organization from using dependencies that are insecure or out of policy.
  roi: false
  available: 2024-04-22
  viable: 2024-12-22
  complete:
  lovable:
  maturity: planned
  marketing: true
  dogfooding_status: Planned
  dogfooding_group: Not Applicable (Planned)

# Secure

# application_security_testing:
#   name: "Application Security Testing"
#   stage: secure
#   description: "As part of Concurrent Devops, GitLab offers powerful security tools out of the box including static and dynamic application security testing, container and open source dependency scanning and license compliance. Test every merge request for security vulnerabilities so you can find mistakes earlier when they are less costly to resolve."
#   link: https://gitlab.com/users/sign_in
#   link_description: "Sign up for GitLab.com"
#   body: |
#     ## Fundamentally different

#     * Security issues reported directly in Pipelines and Merge Requests.
#     * One license cost for integrated security.
#     * Zero context switching to proactively secure applications.

#     ### Static Application Security Testing

#     * Performs static analysis on application source code and binaries.
#     * Spots potential vulnerabilities before deployment.
#     * Uses open source (defined on right) tools that are installed as part of GitLab.
#     * Vulnerabilities shown in-line with merge request.
#     * Results collected and presented as a single report.

#     ### Dependency scanning

#     * Analyzes external dependencies (e.g. libraries like Ruby gems).
#     * Shows vulnerable dependencies needing updating.
#     * Relies on open source tools and on the integration with Gemnasium technology (now part of GitLab).
#     * Vulnerabilities shown in-line with merge request.
#     * Results collected and available as a single report.

#     ### Container scanning

#     * Performs static analysis on Docker images to spot possible vulnerabilities in the application environment.
#     * Analyzes image contents against public vulnerability databases.
#     * Uses open source tool Clair that is able to scan any kind of Docker (or Appc) image.
#     * Vulnerabilities shown in-line with merge request.

#     ### Dynamic Application Security Testing

#     * Analyzes your running web application for known runtime vulnerabilities.
#     * Runs live attacks against a Review App* of the application.
#     * Users can provide HTTP credentials to test private areas.
#     * Current implementation uses open source tool ZAProxy, modified to add authentication capabilities.
#     * Vulnerabilities shown in-line with merge request.


static_application_security_testing:
  name: 'SAST'
  stage: secure
  documentation: https://docs.gitlab.com/ee/user/application_security/sast/
  direction: /direction/secure/static-analysis/sast/
  description: 'Static Application Security Testing scans the application source code and binaries to spot potential vulnerabilities before deployment using open source tools that are installed as part of GitLab. Vulnerabilities are shown in-line with every merge request and results are collected and presented as a single report.'
  roi: true
  available: 2018-01-01
  viable: 2019-03-22
  complete: 2021-04-30
  lovable: 2023-11-18
  maturity: complete
  new_maturity: true
  marketing: true
  priority_level: high
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/400
  ux_scorecard_score: D
  dogfooding_status: Active
  dogfooding_issue: https://about.gitlab.com/handbook/security/security-engineering/application-security/#gitlab-secure-tools-coverage
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning
      description: |
        GitHub experts, security researchers, and community contributors write and maintain the default
        CodeQL queries used for code scanning. The queries are regularly updated to improve analysis and
        reduce any false positive results. The queries are open source, so you can view and contribute to the
        queries in the [`github/codeql`](https://github.com/github/codeql) repository. For more information,
        see [CodeQL](https://codeql.github.com) on the CodeQL website.

        You can also write your own queries. For more information, see
        ["About CodeQL queries"](https://codeql.github.com/docs/writing-codeql-queries/about-codeql-queries/)
        in the CodeQL documentation.

secret_detection:
  name: 'Secret Detection'
  stage: secure
  label: 'group::static analysis'
  documentation: https://docs.gitlab.com/ee/user/application_security/secret_detection/
  direction: /direction/secure/static-analysis/secret-detection/
  description: 'Check for credentials and secrets in commits.'
  roi: false
  available: 2019-03-22
  viable: 2020-06-22
  complete: 2024-10-22
  lovable: 2025-10-22
  maturity: viable
  new_maturity: true
  marketing: true
  priority_level: medium
  dogfooding_status: Active
  dogfooding_issue: https://about.gitlab.com/handbook/security/security-engineering/application-security/#gitlab-secure-tools-coverage
  competitors:
    github:
      maturity: lovable
      documentation: https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning
      description: |
        GitHub will scan your entire Git history on all branches present in your GitHub repository for any secrets.
        Service providers can partner with GitHub to provide their secret formats for scanning.

        When secret scanning detects a potential secret, we notify the service provider who issued the secret.
        The service provider validates the string and then decides whether they should revoke the secret,
        issue a new secret, or contact you directly. Their action will depend on the associated risks to you or them.

code_quality:
  name: 'Code Quality'
  documentation: https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html
  direction: /direction/secure/static-analysis/code_quality/
  stage: secure
  description: 'Automatically analyze your source code to surface issues and see if quality is improving or getting worse with the latest commit.'
  roi: false
  available: 2017-01-01
  viable: 
  complete:
  lovable:
  maturity: minimal
  marketing: true
  dogfooding_status: Active
  dogfooding_issue: https://about.gitlab.com/handbook/security/security-engineering/application-security/#gitlab-secure-tools-coverage

dynamic_application_security_testing:
  name: 'DAST'
  stage: secure
  documentation: https://docs.gitlab.com/ee/user/application_security/dast/
  direction: /direction/secure/dynamic-analysis/dast/
  description: "Dynamic Application Security Testing analyzes your running web application for known runtime vulnerabilities. It runs live attacks against a Review App, an externally deployed application, or an active API, created for every merge request as part of the GitLab's CI/CD capabilities. Users can provide HTTP credentials to test private areas. Vulnerabilities are shown in-line with every merge request. Tests can also be run outside of CI/CD pipelines by utilizing on-demand DAST scans"
  roi: true
  available: 2018-01-01
  viable: 2019-04-22
  complete: 2022-07-22
  lovable: 2023-11-18
  maturity: complete
  marketing: true
  priority_level: high
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/1612
  ux_scorecard_score: C
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/gitlab-org/gitlab/-/issues/341543

api_security:
  name: 'API Security'
  stage: secure
  direction: /direction/secure/dynamic-analysis/api-security/
  documentation: https://docs.gitlab.com/ee/user/application_security/dast_api/
  description: 'API Security focuses on testing and protecting APIs. Testing for known vulnerabilities with DAST API and unknown vulnerabilities with API Fuzzing, API Security runs against a live API or a *Review App* to discover vulnerabilities that can only be uncovered after the API has been deployed. Users can provide credentials to test authenticated APIs. Vulnerabilities are shown in-line with every merge request.'
  roi: false
  available: 2021-06-22
  viable: 2021-06-22
  complete: 2023-11-22
  lovable:
  maturity: viable
  new_maturity: true
  marketing: true
  priority_level: high
  acquisition_one:
    - name: 'Peach Tech'
    - start_date: 2020-06-01
    - end_date: NULL
  dogfooding_status: Not Active

fuzz_testing:
  name: 'Fuzz Testing'
  stage: secure
  label: 'category::fuzz testing'
  direction: /direction/secure/dynamic-analysis/fuzz-testing/
  documentation: https://docs.gitlab.com/ee/user/application_security/coverage_fuzzing/
  description: 'Fuzz testing increase chances to get results by using arbitrary payloads instead of well-known ones.'
  roi: false
  available: 2020-08-02
  viable: 2021-01-22
  complete: 2023-11-22
  lovable:
  maturity: viable
  new_maturity: true
  marketing: true
  priority_level: high
  acquisition_one:
    - name: 'Peach Tech'
    - start_date: 2020-06-01
    - end_date: NULL
  acquisition_two:
    - name: 'Fuzzit'
    - start_date: 2020-05-14
    - end_date: NULL
  dogfooding_status: N/A

software_composition_analysis:
  name: 'Software Composition Analysis'
  stage: secure
  label: 'Category:Software Composition Analysis'
  documentation: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/
  direction: /direction/secure/composition-analysis/software-composition-analysis
  description: 'Analyze external dependencies (e.g. libraries like Ruby gems) for known vulnerabilities on each code commit with GitLab CI/CD. This scan relies on open source tools and on the integration with Gemnasium technology (now part of GitLab) to show, in-line with every merge request, vulnerable dependencies needing updating. Results are collected and available as a single report. Additionally upon code commit, project dependencies are searched for approved and denied licenses defined by custom policies per project. Software licenses being used are identified if they are not within policy. License analysis results are shown in-line for every merge request for immediate resolution.'
  roi: true
  available: 2018-01-01
  viable: 2019-04-22
  complete: 2023-11-28
  lovable: 2025-10-22
  maturity: viable
  marketing: true
  priority_level: high
  ux_scorecard_link: https://gitlab.com/groups/gitlab-org/-/epics/2396
  ux_scorecard_score: F
  dogfooding_status: Active
  dogfooding_issue: https://about.gitlab.com/handbook/security/security-engineering/application-security/#gitlab-secure-tools-coverage

container_scanning:
  name: 'Container Scanning'
  stage: secure
  documentation: https://docs.gitlab.com/ee/user/application_security/container_scanning/
  direction: /direction/secure/composition-analysis/container-scanning/
  description: 'Check Docker images for known vulnerabilities in the application environment. Analyze image contents against public vulnerability databases using the open source tool, Clair, that is able to scan any kind of Docker (or App) image. Vulnerabilities are shown in-line with every merge request.'
  roi: true
  available: 2018-01-01
  viable: 2019-05-22
  complete: 2023-11-28
  lovable: 2027-05-18
  maturity: viable
  marketing: true
  priority_level: medium
  dogfooding_status: Active
  dogfooding_issue: https://about.gitlab.com/handbook/security/security-engineering/application-security/#gitlab-secure-tools-coverage

advisory_database:
  name: GitLab Advisory Database
  stage: secure
  direction: /direction/secure/vulnerability-research/advisory-database/
  description: 'GitLab integrates access to proprietary and open-source application security scanning tools. In order to maintain the efficacy of those scans, we strive to keep their underlying vulnerability databases up-to-date.'
  roi: false
  available:
  viable:
  complete:
  lovable:
  maturity:
  marketing: false
  priority_level: high
  dogfooding_status: Active
  dogfooding_issue: https://about.gitlab.com/handbook/security/security-engineering/application-security/#gitlab-secure-tools-coverage

attack_emulation:
  name: Attack Emulation
  stage: secure
  description: 'Continuously assess your applications and services are not vulnerable to security threats through automated, real-world emulated scenarios to identify weaknesses in your attack surface'
  direction:
  roi: false
  available: 
  viable:
  complete:
  lovable:
  maturity: 
  marketing: false
  priority_level: low
  dogfooding_status: N/A

# Govern

audit_events:
  name: 'Audit Events'
  stage: govern
  documentation: https://docs.gitlab.com/ee/administration/audit_events.html
  direction: /direction/govern/compliance/audit-events/
  description: 'Track important events for review and compliance such as who performed certain actions and the time they happened.'
  roi: false
  available: 2017-01-01
  viable: 2018-11-22
  complete: 2024-01-22
  lovable:
  maturity: viable
  dogfooding_status: Active
  ux_scorecard_score: '-'
  marketing: true
  priority_level: high
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization

compliance_management:
  name: 'Compliance Management'
  stage: govern
  # TODO: Placeholder documentation to allow linting rule to be committed; replace with proper link
  documentation: https://docs.gitlab.com/ee/administration/compliance.html
  direction: /direction/govern/compliance/compliance-management/
  description: 'Provide customers with the tools and features necessary to manage their compliance programs.'
  roi: false
  available: 2020-01-22
  viable: 2022-07-22
  complete: 2023-11-22
  lovable:
  maturity: viable
  dogfooding_status: Active
  ux_scorecard_score: '-'
  new_maturity: true
  marketing: true
  priority_level: high
  competitors:
    github:
      maturity: viable
      documentation: https://docs.github.com/en/code-security/getting-started/securing-your-organization

security_policy_management:
  name: 'Security Policy Management'
  stage: govern
  direction: /direction/govern/security_policies/security_policy_management/
  documentation: https://docs.gitlab.com/ee/user/application_security/policies/
  description: |
    Unified security policy management capabilities across all of GitLab's scanners and security technologies. Apply policies to enforce scans and to require security approvals when vulnerabilities are found.
  roi: false
  available: 2021-02-22
  viable: 2024-05-22
  complete: 2024-10-22
  lovable: 2025-10-22
  maturity: minimal
  marketing: true
  priority_level: medium
  dogfooding_status: N/A

vulnerability_management:
  name: 'Vulnerability Management'
  stage: govern
  label: 'group::threat insights'
  description: 'View, triage, trend, track, and resolve vulnerabilities detected in your applications.'
  documentation: https://docs.gitlab.com/ee/user/application_security/security_dashboard/
  direction: /direction/govern/threat_insights/vulnerability_management/
  roi: false
  available: 2020-05-22
  viable: 2020-12-08
  complete: 2023-12-22
  lovable: 2024-07-22
  maturity: viable
  new_maturity: true
  marketing: true
  priority_level: high
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/401
  ux_scorecard_score: D
  dogfooding_status: Active
  dogfooding_issue: https://about.gitlab.com/handbook/security/security-engineering/application-security/#gitlab-secure-tools-coverage
  feature_labels:
    - security dashboard
    - security reports
    - security reports integration
    - vulnerability interaction
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies

dependency_management:
  name: 'Dependency Management'
  stage: govern
  label: 'group::threat insights'
  description: 'Track dependencies detected in your applications.'
  documentation: https://docs.gitlab.com/ee/user/application_security/dependency_list/
  direction: /direction/govern/threat_insights/dependency_management/
  roi: false
  available: 2019-06-22
  viable: 2022-09-01
  complete: 2023-10-22
  lovable: 2024-10-22
  maturity: viable
  new_maturity: true
  marketing: true
  priority_level: high
  feature_labels:
    - dependency list
  dogfooding_status: Active

sbom:
  name: 'Software Bill of Materials'
  stage: govern
  description: 'Track dependencies detected in your applications.'
  documentation: https://docs.gitlab.com/ee/user/application_security/dependency_list/
  direction: /direction/supply-chain/
  roi: false
  available: 2019-06-22
  viable: 2022-09-01
  complete: 2023-10-22
  lovable: 2024-10-22
  maturity: viable
  new_maturity: true
  marketing: true
  priority_level: high
  dogfooding_status: Active
  feature_labels:
    - sbom feature

# Anti-Abuse

insider_threat:
  name: 'Insider Threat'
  stage: govern
  label: 'Category:Insider Threat'
  feature_labels:
    - 'Arkose'
  documentation:
  direction: /direction/govern/anti-abuse/insider_threat/
  description: 'Insider Threat identifies attacks and high risk behaviors by correlating different data sources and observing behavioral patterns'
  maturity: minimal
  available: 2019-06-22
  viable: 2023-03-22
  complete: 2023-12-22
  lovable: 2024-12-22
  marketing: false
  dogfooding_status: N/A

instance_resiliency:
  name: 'Instance Resiliency'
  label: 'Category:Instance Resiliency'
  stage: govern
  feature_labels:
    - 'pipeline abuse prevention'
  documentation: https://docs.gitlab.com/ee/administration/external_pipeline_validation.html
  direction: /direction/govern/anti-abuse/instance_resiliency/
  description: 'We want to prevent malicious activity from occurring within GitLab Instances.'
  roi: true
  available: 2021-06-01
  viable: 2022-12-01
  complete: 2023-04-01
  lovable: 2025-12-01
  maturity: minimal
  marketing: false
  dogfooding_status: Active
  dogfooding_group: Development, Trust and Safety, Infrastructure

# Deploy

continuous_delivery:
  name: 'Continuous Delivery'
  marketing_page: /features/continuous-integration/
  documentation: https://docs.gitlab.com/ee/ci/
  direction: /direction/delivery/continuous_delivery/
  stage: deploy
  description: 'Deliver your changes to production with zero-touch software delivery; focus on building great software and allow GitLab CD to bring your release through your path to production for you.'
  roi: true
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2017-01-01
  lovable: 2024-01-22
  maturity: complete
  marketing: true
  priority_level: medium
  dogfooding_status: Active
  dogfooding_group: Development, All
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/1664
  ux_scorecard_score:
  label: 'Category:Continuous Delivery'
  feature_labels:
    - 'deploy freeze'
    - 'deploy keys'
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/actions/deployment/about-deployments/about-continuous-deployment

feature_flags:
  name: 'Feature Flags'
  stage: deploy
  documentation: https://docs.gitlab.com/ee/operations/feature_flags.html
  direction: /direction/delivery/feature_flags/
  description: 'Feature flags enable teams to achieve CD by letting them deploy dark features to production as smaller batches for controlled testing, separating feature delivery from customer launch, and removing risk from delivery.'
  roi: false
  available: 2018-10-22
  viable: 2019-03-22
  complete: 2024-01-22
  lovable: 2025-01-22
  maturity: viable
  marketing: true
  priority_level: medium
  dogfooding_status: Active
  dogfooding_group: Development
  ux_scorecard_link:
  ux_scorecard_score:
  label: 'Category:Feature Flags'

release_evidence:
  name: "Release Evidence"
  stage: govern
  direction: /direction/release/release_evidence/
  documentation: https://docs.gitlab.com/ee/user/project/releases/#release-evidence
  description: "Release Evidence includes all the assurances and evidence collection that are necessary for you to trust the changes you're delivering."
  roi: false
  available: 2020-01-22
  viable: 2024-01-22
  complete: 2025-01-22
  lovable: 2025-06-22
  maturity: minimal
  marketing: true
  dogfooding_status: Active
  dogfooding_group: Delivery

release_orchestration:
  name: 'Release Orchestration'
  stage: deploy
  direction: /direction/delivery/release_orchestration/
  documentation: https://docs.gitlab.com/ee/user/project/releases/
  description: 'Management and orchestration of releases-as-code built on intelligent notifications, scheduling of delivery and shared resources, blackout periods, relationships, parallelization, and sequencing, as well as support for integrating manual processes and interventions.'
  roi: false
  available: 2017-01-01
  viable: 2020-03-22
  complete: 2024-09-22
  lovable: 2025-01-22
  maturity: viable
  new_maturity: true
  marketing: true
  priority_level: high
  dogfooding_status: Active
  dogfooding_group: Delivery
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/1670
  ux_scorecard_score: D
  label: 'Category:Release Orchestration'

environment_management:
  name: 'Environment Management'
  stage: deploy
  documentation: https://docs.gitlab.com/ee/ci/environments/
  direction: /direction/delivery/environment_management/
  description: "Enable organizations to operate and manage multiple environments directly from GitLab. Environments are encapsulated in GitLab as a target system with associated configurations. By facilitating access control, visualizing deployments and deployment history across teams and projects, adding the ability to query environments, and ensuring that environment's configurations are traceable, platform engineers can enact stronger controls and avoid costly mistakes in deployments."
  roi: true
  available: 2017-01-01
  viable: 2023-02-22
  complete: 2024-02-22
  lovable: 2024-12-22
  maturity: viable
  marketing: true
  priority_level: high
  dogfooding_status: Active
  dogfooding_group: All
  competitors:
    github:
      maturity: viable
      documentation: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment

auto_devops:
  name: 'Auto DevOps'
  stage: deploy
  marketing_page: /stages-devops-lifecycle/auto-devops/
  documentation: https://docs.gitlab.com/ee/topics/autodevops/
  direction: /direction/delivery/auto_devops/
  description: 'Commit your code and GitLab does the rest to build, test, deploy, and monitor automatically. Eliminate the complexities of getting going with automated software delivery by automatically setting up the pipeline and necessary integrations, freeing up your teams to focus on the culture part.'
  roi: true
  available: 2017-09-22
  viable: 2019-12-22
  complete: 2024-03-22
  lovable:
  maturity: viable
  marketing: true
  priority_level: medium
  dogfooding_status: Active
  dogfooding_issue: 'https://gitlab.com/gitlab-org/gitlab/-/issues?scope=all&state=opened&label_name[]=group%3A%3Aconfigure&label_name[]=Category%3AAuto%20DevOps&label_name[]=Dogfooding'
  dogfooding_group: Security, Marketing
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/525
  ux_scorecard_score: C

deployment_management:
  name: 'Deployment Management'
  stage: deploy
  marketing_page: /solutions/kubernetes/
  documentation: https://docs.gitlab.com/ee/topics/release_your_application.html
  direction: /direction/delivery/
  description: Simplify the life of platform engineers by providing tools and frameworks to enable a white-glove deployment experience for software developers, to define common DevOps practices, and maintain security and compliance of the deployment processes for cloud-native and legacy infrastructures.
  roi: true
  available: 2017-05-22
  viable: 2018-04-22
  complete: 2023-12-22
  lovable:
  maturity: viable
  marketing: true
  priority_level: high
  dogfooding_status: Active
  dogfooding_issue: "https://gitlab.com/gitlab-org/gitlab/-/issues?scope=all&state=opened&label_name[]=group%3A%3Aconfigure&label_name[]=Dogfooding&label_name[]=Category%3AKubernetes%20Management"
  dogfooding_group: Delivery
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/487
  ux_scorecard_score: C
  label: 'Category:Deployment Management'

infrastructure_as_code:
  name: 'Infrastructure as Code'
  stage: deploy
  documentation: https://docs.gitlab.com/ee/user/infrastructure/iac/index.html
  direction: /direction/delivery/infrastructure_as_code/
  description: 'Manage your infrastructure effectively to create, configure, and manage a complete software development environment.'
  roi: false
  available: 2019-09-01
  viable: 2021-01-22
  complete: 2023-12-22
  lovable: 2024-09-22
  maturity: viable
  marketing: true
  priority_level: high
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/10179
  dogfooding_group: Infrastructure, Development, Security, Marketing, Training

# Monitor

incident_management:
  name: 'Incident Management'
  stage: monitor
  direction: /direction/service_management/incident_management/
  documentation: https://docs.gitlab.com/ee/operations/incident_management/
  description: 'Track incidents within GitLab, providing a consolidated location to understand the who, what, when, and where of the incident. Define service level objectives and error budgets, to achieve the desired balance of velocity and stability.'
  roi: false
  available: 2019-05-22
  viable: 2019-10-22
  complete: 2023-07-31
  lovable:
  maturity: viable
  marketing: true
  priority_level: high
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/gitlab-org/gitlab/-/issues/333981
  dogfooding_group: Infrastructure
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab/-/issues/11713
  ux_scorecard_score: C
  label: 'Category:Incident Management'

on_call_schedule_management:
  name: 'On-call Schedule Management'
  stage: monitor
  description: 'Track on-call responsibilities within your team by creating rotating schedules for responders.'
  direction: /direction/service_management/on-call_schedule_management/
  documentation: https://docs.gitlab.com/ee/operations/incident_management/oncall_schedules.html
  roi: false
  available: 2021-04-22
  viable: 2023-10-31
  complete:
  lovable:
  maturity: minimal
  marketing: true
  priority_level: high
  dogfooding_status: Planned
  dogfooding_issue: https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/322
  dogfooding_group: Infrastructure
  ux_scorecard_link:
  ux_scorecard_score:
  label: 'Category:On-call Schedule Management'

service_desk:
  name: 'Service Desk'
  label: Category:Service Desk
  stage: monitor
  documentation: https://docs.gitlab.com/ee/user/project/service_desk/
  marketing_page: /stages-devops-lifecycle/service-desk/
  direction: /direction/service_management/service_desk/
  description: 'Connect your team using GitLab issues, to external parties directly via email for feedback and support, with no additional tools required.'
  roi: false
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2024-01-31
  lovable:
  feature_labels:
    - service desk issues
    - customer relationships management
  maturity: viable
  marketing: true
  priority_level: medium
  ux_scorecard_link:
  ux_scorecard_score:
  dogfooding_status: Active
  dogfooding_issue: N/A

# Analytics

product_analytics_visualization:
  name: 'Product Analytics Visualization'
  stage: analyze
  documentation: https://docs.gitlab.com/ee/user/product_analytics/
  direction: /direction/analytics/product-analytics/
  roi: false
  available: 2024-01-01
  viable: 2024-10-01
  complete: 2026-10-01
  lovable: 2027-10-01
  maturity: planned
  marketing: true
  priority_level: medium
  ux_scorecard_link:
  ux_scorecard_score:
  dogfooding_issue:
  dogfooding_status: Planned
  label: 'Category:Product Analytics Visualization'

product_analytics_data_management:
  name: 'Product Analytics Data Management'
  stage: analyze
  documentation: https://docs.gitlab.com/ee/user/product_analytics/
  direction: /direction/analytics/product-analytics/
  roi: false
  available: 2024-01-01
  viable: 2024-10-01
  complete: 2026-10-01
  lovable: 2027-10-01
  maturity: planned
  marketing: false
  priority_level: medium
  ux_scorecard_link:
  ux_scorecard_score:
  dogfooding_issue:
  dogfooding_status: Planned
  label: 'Category:Product Analytics Data Management'

service_ping:
  name: 'Service Ping'
  stage: analyze
  direction:
  description: 'Formerly Usage Ping. Collects usage data from GitLab instances.'
  documentation: https://docs.gitlab.com/ee/development/service_ping/
  roi: false
  available: 2018-08-22
  viable: 2019-01-01
  complete: 2024-12-01
  lovable: 2025-12-01
  marketing: false
  maturity: viable

application_instrumentation:
  name: 'Application Instrumentation'
  stage: analyze
  direction: /direction/analytics/analytics-instrumentation/
  description:
  available: 2022-10-01
  viable: 2023-12-01
  complete: 2024-06-01
  lovable: 2024-12-01
  marketing: false
  maturity: minimal
  priority_level: medium

metrics:
  name: 'Metrics'
  stage: analyze
  documentation: https://docs.gitlab.com/ee/operations/metrics/
  direction: /direction/analytics/observability/
  description: 'GitLab collects and displays performance metrics for deployed apps, leveraging Prometheus. Developers can determine the impact of a merge and keep an eye on their production systems, without leaving GitLab.'
  roi: true
  available: 2024-12-22
  viable:
  complete:
  lovable:
  maturity: planned
  marketing: true
  priority_level: medium
  dogfooding_status: Active
  dogfooding_group: Infrastructure
  ux_scorecard_link:
  ux_scorecard_score:
  label: 'Category:Metrics'

logging:
  name: 'Logging'
  stage: analyze
  documentation: https://docs.gitlab.com/ee/user/project/clusters/kubernetes_pod_logs.html#kubernetes-pod-logs
  direction: /direction/analytics/observability/
  description: 'GitLab makes it easy to view the logs distributed across multiple pods and services using log aggregation with Elastic Stack. Once Elastic Stack is enabled, you can view your aggregated Kubernetes logs across multiple services and infrastructure, go back in time, conduct infinite scroll, and search through your application logs from within the GitLab UI itself.'
  roi: false
  available: 2024-12-22
  viable:
  complete:
  lovable:
  maturity: planned
  marketing: true
  priority_level: medium
  dogfooding_status: N/A
  dogfooding_issue:
  dogfooding_group: Infrastructure
  ux_scorecard_link:
  ux_scorecard_score:
  label: 'Category:Logging'

error_tracking:
  name: 'Error Tracking'
  stage: analyze
  documentation: https://docs.gitlab.com/ee/operations/error_tracking.html
  direction: /direction/analytics/error_tracking/
  description: 'Error tracking allows developers to easily discover and view the errors that their application may be generating. By surfacing error information where the code is being developed, efficiency and awareness can be increased.'
  roi: false
  available: 2018-12-22
  viable:
  complete:
  lovable:
  maturity: minimal
  new_maturity: true
  marketing: true
  priority_level: medium
  dogfooding_status: Active
  dogfooding_group: Infrastructure
  ux_scorecard_link:
  ux_scorecard_score:
  label: 'Category:Error Tracking'

tracing:
  name: 'Tracing'
  stage: analyze
  documentation: https://docs.gitlab.com/ee/operations/tracing.html
  direction: /direction/analytics/observability/
  description: 'Tracing provides insight into the performance and health of a deployed application, tracking each function or microservice which handles a given request. This makes it easy to understand the end-to-end flow of a request, regardless of whether you are using a monolithic or distributed system.'
  roi: false
  available: 2023-12-22
  viable:
  complete:
  lovable:
  maturity: planned
  marketing: true
  priority_level: medium
  dogfooding_status: N/A
  dogfooding_issue: This category is at the "minimal" level of maturity and is not actively being worked on.
  dogfooding_group: Infrastructure
  ux_scorecard_link:
  ux_scorecard_score:
  label: 'Category:Tracing'

# Enablement

organization:
  name: 'Organization'
  label: Category:Organization
  stage: data_stores
  documentation: https://docs.gitlab.com/ee/user/organization/
  direction: /direction/enablement/tenant-scale/organization/
  description: 'Managing your organization.'
  roi: false
  dogfooding_status: Planned
  ux_scorecard_score:
  marketing: true
  priority_level: high

user_profile:
  name: 'User Profile'
  label: Category:User Profile
  stage: data_stores
  feature_labels:
    - user profile
    - user creation
    - user settings
  documentation: https://docs.gitlab.com/ee/user/profile/
  direction: /direction/enablement/tenant-scale/user-profile/
  description: 'Managing your user profile and configuring what will be visible to others.'
  roi: false
  dogfooding_status: Active
  ux_scorecard_score: '-'
  marketing: false # not "available" as a capability for customers
  priority_level: low

groups_and_projects:
  name: 'Groups & Projects'
  label: Category:Groups & Projects
  stage: data_stores
  feature_labels:
    - group templates
    - subgroups
  documentation: https://docs.gitlab.com/ee/user/group/subgroups/
  direction: /direction/enablement/tenant-scale/subgroups/
  description: 'Organize your projects and restrict access to controlled resources.'
  roi: false
  marketing: true
  available: 2017-03-22
  viable: 2018-01-01
  complete: 2019-01-01
  lovable: 2023-06-30
  maturity: complete
  dogfooding_status: Active
  ux_scorecard_score: '-'
  priority_level: high

global_search:
  name: Global Search
  stage: data_stores
  feature_labels:
    - elasticsearch
  description: |
    Global Search is made up of two primary experiences, Basic Search and Advanced Search.

    Basic Search is the default search experience for self-managed users as well as Free users of GitLab.com. It provides a way to search across the DevOps platform. Basic search includes Code Search for one project.

    Advanced Search, in GitLab Premium and above, is an optional feature that uses Elasticsearch to enable additional search features for sorting, filtering, and improved relevancy.
  direction: /direction/global-search/
  documentation: https://docs.gitlab.com/ee/user/search/advanced_search.html
  roi: false
  marketing: true
  available: 2016-01-22
  viable: 2020-06-22
  complete: 2024-01-22
  lovable: 2024-08-22
  maturity: viable
  dogfooding_status: Active
  dogfooding_group: ALL
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/search-github/getting-started-with-searching-on-github/about-searching-on-github

code_search:
  name: Code Search
  stage: data_stores
  feature_labels:
    - elasticsearch
  description: |
    Code Search gives users the ability to explore all their code. Code searches are a significated portion of searches run by users, and Code Search is a fundamental need for organizations with complex or large amounts of code and multiple repositories.
  direction: /direction/global-search/code-search
  documentation: https://docs.gitlab.com/ee/user/search/advanced_search.html
  roi: false
  marketing: true
  available: 2016-01-01
  viable: 2024-03-20
  complete: 2024-07-22
  lovable: 2025-01-22
  maturity: minimal
  dogfooding_status: Active
  dogfooding_group: ALL
  competitors:
    github:
      maturity: complete
      documentation: https://docs.github.com/en/search-github/searching-on-github/searching-code

omnibus_package:
  name: Omnibus Package
  stage: systems
  documentation: https://docs.gitlab.com/omnibus/
  description: Install a self-managed instance of GitLab using the Omnibus package.
  roi: false
  available: 2017-01-01
  viable: 2017-01-01
  complete: 2017-06-01
  lovable: 2018-01-01
  maturity: lovable
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/12209
  dogfooding_group: Infrastructure
  marketing: true
  direction: /direction/distribution/omnibus/
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/671
  ux_scorecard_score: C

cloud_native_installation:
  name: Cloud Native Installation
  stage: systems
  documentation: https://docs.gitlab.com/charts/
  description: Install GitLab in a cloud native environment using Helm.
  roi: false
  available: 2018-08-22
  viable: 2019-03-22
  complete: 2021-10-22
  lovable: 2024-06-22
  maturity: complete
  marketing: true
  direction: /direction/distribution/cloud_native_installation/
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/112
  dogfooding_group: Infrastructure

build:
  name: Build
  stage: systems
  documentation: https://docs.gitlab.com/ee/install/
  description: Ensure the components that make up GitLab are tested, up to date, license compliant, and available for our users’ platforms and architectures.
  roi: false
  available: 2016-01-01
  viable: 2020-01-01
  complete: 2022-12-31
  lovable: 2024-07-01
  maturity: complete
  marketing: false
  direction: /direction/distribution/
  dogfooding_status: Not Planned
  dogfooding_issue:
  dogfooding_group:

backup_restore:
  name: 'Backup/Restore of GitLab instances'
  stage: systems
  direction: /direction/geo/backup_restore/
  documentation: https://docs.gitlab.com/ee/raketasks/backup_restore.html
  roi: false
  available: 2015-01-01
  viable: 2023-10-22
  complete: 2024-07-22
  lovable: 2025-07-22
  maturity: minimal
  marketing: false
  dogfooding_status: Not Planned
  dogfooding_issue:
  dogfooding_group:

geo_replication:
  name: 'Geo-replication'
  stage: systems
  feature_labels:
    - Geo Administration
    - Geo GA
    - Geo Next Gen
    - Geo Performance
    - Geo Replication/Sync
    - Geo Verification/Accuracy
    - 'Geo : Automatic Verification'
    - 'Geo : Kubernetes'
    - 'Geo : Replication Lag Warning'
    - 'Geo : Selective Sync'
  direction: /direction/geo/geo_replication/
  marketing_page: /solutions/geo/
  documentation: https://docs.gitlab.com/ee/administration/geo/index.html
  description: 'Geo-replication provides an easily configurable, read-only mirror (we call it a Geo node) of a GitLab installation that is complete, accurate, verifiable and efficient.'
  roi: false
  available: 2018-01-01
  viable: 2019-09-01
  complete: 2022-10-28
  lovable: 2024-12-18
  maturity: complete
  marketing: true
  dogfooding_status: Planned
  dogfooding_issue: https://gitlab.com/groups/gitlab-org/-/epics/3171
  dogfooding_group: All
  ux_scorecard_link: https://gitlab.com/gitlab-org/gitlab-design/-/issues/772
  ux_scorecard_score: C

disaster_recovery:
  name: 'Disaster Recovery'
  stage: systems
  feature_labels:
    - Geo DR
  direction: /direction/geo/disaster_recovery/
  documentation: https://docs.gitlab.com/ee/administration/geo/disaster_recovery/
  description: 'Disaster Recovery (DR) helps our customers fulfill their business continuity plans by creating processes that allow the recovery of GitLab following a natural or human-created disaster.'
  roi: false
  available: 2018-01-01
  viable: 2021-02-22
  complete: 2022-06-22
  lovable: 2024-06-22
  maturity: complete
  marketing: true
  dogfooding_status: Planned
  dogfooding_issue: https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/371
  dogfooding_group: All

gitaly:
  name: 'Gitaly'
  stage: systems
  feature_labels:
    - Gitaly HA
    - Gitaly Cluster
  documentation: https://docs.gitlab.com/ee/administration/gitaly/
  direction: /direction/gitaly/
  description: 'Gitaly is a Git RPC service for handling all the Git calls made by GitLab. Additionally, Gitaly provides Gitaly Cluster, a Highly Available storage solution offering strong consistency, horizontal scaling, and read distribution.'
  roi: false
  marketing: false
  dogfooding_status: Active
  ux_scorecard_score: '-'
  priority_level: high

database:
  name: Database
  stage: data_stores
  direction: /direction/database/
  roi: false
  marketing: false
  dogfooding_status: Active
  dogfooding_group: Engineering

cell:
  name: Cell
  stage: data_stores
  direction: /direction/enablement/tenant-scale/cell/
  roi: false
  marketing: false
  dogfooding_status: Active
  dogfooding_group: Engineering

cloud_connector:
  name: 'Cloud Connector'
  stage: data_stores
  direction: /direction/cloud_connector/
  roi: false
  marketing: false
  dogfooding_status: Active
  dogfooding_group: Engineering

redis:
  name: Redis
  stage: platforms
  direction: /handbook/engineering/infrastructure/team/scalability/
  roi: false
  marketing: false
  dogfooding_status: Active
  dogfooding_group: Engineering

rate_limiting:
  name: Rate Limiting Framework
  stage: platforms
  direction: /handbook/engineering/infrastructure/team/scalability/
  roi: false
  marketing: false
  dogfooding_status: Active
  dogfooding_group: Engineering

# SaaS Platforms

dedicated:
  name: 'GitLab Dedicated'
  stage: platforms
  direction: /direction/saas-platforms/dedicated/
  documentation: https://docs.gitlab.com/ee/subscriptions/gitlab_dedicated/
  description: 'Single-tenant SaaS service'
  roi: false
  available: 2022-04-01
  marketing: false

pubsec_services:
  name: 'US Public Sector Services'
  stage: platforms
  direction: https://internal.gitlab.com/handbook/engineering/fedramp-compliance/
  documentation: https://docs.gitlab.com/ee/user/
  description: 'SaaS services for the US Public Sector'
  roi: false
  marketing: false

switchboard:
  name: 'Switchboard'
  stage: platforms
  direction: /direction/saas-platforms/switchboard/
  documentation: https://docs.gitlab.com/ee/subscriptions/gitlab_dedicated/
  description: 'Management portal for GitLab Dedicated tenant instances. Switchboard will be used both by GitLab Dedicated customers to configure their tenant and internal GitLab teams who support and maintain Dedicated instances.'
  roi: false
  available: 2023-08-01
  marketing: false

delivery:
  name: 'Delivery'
  stage: platforms
  direction: /handbook/engineering/infrastructure/team/delivery/
  documentation: https://docs.gitlab.com/ee/user/
  description: 'The Delivery Team enables GitLab Engineering to deliver features in a safe, scalable and efficient fashion to both GitLab.com and self-managed customers.'
  roi: false
  available: 2012-01-01
  marketing: false

scalability:
  name: 'Scalability'
  stage: platforms
  direction: /handbook/engineering/infrastructure/team/scalability/
  documentation: https://docs.gitlab.com/ee/user/
  description: 'The Scalability team is responsible for GitLab and GitLab.com at scale, working on the highest priority scaling items related to the application and GitLab.com.'
  roi: false
  available: 2012-01-01
  marketing: false
  dogfooding_status: Active
  dogfooding_issue: https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/351
  dogfooding_group: Release

error_budgets:
  name: 'Error Budgets'
  stage: platforms
  direction: /handbook/engineering/infrastructure/team/scalability/
  documentation: https://about.gitlab.com/handbook/engineering/error-budgets/
  description: 'Enabling stage groups to observe how their feature categories perform on GitLab.com'
  roi: false
  available: 2012-01-01
  marketing: false

infrastructure_cost_data:
  name: 'Infrastructure Cost Data'
  stage: platforms
  direction: /direction/saas-platforms/cost-data
  description: 'Providing infrastructure cost data'
  roi: false
  available: 2012-01-01
  marketing: false

capacity_planning:
  name: 'Capacity Planning'
  stage: platforms
  direction: /handbook/engineering/infrastructure/team/scalability/projections.html#capacity-planning
  documentation: https://about.gitlab.com/handbook/engineering/infrastructure/capacity-planning/
  description: 'Tracking resource usage and forecasting excessive saturation or utilization events.'
  roi: false
  available: 2012-01-01
  marketing: false

# Growth Section

activation:
  name: 'Activation'
  label: 'Category:Activation'
  stage: growth
  direction: /handbook/marketing/growth
  description: 'Focuses on increasing the rate at which new signups find value and begin to adopt the product.'

acquisition:
  name: 'Acquisition'
  label: 'Category:Acquisition'
  stage: growth
  direction: /handbook/marketing/growth
  description: 'Focuses on attracting and driving the right people to signup and get started with the product.'

onboarding:
  name: 'Onboarding'
  stage: growth
  direction: /handbook/marketing/growth
  description: 'Enhancements to the new user onboarding process.'

measurement_and_locking:
  name: "Measurement and Locking"
  stage: growth
  direction: /handbook/marketing/growth
  description: "Apply limits to what free plans are able to utilize."
  marketing: false

# Fulfillment section

purchase:
  name: Purchase
  stage: fulfillment
  description: 'Focused on first-order purchase experiences, including SM Web-Direct First Order, SaaS Web-Direct First Order, Purchase compute minutes, Purchase Storage, and Community Programs - sign up.'
  direction: /direction/fulfillment/purchase/
  available: 2018-01-01
  viable: 2020-01-01
  complete:
  lovable:
  maturity: viable
  marketing: false

seat_cost_management:
  name: Seat Cost Management
  stage: fulfillment
  description: 'Focused on seat usage including seat usage visibility, billable users calculation, and seat limits.'
  direction:
  available: 2020-10-19
  viable: 2022-01-01
  complete:
  lovable:
  maturity: viable
  marketing: false

commerce_integrations:
  name: Commerce Integrations
  stage: fulfillment
  description: 'Includes the channel partner experience, compliance for partner sourced customers, and CDot integration with SFDC.'
  direction: /direction/fulfillment/commerce-integrations/
  available: 2022-04-01
  viable:
  complete:
  lovable:
  maturity: minimal
  marketing: false

sm_provisioning:
  name: SM Provisioning
  stage: fulfillment
  description: 'Includes all Self-Managed instance provisioning features such as Cloud License, Offline License, Legacy license, and Trial Licenses'
  direction:
  available: 2022-04-01
  viable: 2022-04-01
  complete:
  lovable:
  maturity: viable
  marketing: false

saas_provisioning:
  name: SaaS Provisioning
  stage: fulfillment
  description: 'Includes all SaaS instance provisioning features such as Namespace Paid or Trial Plan provisioning and deprovisioning, consumables provisioning and deprovisioning, and more.'
  direction:
  available: 2022-04-01
  viable: 2022-04-01
  complete:
  lovable:
  maturity: viable
  marketing: false

subscription_management:
  name: Subscription Management
  stage: fulfillment
  description: 'Enable customers to view and modify their billing account and subscriptions. Includes: seat purchases (via Customers Portal or QSR), plan upgrades, subscription cancellation (disabling auto-renewal), renewals (manual or auto-renewal), Community Programs - renewal, payment method management, subscription view with special UX for reseller customers, gitlab.com billing page, viewing invoices, billing account and contact management.'
  direction:
  available: 2016-06-09
  viable: 2022-05-06
  complete:
  lovable:
  maturity: viable
  marketing: false

consumables_cost_management:
  name: Consumables Cost Management
  stage: fulfillment
  description: 'Gives users visibility into their consumables subscription usage and consumption patterns; providing them with tooling to manage their consumables subscription costs. Includes: storage usage visibility, storage quota, compute usage visibility, and quota of compute minutes.'
  direction: /direction/fulfillment/utilization/
  available: 2020-10-19
  viable: 2023-01-01
  complete:
  lovable:
  maturity: viable
  marketing: false

fulfillment_infrastructure:
  name: Fulfillment Infrastructure
  stage: fulfillment
  description: 'CustomersDot availability, reliability, performance, scalability, delivery, and observability efforts.'
  direction: /direction/fulfillment/platform/#infradev-work
  available: 2017-02-09
  viable: 2022-06-01
  complete:
  lovable:
  maturity: viable
  marketing: false

customersdot_application:
  name: CustomersDot Application
  stage: fulfillment
  description: 'Build, improve and maintain the overall CustomersDot Application, including Sign-up/Sign in/SSO, Zuora integration, OTC Data Architecture in CDot.'
  direction: /direction/fulfillment/platform/#customersdot
  available: 2017-02-09
  viable: 2022-06-01
  complete:
  lovable:
  maturity: viable
  marketing: false

fulfillment_admin_tooling:
  name: Fulfillment Admin Tooling
  stage: fulfillment
  description: 'The Fulfillment Admin Tooling team works with internal teams to build robust systems that enable our internal, customer-facing teams to better support our customers.'
  direction: /direction/fulfillment/fulfillment-admin-tooling
  available: 2017-11-01
  viable: 2024-06-01
  complete:
  lovable:
  maturity: minimal
  marketing: false

# Data Science Section

mlops:
  name: 'MLOps'
  stage: modelops
  label: Category:MLOps
  feature_labels:
    - 'Python Notebooks'
  documentation: https://docs.gitlab.com/ee/user/project/repository/jupyter_notebooks/
  direction: /direction/modelops/mlops/
  description: 'Enable Customers to run data science workloads on GitLab'
  maturity: minimal
  available: 2021-12-22
  viable: 2023-12-22
  complete: 2024-12-22
  lovable: 2025-12-22
  marketing: true
  dogfooding_status: N/A

dataops:
  name: 'DataOps'
  stage: modelops
  label: Category:DataOps
  documentation:
  direction: /direction/modelops/dataops/
  description: 'This group goes beyond enhancing our existing stages and offering. DataOps will help organizations turn disparate, raw data into data-driven decisions. This will enable new efficiencies within organizations using GitLab, and these new capabilities will be particularly attractive to a CTO, CIO, and data teams.'
  maturity: planned
  available: 2024-06-22
  viable: 2024-12-22
  complete: 2025-12-22
  lovable: 2026-12-22
  marketing: false
  dogfooding_status: N/A

ai_research:
  name: 'AI Research'
  stage: ai-powered
  label: Category:AI Research
  documentation:
  direction: /direction/ai-powered/ai_model_validation/ai_research
  description: 'Evaluate models to support AI feature development across GitLab, and pair with product teams to explore and prove out new areas of AI product development.'
  maturity: minimal
  available: 2023-09-22
  viable: 2023-12-22
  complete: 2024-12-22
  lovable: 2025-12-22
  marketing: false
  dogfooding_status: N/A

code_suggestions:
  name: 'Code Suggestions'
  stage: create
  label: Category:Code Suggestions
  documentation: https://docs.gitlab.com/ee/user/project/repository/code_suggestions/index.html
  direction: /direction/create/code_creation/code_suggestions/
  description: 'AI Assistant for proactive coding suggestions and autocompletions'
  maturity: viable
  available: 2022-12-22
  viable: 2023-06-22
  complete: 2024-06-22
  lovable: 2025-12-22
  marketing: true

ai_evaluation:
  name: 'AI Evaluation'
  stage: ai-powered
  label: Category:AI Evaluation
  documentation:
  direction: /direction/ai-powered/ai_model_validation/ai_evaluation
  description: 'Automated AI Evaluation platform supporting model experimentation and testing'
  maturity: minimal
  available: 2023-09-22
  viable: 2023-12-22
  complete: 2024-12-22
  lovable: 2025-12-22
  marketing: false
  dogfooding_status: N/A

ai_abstraction_layer:
  name: 'AI Abstraction Layer'
  stage: ai-powered
  label: wg-ai-integration
  feature_labels:
    - 'group::ai framework' 
  documentation: https://docs.gitlab.com/ee/development/ai_features.html
  direction: /direction/ai-powered/ai_framework/ai_abstraction_layer/
  description: 'AI Abstraction Layer enables AI features across GitLab'
  maturity: viable
  available: 2023-04-22
  viable: 2023-06-22
  complete: 2024-06-22
  lovable: 2025-12-22
  marketing: false
  dogfooding_status: N/A

duo_chat:
  name: 'Duo Chat'
  stage: ai-powered
  label: Category:Duo Chat
  documentation: https://docs.gitlab.com/ee/user/ai_features.html
  direction: /direction/ai-powered/duo_chat/
  description: 'AI chat system to interact with GitLab workflows via natural language'
  maturity: minimal
  available: 2023-08-22
  viable: 2023-12-22
  complete: 2024-12-22
  lovable: 2025-12-22
  marketing: false
  dogfooding_status: N/A

# Single-engineer groups

mobile_devops:
  name: 'Mobile DevOps'
  stage: mobile
  label: 'mobile-devops'
  documentation:
  direction: /direction/mobile/mobile-devops
  description: ''
  maturity:
  marketing: false

five_minute_production_app:
  name: '5 Minute Production App'
  stage: deploy
  label: 'group::5MinProduction'
  documentation:
  direction: /direction/5-min-production
  description: 'Improve the ability for Web App developers to quickly create and scale their applications.'
  roi: false
  maturity:
  marketing: false

no_code_automation:
  name: 'No-code Automation'
  stage: no_code
  label: Category:No-code Automation
  feature_labels:
  documentation:
  direction: /direction/incubation/no-code-automation/
  description: 'A no-code tool to automate workflows through user-defined rules'
  roi: false
  marketing: false
