---
title: "Our ultimate guide to Git"
author: Valerie Silverthorne
author_gitlab: vsilverthorne
author_twitter: ValSilverthorne
categories: open source
image_title: '/images/blogimages/git-15th-anniversary-cover.png'
description: "Open source pioneer Git is 15 years old. Here is our guide to making the most of it."
tags: git, open source, features
twitter_text: "@gitlab offers the ultimate guide to Git"
featured: yes
postType: content marketing
merch_banner: merch_six
cta_button_text: 'Watch: GitOps expert panel'
cta_button_link: '/why/gitops-infrastructure-automation/'
---

_Git, a [source code management](/stages-devops-lifecycle/source-code-management/) tool and arguably the most famous open source software project, turned 15 in April 2020. That’s a milestone no matter how you look at it, and not surprisingly our team has a lot to say about Git. From a look back at the past to newbie-friendly explanations, we’ve pulled together the ultimate guide to Git (as told by GitLab)._

## Meet Git

If you’re just getting started with software development, you’ll have questions. Luckily, we have answers including background on developer Linus Torvalds in ["A beginner’s guide to Git"](/blog/2020/04/13/beginner-git-guide/).

![Linus Torvalds](/images/blogimages/linustorvalds.png){: .shadow.small.center}

The godfather of Git, Linus Torvalds.
{: .note.text-center}

## Get more out of Git

We all spend a ton of time working with Git so it makes sense to polish up your workflow so it shines. We’ve [got the lowdown](/blog/2020/04/07/15-git-tips-improve-workflow/) on Git blame, .gitignore, how to pull frequently, and more.

## Missed Git Merge?

Not everyone was lucky enough to attend the actual, in-person Git birthday party. Here’s our [first-person account](/blog/2020/03/25/git-merge-fifteen-year-git-party/) of the festivities, complete with lots of pictures.

![birthday balloons](/images/blogimages/balloons.jpg){: .shadow.small.center}

## Why Git flow doesn’t always go with the flow

You can have too much of a good thing, and if you doubt that, perhaps it’s because you haven’t yet encountered Git flow. Although designed to streamline development it ends up creating extra effort – too many branches and too much task switching. Never fear, though, [we have a solution](/blog/2020/03/05/what-is-gitlab-flow/).

## Git goes (really) big

When Git was invented 15 years ago, video streaming (and gaming) weren’t even on the horizon. Git can handle those huge files but there’s one hiccup: You can’t just download the one you need, Git insists you download all of them. Enter Git Partial Clone which speeds up the process so you can just grab the file you need. [Here’s how it works](/blog/2020/03/13/partial-clone-for-massive-repositories/).

## GitLab and GitHub on Git

Our senior developer evangelist [Brendan O’Leary](/company/team/#brendan) did a bit of a point counter-point about Git and its past and future with GitHub’s distinguished software engineer [Jeff King](https://www.linkedin.com/in/pefflinkedin/) on [infoq.com](https://www.infoq.com/news/2020/04/git-fifteen-anniversary-qa/).

## Never say never

Brendan also admitted that 15 years ago, he was never ever going to use Git. Ahem. Feel free to enjoy [his mea culpa](https://www.computerweekly.com/blog/Open-Source-Insider/GitLab-guru-15-years-later-were-still-learning).

## Dive into GitOps

You’ve heard the term, now is the time to understand what [GitOps](/solutions/gitops/) means and how it can work – well – in real world applications. Here’s what you need to know about [continuous delivery to production](/blog/2020/04/17/why-gitops-should-be-workflow-of-choice/).

Image by [Adi Gold](https://unsplash.com/@adigold1) on [Unsplash](https://www.unsplash.com)
{: .note}
