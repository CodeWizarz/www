---
title: "Upcoming breaking change: Python 3 will be the default version used in License Compliance"
author: Nicole Schwartz
author_gitlab: NicoleSchwartz
author_twitter: gitlab
description: "Python 3 will soon become the default version used by the Secure stage License Compliance feature."
categories: news
tags: releases, news, integrations
ee_cta: false
install_cta: false
postType: product
---

With the release of GitLab 12.2 on August 22, Python 3 will become the default version used in the Secure
stage License Compliance<sup>1</sup> feature. GitLab.com users should expect to see the change at
the beginning of August.

### What do I do if I use Python 2.0?

GitLab self-managed users with Python 2 will need to set the CI variable `LM_PYTHON_VERSION` to "2" when
they start using GitLab 12.2. GitLab.com users will need to do so at the beginning of August.

In the GitLab 12.0 release post, [we announced License Compliance<sup>1</sup> will change the
default version of Python from version
2 to version 3](/releases/2019/06/22/gitlab-12-0-released/#license-management-will-use-python-3-as-the-default-in-gitlab-12.2)
in GitLab 12.2, and that support for Python 2 would be deprecated in a future release due
to [Python 2.7 reaching the end of its life](https://pythonclock.org/) on Jan. 1, 2020.

### What if I currently use Python 3?

You can change License Compliance<sup>1</sup> to use Python 3 by setting the CI
variable `LM_PYTHON_VERSION` to "3" today. If you do not make this change before the default
is changed, it will only begin to work starting with GitLab 12.2.

##### <sup>1</sup>What is License Compliance?

License Compliance, formerly called License
Management, [is being renamed to better align with common industry vernacular starting in 12.2](/releases/2019/06/22/gitlab-12-0-released/#secure-license-management-renamed-to-license-compliance-in-gitlab-12.0).
The purpose of License Compliance is to track which licenses are used by third-party
components included in your project, like libraries and external dependencies, and to check that
they are compatible with your organizations licensing model. License Compliance is part of our
[Secure Composition Analysis group](/handbook/product/categories/#composition-analysis-group).

You can view the [documentation for License Management here](https://docs.gitlab.com/ee/user/compliance/license_compliance/index.html).
