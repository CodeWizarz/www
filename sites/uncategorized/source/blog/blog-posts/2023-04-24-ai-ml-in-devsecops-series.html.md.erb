---
title: AI/ML in DevSecOps Series
author: GitLab AI Assisted Group
guest: true
author_gitlab: 
author_twitter: 
categories: ai-ml
tags: DevOps, product, features, AI/ML
description: This blog series chronicles our journey to integrate AI/ML throughout the software
  development lifecycle.
image_title: /images/blogimages/ai-ml-in-devsecops-blog-series.png
twitter_text:
---

Our "AI/ML in DevSecOps" series tracks GitLab's journey to build and integrate AI/ML into our [DevSecOps](https://about.gitlab.com/topics/devsecops/) platform. Throughout the series, we’ll feature blogs from our product, engineering, and UX teams to showcase how we’re infusing AI/ML into GitLab. So be sure to bookmark this page and follow along.

This series details [many features introduced during our AI Fireside Chat](/blog/2023/05/03/gitlab-ai-assisted-features/) on May 3, 2023.

Get a [full overview of our AI-powered DevSecOps platform](https://about.gitlab.com/solutions/ai/). 

1. [What the ML is up with DevSecOps and AI?](/blog/2023/03/16/what-the-ml-ai/)
GitLab users already benefit from a step-function increase in productivity when they adopt our platform: streamlined collaboration, operational efficiencies, and massive acceleration in time to delivery. But by introducing machine learning (ML) and other artificial intelligence (AI) capabilities into the fabric of The [DevSecOps](https://about.gitlab.com/topics/devsecops/) Platform feature set, we aim to take those gains to a whole new level.

2. [How AI-assisted code suggestions will advance DevSecOps](/blog/2023/03/23/ai-assisted-code-suggestions/)
AI-assisted code suggestions can substantially improve the programming experience by reducing errors and helping programmers write code faster, which will help reproduce the much higher production code quality.

3. [ML experiment: Writing SQL is about to get a lot easier](/blog/2023/03/30/ml-experiment-sql/)
With the recent advancements in AI and natural language processing, it's now possible for AI models to generate SQL code from simple English language queries. This means that even people without a deep understanding of SQL can generate complex queries to analyze their data. This technology not only improves accessibility but can also save valuable time and effort for data analysts.

4. [ML experiment: Explain this source code](/blog/2023/04/06/explain-this-code/)
Deciphering the source code of a new software project can be a daunting or at least time-consuming task. The code may be poorly documented, or it may be written in a programming language that is unfamiliar to the developer. Even if the developer is familiar with the programming language, the code may be complex and difficult to understand. But what if developers had a helpful tool to figure out very quickly what code was doing? With recent advancements in AI models, it's now possible to have code explained in natural language.

5. [ML experiment: Summarizing issue comments](/blog/2023/04/13/summarize-issues/)
Large language models (LLMs) power generative AI solutions by using deep learning algorithms to analyze vast amounts of natural language data. These models are trained on massive datasets to develop an understanding of language patterns and context. Once trained, the models can generate new text that mimics human language. In a rapid prototype, our own Alexandru Croitor, Senior Backend Engineer, and Nicolas Dunlar, Senior Frontend Engineer for our Plan stage, leverage generative AI LLMs to power comment summarization within GitLab's issues.

6. [ML experiment: Summarize merge request changes](/blog/2023/04/20/merge-request-changes-summary-ai/)
Merge requests are the central point of collaboration for code changes in GitLab. They often contain a variety of changes across many files and services within a project. Often, merge requests communicate the intent of the change as it relates to an issue being resolved, but they might not describe what was changed to achieve that. As review cycles progress, the current state of the merge request can become out of sync with the realities of the proposed changes and keeping people informed. We believe that we can leverage AI and large language models (LLMs) to help provide relevant summaries of a merge request and its proposed changes, so reviewers and authors can spend more time discussing changes and less time keeping descriptions updated.

7. [ML experiment: Generate tests for code changes](/blog/2023/04/27/merge-request-suggest-a-test/)
Proposing changes and new features via merge requests is great, but what about the tests? Sometimes, tests can be the hardest part of any code change you make. We are leveraging generative AI to enable developers to create tests for merge request changes helping reduce the laborious but important task of writing tests increasing test coverage. 

8. [ML experiment: Explain this vulnerability](/blog/2023/05/02/explain-this-vulnerability/)
Security vulnerabilities aren't always easy to understand, especially for developers without experience or training with cybersecurity. We're leveraging AI to help developers understand security vulnerabilities and even get guidence on how to resolve them.

9. [ML experiment: Use a chatbot to answer how-to questions](/blog/2023/05/04/gitlab-chat-ai/)
Large language models (LLMs) have changed the way everyday people interact with large volumes of text. We thought, why not train an LLM on GitLab's extensive documentation to help users quickly answer natural language questions. Gone are the days of endless searching through vast documentation sites.

10. [Track ML model experiments with new GitLab MLFlow integration](/blog/2023/05/11/track-machine-learning-model-experiments/)
Model experiments allow data scientists to track different variations of machine learning models directly on GitLab.

11. [Code Suggestions available to all GitLab tiers while in Beta](/blog/2023/05/16/code-suggestions-for-all-during-beta/)
We've made code suggestions available to all plans for free during Beta. Also, learn about recent updates to Code Suggestions.

12. [ML experiment: Summarize my merge request review](/blog/2023/05/18/summarize-my-merge-request-review/) 
Learn how GitLab is experimenting with ML-powered merge request review summaries.

13. [How Code Suggestions can supercharge developers' daily productivity](/blog/2023/05/25/code-suggestions-improves-developer-productivity/)
Learn how you can use GitLab Code Suggestions to accelerate your development.

14. [ML experiment: Extending Code Suggestions to more development environments](/blog/2023/06/01/extending-code-suggestions/)
Learn how we're expanding Code Suggestions to support Visual Studio, 
JetBrains IDEs, Neovim, and other development environments.

15. [Train and deploy AI models with GitLab and Google Vertex AI](/blog/2023/06/08/training-and-deploying-ai-models-with-gitlab-and-vertex-ai/)
A demonstration of GitLab's DevSecOps capabilities combined with Vertex AI's scalable ML platform, designed with the aim of rapid and secure AI deployments. 

16. [Self-managed support for Code Suggestions (Beta)](/blog/2023/06/15/self-managed-support-for-code-suggestions/)
One of our most popular customer requests – self-managed support for Code Suggestsions (Beta) – is expected to ship soon in GitLab 16.1. Learn how it will work.

17. [Meet GitLab Duo - The suite of AI capabilities powering your workflows](/blog/2023/06/22/meet-gitlab-duo-the-suite-of-ai-capabilities/)
Learn about GitLab Duo, an expanding toolbox of features integrated directly into the GitLab platform to assist DevSecOps teams.

18. [GitLab for Visual Studio, including code suggestions, available in Beta](/blog/2023/06/29/gitlab-visual-studio-extension/)
GitLab for Visual Studio extension supports GitLab Duo code suggestions for both GitLab SaaS and GitLab self-managed.

19. [Empower ModelOps and HPC workloads with GPU-enabled runners integrated with CI/CD](/blog/2023/07/06/empowering-modelops-and-hpc-workloads-with-gpu-enabled-runners)
Learn how to leverage our GitLab-hosted GPU-enabled runners for ModelOps and high-performance computing workloads.

20. [GitLab Duo Code Suggestions for JetBrains and Neovim](/blog/2023/07/25/gitlab-jetbrains-neovim-plugins/) GitLab plugins for JetBrains IDEs and Neovim are now available in Beta,
bringing GitLab Duo Code Suggestions to more software development environments.

Want to learn even more about AI/ML? Check out our [AI Assisted Group direction page](/direction/modelops/ai_assisted/) and more [AI/ML articles](/blog/tags.html#AI/ML).
