---
title: "ML experiment: Explain this source code"
author: Torsten Linz, Taylor McCaslin
author_gitlab: tmccaslin
author_twitter: digital_saas
categories: ai-ml
guest: true
posttype: product
tags: DevOps, product, features, AI/ML
description: "Learn how GitLab is experimenting with ML-powered source code explanation features in this fourth installment of our ongoing AI/ML in DevSecOps series."
image_title: /images/blogimages/ai-experiment-stars.png
featured: yes
twitter_text: "Ever struggled to understand a code block? Learn how @gitlab is experimenting with ML-powered product features that help explain code."
---

<i>This blog post is part of an ongoing series about GitLab's journey to [build and integrate AI/ML into our DevSecOps platform](/blog/2023/04/24/ai-ml-in-devsecops-series/). The series starts here: [What the ML is up with DevSecOps and AI?](/blog/2023/03/16/what-the-ml-ai/). Throughout the series, we'll feature blogs from our product, engineering, and UX teams to showcase how we're infusing AI/ML into GitLab.</i>

Deciphering the source code of a new software project can be a daunting or at least time-consuming task. The code may be poorly documented, or it may be written in a programming language that is unfamiliar to the developer. Even if the developer is familiar with the programming language, the code may be complex and difficult to understand. But what if developers had a helpful tool to figure out very quickly what code was doing? With recent advancements in AI models, it's now possible to have code explained in natural language. 

## Explain this code with AI
At GitLab, we’re experimenting with AI-assisted code explanations. We want to enable software developers to quickly understand source code they encounter. Whether it's starting with a new project, contributing to a project in a language they're not fluent in, or just trying to understand historical code, we want to help developers get up to speed quickly.

In a rapid prototype, our own [Denys Mishunov](https://gitlab.com/mishunov), Staff Frontend Engineer, and [Michael Le](https://gitlab.com/mle), Senior Product Designer for our [Create::Source Code group](/handbook/product/categories/#source-code-group), leverage AI to power code explanations within [GitLab's repository source code file viewer](https://docs.gitlab.com/ee/user/project/repository/).


![Prototype UX for Explain this Code](/images/blogimages/explain-this-code-hr.png){: .shadow}

Above, you can see an example of highlighting a selection of code and asking for a code explanation. Watch the full demo below. 

<figure class="video_container">
  <iframe src="https://www.youtube-nocookie.com/embed/xzsFfFqvlnU" frameborder="0" allowfullscreen="true"> </iframe>
</figure>

## Iterating on AI/ML features
While just an experiment today, we are iterating on how to effectively bring features like this to our customers. We're starting on the repository file viewer, and this prototype can be extended to anywhere you interact with code within GitLab, from [merge requests](https://docs.gitlab.com/ee/user/project/merge_requests/) to [snippets](https://docs.gitlab.com/ee/user/snippets.html), and beyond. 

This experiment is just the start of the ways we’re looking to infuse GitLab with AI/ML capabilities to help GitLab users become more efficient and effective at their jobs. We are [looking across the software development lifecycle](/blog/2023/03/16/what-the-ml-ai/) for painful and time-consuming tasks that are ideal for AI Assisted features. We’ll continue to share these demos throughout this blog series.

Interested in using these AI-generated features? [Join our waitlist](https://forms.gle/9eeUkPJauKsbLaoz5) and share your ideas. 

Continue reading our ongoing series, "[AI/ML in DevSecOps](/blog/2023/04/24/ai-ml-in-devsecops-series/)".

_Disclaimer: This blog contains information related to upcoming products, features, and functionality. It is important to note that the information in this blog post is for informational purposes only. Please do not rely on this information for purchasing or planning purposes. As with all projects, the items mentioned in this blog and linked pages are subject to change or delay. The development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab._
