---
title: "It's time to build more accessible software. A DevOps platform can help"
author: Sara Kassabian
author_gitlab: skassabian
categories: devops platform
tags: DevOps, inside GitLab, open source
description: "Shifting accessibility left can make building accessible products simpler and more efficient. A DevOps platform makes it easier to customize and adjust priorities to suit your business needs."
image_title: /images/blogimages/accessibility.jpg
postType: content marketing
twitter_text: "We make the case for shifting accessible software development left. Here's how @gitlab's DevOps Platform can help."
featured: yes
---

The earlier a feature or process is introduced in the multi-step software development lifecycle (SDLC), the more likely it is to be fully integrated into the product. 

It's well documented how security can [shift left using a DevOps platform](/blog/2021/04/28/devops-platform-supply-chain-attacks/), so it's time to make the case that accessbility needs to be thought about earlier (and, clearly, a DevOps platform can facilitate that too). Although there are laws that require applications to meet certain accessibility requirements, which [opens an application up to a broader user base](/blog/2021/04/07/how-the-open-source-community-can-build-more-accessible-products/), rarely is accessibility considered a core product requirement. Instead, it is just a test tacked on at the end instead of being built into the DevOps platform process.

**[Learn more about [how the open source development community helps build accessible software](/blog/2021/04/07/how-the-open-source-community-can-build-more-accessible-products/)]**

"The problem really is that accessibility is not usually explicitly defined as a problem," said Segun Ola, a frontend web developer at engineering talent finder Andela, during a presentation at accessibility conference [axe-con](https://www.deque.com/axe-con/). "Most of the time, developers go through the product lifecycle and we identify all the other problems with a product or all of the things we want to solve and ignore accessibility for the greater part."

## Accessibility in software development: It starts with education

Oftentimes, omissions are unintentional and have more to do with a lack of awareness around why accessibility in software development is so important for many people living with disabilities and a key driver of business value. After all, the more accessible your product, the more users can benefit from it.

"I have met software engineers and designers who did not even know that there's a thing called a screen reader," Ola said. "Just last week, I was reviewing some code and explaining why the code needed to be refactored. A junior engineer asked me ‘what is a screen reader?’ So I had to get on a call with him and show him how screen readers work. And then he asks me, ‘What's the point of a screen reader?’ And I had to tell him: ‘Oh yeah there are people who can't see the way you and I see.’"

This is just one example of why having empathy and education around accessibility so important, says [Taurie Davis](/company/team/#tauriedavis), product design manager on Ecosystems at GitLab. Earlier in 2021, the GitLab UX team set a [goal to become a department of accessibility experts and advocates at GitLab](https://gitlab.com/groups/gitlab-org/-/epics/5235) by completing a 26-hour training at [Deque University](https://dequeuniversity.com/) on accessibility in software development.

## Ignoring accessibility? Expect more technical debt

Sometimes software companies will see investment in accessibility components for a product as expensive and/or as a trade-off for innovation. Development teams that wait until the end of the SDLC to think about accessibility are more likely to have coded components that are inaccessible, only to have to go back and rework them to suit legal accessibility standards. This process can lead to an immense amount of technical debt.

**Take a deep dive into [all aspects of the DevOps platform](/solutions/devops-platform/)**

"Once a team does start to become educated about accessibility and they have the empathy and have the drive to make the change and start shifting accessibility left it's easy to see all of the debt that you've accrued around accessibility," says Taurie. "It can be really expensive to get yourself out of that debt." Taurie points to examples such as having to go back to change variables for color contrast, and ensuring that filtering and tab reordering can be done in a way that screen readers understand it.

"There are just so many different aspects and elements that could cause you to go back and just rewrite how the entire feature was originally developed and that can affect every aspect of your product," she adds.

## Other barriers to implementing accessibility earlier

For UX designers like [Jeremy Elder](/company/team/#jeldergl), staff product designer on Ecosystems at GitLab, and Taurie, the typical workflow is about testing artifacts and responding to customer feedback, as opposed to thinking proactively about how someone might use the product.

"It’s more of a softer skill to think through a lot of those abstract ideas and what-ifs upfront rather than just saying, ‘Hey, we need this widget to do XYZ,’" says Jeremy. "Instead of asking questions like ‘how might somebody want to use this? How does it fit in their workflow?’. That is more inclusive thinking that helps you to do that, but it's harder and not as common."

## Building accessible software isn’t just ethical, it drives business value

Oftentimes accessibility in software development is framed around building products to better serve people living with disabilities. While this is essential and ethical, accessibility can also be about building software products that can easily adapt to a user’s workflow.

"It’s more rigor around understanding workflows and how somebody is wanting to use it and less about focusing necessarily on a disability per se, or an outcome," says Jeremy. "You want to think about personas or jobs to be done, not just think about the ultimate task, but how somebody is achieving that task."

**[Ten key features](/topics/devops-platform/) of a DevOps platform**

Products that are customizable and adaptable are more likely to pique the interest of clients who have specific needs (e.g., a screenreader) or workflow preferences (e.g., using a particular type of keyboard).

## What are the solutions?

The simplest solution to building more accessible software solutions is to think about accessibility at the beginning of the SDLC, rather than waiting until the end. Companies that use a complete DevOps platform like GitLab will find it simpler to take iterative steps toward shifting accessibility left. Need an example? Make accessibility part of the requirements a dev team needs to complete before a particular feature can be considered "done." One way to do this would be to update issue templates and MR templates to ensure an accessibility step is part of the checklist.

Whether it’s security or accessibility, shifting something left is about bringing the conversation to the beginning of the SDLC, something made much more straightforward with a DevOps platform. When it comes to accessibility, the more accessible the product is, the broader the pool of users (and future customers) can benefit.

## Read more about the DevOps Platform:

- [The journey to a DevOps Platform](/blog/2021/09/02/the-journey-to-a-devops-platform/)

- [How ten steps over ten years led to the DevOps Platform](/blog/2021/10/11/how-ten-steps-over-ten-years-led-to-the-devops-platform/)

- [Making the case for a DevOps platform: What data and customers say](/blog/2021/09/08/making-the-case-for-a-devops-platform-what-data-and-customers-say/)

- [Agile planning with a DevOps platform](/blog/2021/05/19/agile-planning-with-a-devops-platform/)

- [Welcome to the DevOps Platform era](/blog/2021/08/03/welcome-to-the-devops-platform-era/)

