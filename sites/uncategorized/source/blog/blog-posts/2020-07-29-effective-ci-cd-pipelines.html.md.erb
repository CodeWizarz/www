---
title: "Want a more effective CI/CD pipeline? Try our pro tips"
author: Valerie Silverthorne
author_gitlab: vsilverthorne
author_twitter: ValSilverthorne
categories: engineering
image_title: "/images/blogimages/cicdpipelines.jpg"
description: "Here’s how to take your CI/CD pipeline to the next level with hands on advice about faster builds, better security and more."
tags: CI/CD, DevOps, integrations
twitter_text: "Need a boost? Here are our best pro tips to get faster builds, better security and more integration. Check out @gitlab’s guide to a more effective CI/CD pipeline!"
featured: no
---

Now that your [CI/CD pipeline](/topics/ci-cd/) is up and running, it’s time to fine-tune the performance. This hands on guide will walk you through tweaks that will improve a CI/CD pipeline’s speed, functionality, security, and integration with other tools and platforms.

## Built for speed

CI/CD and DevOps promises faster releases and we know it’s true: Even a basic automated pipeline is much speedier than the old days of manual handoffs. But there are ways to make the CI/CD pipeline even zippier. One straightforward option that guarantees faster builds is to [autoscale runners](/blog/2019/08/21/making-builds-faster-autoscaling-runners/). If you have 15 minutes to spare, you can link your GitLab CI pipeline to the [Google Kubernetes engine](/blog/2020/03/27/gitlab-ci-on-google-kubernetes-engine/). And it doesn’t get much faster than using the [Auto DevOps option](/blog/2019/07/12/guide-to-ci-cd-pipelines/) if you’re setting up a new pipeline from scratch.

## Do more with less

Once a pipeline is humming along, it’s time to think about tinkering with what you have. This is one of our favorite things to do at GitLab – we even used our CI/D pipeline to [turn our group conversation into a podcast](/blog/2019/07/03/group-conversation-podcast/). We had an [unconventional CI/CD journey](/blog/2019/10/03/gitlab-journey-to-cicd/), which goes a long way to explaining our overall enthusiasm for this technology.

Our best advice when it comes to an effective CI/CD pipeline is to think outside the box. Need build images? It’s [easy to do](/blog/2019/08/28/building-build-images/) with your CI/CD pipeline. You can also [create a cross-project pipeline](/blog/2019/07/24/cross-project-pipeline/), or [build a bridge between Rust and Firebase](/blog/2019/11/15/python-rust-and-gitlab-ci/).

## Make it secure

It’s fun to play around with CI/CD functionality, but it’s critical to make sure your pipeline is secure. Start by making sure you [know the threat landscape](/blog/2019/11/19/defend-cicd-security/). If you store key data in secrets management service [Vault](https://www.vaultproject.io), here’s how GitLab [makes the integration process easier and safer](/blog/2020/02/13/vault-integration-process/).

And for Jenkins users, it’s simple to [create deterministic security jobs](https://docs.gitlab.com/ee/integration/jenkins.html) from within GitLab.

## Work with what you have

No effective CI/CD pipeline exists in a vacuum and to get the most out of yours it’s important to seamlessly integrate with other platforms and tools.

AWS users can [set up multi-account SAM deployments](/blog/2019/02/04/multi-account-aws-sam-deployments-with-gitlab-ci/) or [autoscale GitLab CI](/blog/2020/05/11/introducing-autoscaling-gitlab-runners-on-aws-fargate/) on Fargate.

Teams working on Android projects can [can create a customized GitLab CI](/blog/2018/10/24/setting-up-gitlab-ci-for-android-projects/) easily.

And finally it’s possible to take advantage of Google’s Firebase, a backend-as-a-service tool, so you can enable [continuous deployment of database, serverless and apps](/blog/2020/03/16/gitlab-ci-cd-with-firebase/).

**Read more about CI/CD:**

* [The four big benefits](/blog/2019/06/27/positive-outcomes-ci-cd/) of CI/CD

* [CI/CD challenges](/blog/2019/06/05/modernize-your-ci-cd/) to consider

* Everything you need to know about [Auto DevOps](/blog/2019/10/07/auto-devops-explained/)

Cover image by [Jacek Dylag](https://unsplash.com/@dylu) on [Unsplash](https://www.unsplash.com)
{: .note}
