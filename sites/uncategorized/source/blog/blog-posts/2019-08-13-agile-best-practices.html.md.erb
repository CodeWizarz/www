---
title: "5 Agile best practices"
author: Suri Patel
author_gitlab: suripatel
author_twitter: gitlab
categories: insights
image_title: '/images/blogimages/run-agile-in-gitlab.jpg'
description: "Make the most out of Agile development with these technical best practices."
tags: agile, collaboration, DevOps, workflow
postType: content marketing
related_posts:
  - "/blog/2020/12/17/gitlab-for-cicd-agile-gitops-cloudnative/"
  - "/blog/2020/11/11/gitlab-for-agile-portfolio-planning-project-management/"
  - "/blog/2018/03/05/gitlab-for-agile-software-development/"
---

[Agile development](/solutions/agile-delivery/) can have
a transformative impact on teams and applications. These five best practices can
help your team streamline and accelerate delivery.

## 1. Continuous integration

[Continuous integration](/features/continuous-integration/) works by pushing small code chunks
to an application‚Äôs codebase hosted in a Git repository. Every push triggers a pipeline of scripts to build,
test, and validate code changes before merging them into the main branch. By
building and testing each change as early as possible ‚Äì usually several times a
day ‚Äì teams can detect errors as quickly as possible, reduce integration problems,
and avoid compounding problems, allowing teams to develop faster, with more confidence.

## 2. Retrospectives

[Retrospectives](/blog/2019/03/07/how-we-used-gitlab-to-automate-our-monthly-retrospectives/) are conversations about what went well and what went wrong in a
project or iteration. One of the most important Agile qualities is continuous
learning, and retros provide a transparent way to discuss how various teams
experienced a sprint and voice any concerns or ideas.

> ‚ÄúA successful team is a happy team. Bringing down cycle time can help a team be more
successful because they are shipping value more often, but your team might have more
important things that must be addressed first. Using retrospectives will help you figure
out what success means to your team, and what needs to be done to achieve
that success.‚Äù ‚Äì [Rachel Nienaber](/company/team/#rnienaber), engineering manager, Geo

To generate the best results from a retrospective, there should be
[a safe environment for feedback and discussion and a plan for advancing discussion
from facts to
conclusions](/handbook/engineering/management/group-retrospectives/).

## 3. Pairing

Pairing sessions can help team members work through features both large and small,
inspiring problem-solving and ideation. When pairing, one team member writes code
while the other reviews each line. Pairing results in fewer bugs, increased innovation,
and skills development. Team members can learn from each other and discover best
practices. Team members can spontaneously pair or managers can set up a more
[formal pairing session process](https://gitlab.com/gitlab-com/support/support-training/issues?label_name%5B%5D=pairing) üçê

## 4. Iterative development

When teams iterate with small changes, they can
[reduce cycle time](/blog/2018/10/12/strategies-to-reduce-cycle-times/) and spark rapid feedback cycles.
By making the quickest changes possible to improve a user's outcome, teams can add
useful functionality with fewer bugs or usability issues since potential problems
are spotted early. Other benefits of iterative development include faster time to
market, reduced scope creep, and increased morale (i.e. team members can see their
work right away rather than wait several releases).

## 5. Burndown charts

If your team uses a Scrum framework, consider using [burndown charts](https://docs.gitlab.com/ee/user/project/milestones/burndown_and_burnup_charts.html) to monitor
sprint progress. Teams can visualize the work scoped in the current sprint to
understand what work has been completed, allowing them to react to risks quickly
and adapt. This information can help business stakeholders understand that anticipated
features may be delayed until a future sprint.

Employing Agile best practices will have a significant positive impact on efficiently
creating customer-centric products.

Do you have any best practices that have transformed your team‚Äôs development process? We‚Äôd love to hear them!

Cover image by [Mikael Kristenson](https://unsplash.com/@mikael_k?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/photos/6GjHwABuci4)
{: .note}
