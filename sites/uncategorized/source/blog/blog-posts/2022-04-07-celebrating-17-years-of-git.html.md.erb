---
title: Celebrating 17 years of Git
author: Valerie Silverthorne
author_gitlab: vsilverthorne
author_twitter: ValSilverthorne
categories: insights
tags: Git, DevOps, collaboration
description: Here's the history, tips, tricks and even a mea culpa to help
  celebrate the 17th anniversary of Git.
image_title: /images/blogimages/gitbirthday.jpg
twitter_text: "It's the 17th anniversary of #Git today. Here are our favorite
  tips and tricks, a few memories and even a mea culpa."
---

Seventeen years ago, the Linux community embraced Git as its universal open source version control solution. Created by Linus Torvalds, Git replaced BitKeeper, a proprietary but free-of-charge option that worked, to a point, until it didn’t (and ultimately started costing a fee).

In the years since, there’s been little to no agreement on what the term “Git” actually means but there’s no disputing its rockstar status in the DevOps world. Tens of millions developers rely on Git’s fast and seamless branching capabilities every single day. In fact, 85% of DevOps professionals who took our [2021 Global DevSecOps Survey](/developer-survey/) said they use Git for source control.

So, to honor this anniversary, we share our favorite Git tips and tricks and look back at the origins of its name, its 15th anniversary celebration, and even a declaration from one of our own who was certain Git would _never be in his toolkit_. No, really.

## The origin of the name Git

There’s not much quirky or charming about the world of DevOps, but the theories around the origin of the name Git may be an exception. Torvalds claimed to have named Linux after himself, and he said Git (British slang for “jerk”) was no different. “I’m an egotistical b*stard, and I name all my projects after myself,” he [said at the time](https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git). 

The source code’s README takes the story in a different direction: Git is easy to pronounce, not used by UNIX, and could sound like “get.” It could be [British shade-throwing](http://www.peevish.co.uk/slang/english-slang/g.htm?qa=150&ss360SearchTerm=git#git), or it could stand for “global information tracker” (the choice of those happily working with a functioning tool). And for those frustrated with Git, there’s also “goddamn idiotic truckload of sh*t.”

## Tips and tricks for better Git

Is it possible to improve on a tool that so many use every single day? Actually, it is, starting with 15 ways [to get a better Git workflow](/blog/2020/04/07/15-git-tips-improve-workflow/). Learn how to:

- autocomplete commands
- use Git blame more efficiently
- reset files
- understand the plugins

Also, Git can help [keep merge requests tidy and humming along](/blog/2019/02/07/start-using-git/).

For an exhaustive look at how GitLab uses Git internally, including .gitconfig on steroids, the lowdown on aliases, and command line tips, we’ve [gathered a life-changing list](/blog/2016/12/08/git-tips-and-tricks/). Also, here’s our take on [why (and how) to keep your Git history clean](/blog/2018/06/07/keeping-git-commit-history-clean/) and how to do it using [interactive rebase](/blog/2020/11/23/keep-git-history-clean-with-interactive-rebase/).

## Remembering the 15th anniversary celebrations

Landmark anniversaries always make people reflect, and Git’s 15th in 2020 was no exception. Not only was there [an actual party – Git Merge 2020](/blog/2020/03/25/git-merge-fifteen-year-git-party/), our staff developer evangelist Brendan O’Leary admitted the unthinkable: Back in the day, he was [never ever going to use Git](https://www.computerweekly.com/blog/Open-Source-Insider/GitLab-guru-15-years-later-were-still-learning). Brendan, who obviously has learned his lesson, also teamed up with GitHub’s distinguished software engineer Jeff King to talk about [Git’s impact on software development](https://www.infoq.com/news/2020/04/git-fifteen-anniversary-qa/).

## Practical Git

Although there’s a lot to learn about Git, Brendan and other developers consistently stress the simplicity is what sets it apart. So here are three of our most bookmarked pages of straightforward Git advice:

[6 common Git mistakes and how to fix them](/blog/2018/08/08/git-happens/)
[Understand the new Git branch default name](/blog/2021/03/10/new-git-default-branch-name/) 
[A guide to Git for beginners](/blog/2020/04/13/beginner-git-guide/)

So make sure to raise a glass to 17 years of Git and its many benefits.
