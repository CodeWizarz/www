---
title: "5 Ways to resist the threat of service-wrapping with buyer-based open core"
author: Vanessa Wegner
author_gitlab: vwegner #
author_twitter: _vanessaptri
categories: open source
image_title: '/images/blogimages/osls-buyer-based-open-source.jpg'
description: "Commercial open source businesses are at risk of commoditization by hypercloud providers – here are some ways to avoid the trap."
tags: community, open source, inside GitLab
cta_button_text: 'Watch the presentation'
cta_button_link: 'https://youtu.be/G6ZupYzr_Zg'
ee_cta: false
postType: corporate
---

GitLab makes money as a commercial open source software (COSS) business. As you
might imagine, open source is at risk of becoming commoditized, just by its
inherent characteristic of being completely … open. In today’s age of hyperclouds,
open source businesses are under threat of [service-wrapping via cloud
providers like Amazon](https://aws.amazon.com/blogs/aws/new-open-distro-for-elasticsearch/), Microsoft, and Google.

To avoid commoditization, [GitLab has tried a number of business models](/blog/2018/11/09/monetizing-and-being-open-source/), from
donations to consultancy to single-tenant service, but none of them worked.
Finally, we settled on open core. At this year’s Open Source Leadership Summit,
our CEO [Sid Sijbrandij](/company/team/#sytses) talked about where GitLab has hedged its bet to avoid becoming obsolete.
As Sid describes in the presentation below, there are five key methods for resisting
commoditization with buyer-based open core.

## Watch the presentation

<!-- blank line -->
<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/G6ZupYzr_Zg" frameborder="0" allowfullscreen="true"> </iframe>
</figure>
<!-- blank line -->

## Key takeaways

### What is buyer-based open core?

Buyer-based means that GitLab offers [four different tiers of the software](/pricing/), which offer different functionality based
on what each buyer persona needs.

### How do you generate revenue with buyer-based open core?

Each tier focuses on what the buyer wants – and nothing more. It is also priced
accordingly. Those at a higher level in the organization often have more budget
authority – so they can spend budget on what provides value for them.

### How can COSSes avoid commoditization?

1. Insert proprietary functionality in a majority of your use cases.
1. Offer many proprietary features.
1. Offer interaction through a user interface, rather than through APIs.
1. Cater to price-insensitive buyers.
1. Attract users that rarely contribute to open source.

Learn more about these best practices and how GitLab has implemented them by
[watching Sid’s presentation](https://youtu.be/G6ZupYzr_Zg), or viewing his slides below:

<figure class="video_container">
<iframe src="https://docs.google.com/presentation/d/e/2PACX-1vRzKYXPPenZlKkbun3AklJP-xgrC4ga-AqBRyVxOAs2tczZ1VNNUGriYy0vF8iBccuT58rDcwateT3P/embed?start=false&loop=false&delayms=3000" frameborder="0" width="960" height="569" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>
</figure>

Cover image by [Nastuh Abootalebi](https://unsplash.com/@sunday_digital) on
[Unsplash](https://unsplash.com/photos/eHD8Y1Znfpk)
{: .note}
