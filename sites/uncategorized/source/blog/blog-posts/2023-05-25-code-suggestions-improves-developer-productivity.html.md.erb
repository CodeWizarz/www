---
title: "How Code Suggestions can supercharge developers' daily productivity"
author: Neha Khalwadekar
author_gitlab: nkhalwadekar 
author_twitter: bytes_and_bites
categories: ai-ml
posttype: product
tags: DevSecOps, product, features, AI/ML
description: "Learn how you can use GitLab Code Suggestions to accelerate your development."
image_title: /images/blogimages/ai-experiment-stars.png
featured: yes
twitter_text: 'Learn how you can use @GitLab Code Suggestions to accelerate your development'
---

<i>This blog is the latest post in an ongoing series about GitLab’s journey to <a href="/blog/2023/04/24/ai-ml-in-devsecops-series/">build and integrate AI/ML into our DevSecOps platform</a>. The first blog post can be found <a href="/blog/2023/03/16/what-the-ml-ai/">here</a>. Throughout the series, we’ll feature blogs from our product, engineering, and UX teams to showcase how we’re infusing AI/ML into GitLab.</i>

In the fast-paced world of software development, time is a precious resource. Developers constantly strive for ways to improve the productivity and efficiency of their workflows. Enter Code Suggestions, a large language model (LLM)-based technology that can transform the everyday developer experience. Let’s delve into the novel use cases of Code Suggestions, including: 

* simplifying operations
* assisting new developers in language explorations
* eliminating the need for frequent web searches by experienced developers

All of these are examples of how Code Suggestions can accelerate the daily developer experience. Let’s explore some specific examples of these use cases.

## Import packages
With Code Suggestions, developers can quickly complete mundane tasks like importing Python packages. 
![Example](/images/blogimages/2023-05-25-Blog-code-suggestions-improves-developer-productivity/python_packages.gif)


## Complete functions
Code Suggestions can help developers complete functions and use those functions to write code. In the example below, we are defining the first and last name and then defining a full name. Now we can take this a step forward and use those defined functions in a user form. 
![Example](/images/blogimages/2023-05-25-Blog-code-suggestions-improves-developer-productivity/sample_functions.gif)


## Fill in boilerplate
Developers can use Code Suggestions to recommend boilerplate code such as connecting to a mySQL database.
![Example](/images/blogimages/2023-05-25-Blog-code-suggestions-improves-developer-productivity/mysql-boiler.gif)


## Building data frames
Data manipulation is a fundamental task for developers working with structured data. Code Suggestions can simplify the process of offering intelligent recommendations for DataFrame operations. Code Suggestions can assist in saving developers the time and effort of searching through documentation or experimenting with trial and error.
![Example](/images/blogimages/2023-05-25-Blog-code-suggestions-improves-developer-productivity/dataframe.gif)


## Generate unit tests
With Code Suggestions, developers can quickly write unit tests for the supported programming languages.
![Example](/images/blogimages/2023-05-25-Blog-code-suggestions-improves-developer-productivity/unit-test.gif)


## Try Code Suggestions today
Code Suggestions is now available for free on GitLab.com for all users while the feature is in Beta. Teams can boost efficiency with the help of generative AI that suggests code while they're developing. We are improving the underlying AI model weekly to improve the [quality of suggestions](https://gitlab.com/groups/gitlab-org/-/epics/10562). Please remember that AI is non-deterministic, so you may not get the same suggestion from week to week. Also remember that any time you are using AI-generated code you should be automatically analyzing it with [code quality](https://docs.gitlab.com/ee/ci/testing/code_quality.html) and [security scanning](https://docs.gitlab.com/ee/user/application_security/), both of which are available natively in the GitLab platform. 

We’ve extended [language support](https://gitlab.com/groups/gitlab-org/-/epics/10561) from our initial six languages to now include 13 languages: C/C++, C#, Go, Java, JavaScript, Python, PHP, Ruby, Rust, Scala, Kotlin, and TypeScript.

Read more about these [improvements and what’s next.](https://about.gitlab.com/blog/2023/05/16/code-suggestions-for-all-during-beta/)

Interested in using these AI-powered features? [Join our waitlist](https://forms.gle/9eeUkPJauKsbLaoz5) and share your ideas.

Continue reading our "[AI/ML in DevSecOps](https://about.gitlab.com/blog/2023/04/24/ai-ml-in-devsecops-series/)" series.

_Disclaimer: This blog contains information about upcoming products, features, and functionality. It is important to note that the information in this blog post is for informational purposes only. Please do not rely on this information for purchasing or planning purposes. As with all projects, the items mentioned in this blog and linked pages are subject to change or delay. The development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab._
