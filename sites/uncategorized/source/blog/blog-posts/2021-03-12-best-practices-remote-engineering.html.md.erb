---
title: "5 Ways to level up your remote engineering skills"
author: Sara Kassabian
author_gitlab: skassabian
author_twitter: gitlab
categories: culture
image_title: '/images/blogimages/library/collaboration.png'
description: "A round-up of our blog posts unpacking the top tips for working remotely as an engineer."
tags: remote work
twitter_text: "Top @GitLab stories on engineering while remote"
featured: no
postType: content marketing
related_posts:
  - "/blog/2021/01/29/tips-for-managing-engineering-teams-remotely/"
  - "/blog/2021/02/09/engineering-teams-collaborating-remotely/"
  - "/blog/2021/02/04/remote-pair-programming-tips/"
merch_banner: merch_six
---

The COVID-19 pandemic means many engineering teams have made the shift from working under one roof to [working remotely](/company/culture/all-remote/guide/). For some companies that [change could be permanent](https://www.businessinsider.com/salesforce-employees-can-work-from-home-permanently-2021-2). At GitLab, this is how we've always worked. This round-up consolidates some of the top insights from leaders in the all-remote space, and also includes a number of best practices engineering teams of all sizes can replicate.

## 1. Embrace a remote-first culture

Two HubSpot team members joined GitLab Virtual Commit, our user conference, to talk about how discarding a remote-friendly culture in favor of a remote-first culture helped build a more inclusive workplace. Watch the video below to learn more about HubSpot's move to remote.

<!-- blank line -->
<figure class="video_container">
  <iframe src="https://www.youtube-nocookie.com/embed/zULmuyw3P38" frameborder="0" allowfullscreen="true"> </iframe>
</figure>
<!-- blank line -->

## 2. Be a thoughtful manager

Let’s be honest, managing an all-remote, globally distributed team is different from managing when you’re all in the office. [Engineering managers at GitLab share their tips for being a thoughtful and effective team leader – from a distance](/blog/2021/01/29/tips-for-managing-engineering-teams-remotely/).

## 3. Cut down on Zoom fatigue

Every engineering manager we talked to suggested cutting down on the number of meetings and make the pivot to asynchronous work. In this session from GitLab Virtual Commit, Luke Thomas with Friday.app explains how to make the transition.

<!-- blank line -->
<figure class="video_container">
  <iframe src="https://www.youtube-nocookie.com/embed/o1L_ztow1jk" frameborder="0" allowfullscreen="true"> </iframe>
</figure>
<!-- blank line -->

Need to cut down on Zoom fatigue but still require weekly discussions? The GitLab Support team got creative and [turned their weekly department meeting into a podcast](/blog/2019/06/03/how-we-turned-40-person-meeting-into-a-podcast/ ). Now, team members can catch up on the latest developments on their own time and off-camera.

## 4. Some advice on engineering together while apart

[Collaboration on an all-remote team takes practice](/blog/2021/02/09/engineering-teams-collaborating-remotely/). GitLab team members we interviewed suggest embracing asynchronous communication, share suggestions for onboarding new engineers, and more.

Watch this video from GitLab Virtual Commit to dive deeper into best practices for remote onboarding engineers.

<!-- blank line -->
<figure class="video_container">
  <iframe src="https://www.youtube-nocookie.com/embed/tdWxlpN8dUk" frameborder="0" allowfullscreen="true"> </iframe>
</figure>
<!-- blank line -->

Pair programming is great for problem solving tricky code, but when you work on an all-remote team, you can’t just pull up a chair and get it done. [Our remote pairing enthusiasts share four tips on how to make it happen](/blog/2021/02/04/remote-pair-programming-tips/).

When it comes to pairs, [nothing goes together better than Agile software development and all-remote work practices](/blog/2021/03/02/agile-for-remote-work/). GitLab (the product) is built on Agile principles and facilitates remote collaboration while GitLab (the company) is made up of a globally distributed workforce.

## 5. Always know your results

GitLab is a [results-driven company](/handbook/values/#results), meaning we care about what you achieve than how you achieve it. To measure your engineering productivity, we suggest calculating your merge request (MR) rate. [Read on to learn why this metric matters](/blog/2020/08/27/measuring-engineering-productivity-at-gitlab/).

## Bonus: Learn more about remote work

We have a number of resources to help engineering teams up-level their all-remote work. Here are a few places to start:

- [How to manage a remote team](https://www.coursera.org/learn/remote-team-management): Join nearly 17,000 people in taking the Coursera class we created to help newly remote teams. Learn how to manage a remote team (for free).
- Get the [GitLab guide to all-remote work](/company/culture/all-remote/guide/): We round-up lots of remote work tips in our all-remote section of the GitLab Handbook.
- Check out more resources on our [all-remote hub](/company/culture/all-remote/), including our 2021 Remote Playbook, the Remote Manifesto, and more.
