---
title: "Need DevOps buy-in? Here's how to convince stakeholders"
author: Sara Kassabian
author_gitlab: skassabian
author_twitter: gitlab
categories: insights
image_title: '/images/blogimages/speedphoto.jpg'
description: "If you need to make the case for DevOps to a non-technical crowd, it's important to be prepared. Here's what you need to know."
tags: DevOps, user stories, collaboration
twitter_text: "Need to sell DevOps to non-techie management? Here's what to do"
featured: yes
postType: content marketing
merch_banner: merch_eight
---

We know that DevOps is key to staying nimble in an increasingly competitive marketplace, but chances are your colleagues in finance or marketing aren’t as well-informed about software development.

One of the major challenges technology teams embedded in non-tech organizations face is convincing key business stakeholders to invest in cutting-edge methodologies such as [DevOps](/topics/devops/). Oftentimes, this challenge comes down to ineffective communication and misaligned incentives.

"Unfortunately, the divide between these incentives and the misalignment in these incentives is not exclusively held between developers and operators, the similar divide exists between the business and IT, in fact, in the business, they may not even be able to tell the difference between developers and operators, it's all IT to them," said [Nathen Harvey](https://twitter.com/nathenharvey), Developer Advocate from Google, at GitLab Virtual Commit. "Much like from my perspective, it's just the business: finance, marketing, accounting, they all go together and blur in my head."

The best way to get stakeholders to buy-in to DevOps? Align incentives, think big picture, lead with empathy, and come prepared with evidence about the business value of DevOps.

## Align incentives on your technology team

Before approaching the key decision-makers about investing in DevOps, make sure there is consensus among dev and ops about what direction you’re moving in. The tension between dev and ops teams is well documented: Developers tend to want greater agility, while operators want more stability.

"We turn to our developers and we say, 'Your job is to build and ship features as fast as possible, your job is agility,'" said Nathen. "And then we turn to our operators and we say, 'Your job (is to) make sure that the platform is stable, that nothing ever breaks.'"

The good news is, DevOps is a way to have the best of both worlds.

Before he joined Google, Nathen worked for a retail company where his responsibility was to push the "deploy" button to ship new software updates every two weeks. There was a lot of ceremony around deployments, but there was also an office pool about how many of those changes would be rolled back.

Research by Google Cloud’s DevOps Research and Assessment (DORA) shows that teams that ship smaller features move faster while maintaining a more stable production environment, with numbers to prove it. When comparing the elite performers with the low performers, elite DevOps performers manage to balance speed and stability:

*   Deploy code 208 times more frequently
*   106 times faster from commit to deploy
*   Changes are likely to fail just 1/7 of the time
*   2604 times faster recovery time from incidents

Once you have developers and operators clamoring for DevOps, it’s time to move on to the next stakeholder tier.

## Think about the business you work for

GitLab is a software company, so we’re always thinking about new ways to deploy faster and more nimble code. If our developers found a new way to achieve this, we’re all ears. Most of our customers don't work for tech companies, but the most successful ones have found a way to make technology relevant to their business’ mission.

For example, [Delta Airlines found a way to go cloud native](/blog/2019/10/17/delta-cloud-native/) because it fit into their mission of business agility. Whether you’re in transportation or e-commerce, business agility is something we can all agree on. Make a list of the top three priorities for your company and think about what your customers want (e.g., in the pandemic it may be an app with reliable curbside pick-up). Think about your company’s mission and business strategy and sketch out a compelling case for why DevOps will help your business edge out the competition.

## Lead with empathy and think strategically

Before approaching your collaborators on the business side of things, put yourself in their shoes. Think in-depth about their motivations and goals to find the most compelling way to communicate with them.

First, write your problem statement (e.g., "I want to adopt a more agile DevOps strategy"). Next, identify three key stakeholders across different teams on the business side of things (e.g., Max in Marketing, Alex in Accounting, and Lee in Legal). After that, conduct an informal thought exercise to enable more empathetic and strategic thinking:

*   Look at their job description. What are their core responsibilities?
*   Think about resourcing. What are their resource constraints?
*   What is their level of influence over the decision? Grade their influence on a scale of one to five (one being low influence, five being high influence)
*   How does helping your tech team be more agile impact their team’s performance and goals?

In the end, communicating with stakeholders about DevOps is all about finding common ground.

## Close with evidence

Let’s face it, the business side of your organization might not know the difference between a developer and an ops pro any more than you understand the intricacies of accounting, and that’s OK. So long as things aren’t broken, the gatekeepers are probably disinclined to fix it. But what if you can demonstrate just how much better things could be with a more [agile software delivery strategy](/solutions/agile-delivery/)?

The DORA team at Google created a [rigorous State of DevOps research program](https://www.devops-research.com/research.html) that assesses how different industries can improve software delivery. A simple five-question survey on five DevOps capabilities will rank your team into four tiers of performance – between low performer and elite performer.

Evaluating your progress is key. Nathen's deployments at a previous employer had good "time to restore" rates but the fail change rate was between 16-30%, a metric that leaves a lot of room for improvement.

"We felt like we were doing really well, and in fact, we were, we had made a ton of great progress, but there were still lots of opportunities for us to improve," said Nathen. "So using this quick check can help you and your team identify where are some opportunities for you to improve? How do you stand up against the others within your industry?"

In the end, Nathen’s team ranked as a medium performer. So how does your team line-up? By coming prepared to the meeting with evidence on concrete ways a DevOps methodology can lead to more business agility, you are more likely to get the endorsement of key stakeholders on your plan.

## Learn more about measuring software delivery

Learn more about measuring DevOps by watching the keynote featuring Nathen and Dina Graves Portman from GitLab Virtual Commit. [Watch the other keynotes](https://www.youtube.com/playlist?list=PLFGfElNsQthYQaTiUPQcu4O0O20WHZksz), including a [presentation](https://youtu.be/xn_WP4K9dl8) by [GitLab CEO Sid Sijbrandij](/company/team/#sytses).

<!-- blank line -->
<figure class="video_container">
  <iframe src="https://www.youtube-nocookie.com/embed/yUyZExE-5TU" frameborder="0" allowfullscreen="true"> </iframe>
</figure>
<!-- blank line -->

Cover image by [CHUTTERSNAP](https://unsplash.com/@chuttersnap?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/speed?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
