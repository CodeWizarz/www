---
title: "ML experiment: Summarize my merge request review"
author: Kai Armstrong
author_gitlab: phikai
author_twitter: phikai
categories: ai-ml
posttype: product
tags: DevSecOps, product, features, AI/ML
description: "Learn how GitLab is experimenting with ML-powered merge request review summaries in this latest installment of our ongoing 'AI/ML in DevSecOps' series."
image_title: /images/blogimages/ai-experiment-stars.png
featured: no
twitter_text: "Have you written one too many review comments? Learn how @gitlab is experimenting with ML-powered product features that help you summarize your review feedback."
---

<i>This blog is the latest post in an ongoing series about GitLab’s journey to <a href="/blog/2023/04/24/ai-ml-in-devsecops-series/">build and integrate AI/ML into our DevSecOps platform</a>. The first blog post can be found <a href="/blog/2023/03/16/what-the-ml-ai/">here</a>. Throughout the series, we’ll feature blogs from our product, engineering, and UX teams to showcase how we’re infusing AI/ML into GitLab.</i>

During the course of reviewing a merge request, you may sometimes leave many comments. Those comments may have specific information about things that need to be changed, or context for why you're leaving feedback on the proposed changes. If you've left a lot of comments, it might be hard to remember everything you've said and what the author should look at to resolve your feedback.

In a rapid prototype, [Stanislav Lashmanov](https://gitlab.com/slashmanov), Senior Frontend Engineeer for our [Code Review Group](/handbook/product/categories/#code-review-group), used AI/ML to summarize your merge request review when [submitting your review](https://docs.gitlab.com/ee/user/project/merge_requests/reviews/#submit-a-review). He developed a new AI action that provides a summary, and allows you to edit or revise prior to submitting the review:

![Summarize my merge request review via AI](/images/blogimages/summarize-my-merge-request-review-ai.gif){: .shadow}

Providing authors with these review summaries allows them to quickly understand the feedback and scope of revisions required without the need to process the entire review. This helps to speed up the cycle time for teams as they work through review rounds in merge requests.

## Iterating on AI/ML features

While just an experiment today, we are iterating on how to effectively bring features like this to our customers. We'll continue to refine the type of review feedback we provide, and then look at how we can better integrate these summaries in to the review cycle. You can see some of our [design efforts](https://gitlab.com/gitlab-org/gitlab/-/issues/408307) we've been exploring with the [summarizing merge request changes](/blog/2023/04/20/merge-request-changes-summary-ai/) feature to get an idea of our possible direction.

This experiment is just the start of the ways we're infusing GitLab with AI/ML capabilities to help GitLab users become more efficient and effective at their jobs. We are [looking across the software development lifecycle](/blog/2023/03/16/what-the-ml-ai/) for painful and time-consuming tasks that are ideal for AI-assisted features. We'll continue to share these demos throughout this blog series.

Interested in using these AI-generated features? [Join our waitlist](https://forms.gle/9eeUkPJauKsbLaoz5) and share your ideas.

Continue reading our "[AI/ML in DevSecOps](/blog/2023/04/24/ai-ml-in-devsecops-series/)" series.

_Disclaimer: This blog contains information related to upcoming products, features, and functionality. It is important to note that the information in this blog post is for informational purposes only. Please do not rely on this information for purchasing or planning purposes. As with all projects, the items mentioned in this blog and linked pages are subject to change or delay. The development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab._
