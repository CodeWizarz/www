---
title: "Ask a hacker: ajxchapman"
author: Heather Simpson
author_gitlab: heather
author_twitter: heatherswall
categories: unfiltered
image_title: '/images/blogimages/bug-bounty-ask-a-hacker.png'
description: "We talk with bug bounty hunter Alex Chapman about his favorite type of vulnerability to research and the one piece of security advice he’d offer to the company he hacks."
tags: security, bug bounty # Please add some relevant tags from the blog handbook: https://about.gitlab.com/handbook/marketing/blog/#tags. Please only use tags from this list (do not create new ones).
twitter_text: "A chat with #bugbounty hunter @ajxchapman about his favorite type of vulnerability to research and the security advice he’d offer to the companies he hacks. " # optional;  If no text is provided it will use post's title.
---

{::options parse_block_html="true" /}




![Alex Chapman profile](/images/blogimages/ajxchapman/ajxchapman_profile.png){: .medium.center}


**We asked bug bounty hunter Alex Chapman a bunch of questions about the history of his hack and he was gracious enough to drop some knowledge on us.**



## The art of the hack

#### Why do you hack? 
I first learned about hacking as a concept from the film Hackers, my brother had recorded it on VHS and I found it sitting in the VCR one day. From that point on I knew this was something I wanted to be a part of, so I spent all the time I could learning about programming and hacking. Starting with programming `Hello World!` in Visual Basic around age 12, I progressed to reverse engineering `crackmes` and playing hacking wargames throughout my teens. It wasn’t until I finished my undergraduate degree that I discovered that I could actually get a job hacking companies legally, and so I became a penetration tester.

#### Why hack on GitLab’s BBP?
I spend time on the GitLab Bug Bounty Program because I am a GitLab user, it’s open source so I can review the code, and frankly the reward table for high and critical impact bugs is among the best of all Bug Bounty programs. 

I much prefer white or grey box bug hunting, where I have access to source code or compiled binaries, over the more common black box style web bug hunting. So with access to the GitLab code I can attempt to spot patterns, analyse fixes and look for more fiddly bugs that would be very difficult to find without the source. On top of this, having access to the issues where bugs are fixed and discussed gives real insight into the inner workings of GitLab developers, and helps find more creative bugs.

#### What is the most significant piece of security advice you could provide to the companies you hack? 
Have a clear policy for the reporting of security vulnerabilities. Whether it’s a vulnerability disclosure policy, security.txt, security@ email alias (or ideally all three), have a clearly defined method to contact your security team directly. 
The amount of time I have wasted during my career trying to report security vulnerabilities to companies is ridiculous. I’ve been directed to support, to sales(!), been told I can’t report a vulnerability without having purchased a support contract, been threatened with legal action and been ignored.
If I come across a security vulnerability in one of your products or services I actively want to report it so you can fix it, not for my benefit but for yours and your customers. Make it easy for me.  

*_Editor’s note: 💯  We hope our process is easy and straightforward when it comes to responsible disclosure! We outline three ways to disclose a bug on [this handbook page](/security/disclosure/), including via our [HackerOne program](https://hackerone.com/gitlab), a confidential GitLab issue, or via email._

#### Do you hack full-time or part-time? Why?
I have been a professional hacker since 2007, with an interest in hacking for many years before. I spent ~11 years as a consultant penetration tester and Red Teamer, and started to get interested in bug bounty in the latter few years. After losing my first daughter in 2018 I quit work to focus on recovery and self care, and after a period I started to spend more time on bug bounty hacking. I committed to bug hunting full time in April 2019. 
Nearly two years later, I’m happy to say I still enjoy finding bugs and thus far it has proved to be a viable way to make a living, whilst also giving me the flexibility and time to spend with my family and look after myself.
#### What types of vulnerabilities do you most enjoy looking for and finding?
My favorite bugs to find are failures in the assumptions made when interconnecting complex systems, like:
Assuming that a localhost bound network socket can’t be accessed by a remote attacker - enter DNS rebinding.
Trusting a 3rd party not to respond with malicious data - not always the case with content injection or cache poisoning.
Reusing a process or container to process multiple user jobs, fine until an attacker can modify the system.
I spend my time reviewing source code, reverse engineering binaries and assessing project architecture searching for these false assumptions and attempting to turn them to my advantage.

#### From your perspective, what’s GitLab doing better than anyone else in terms of security?
I absolutely love the open nature of GitLab, from open source and open documentation, through open issue response and remediation. Openness makes hacking on GitLab much more enjoyable, and much more likely to have critical security issues identified before they can be exploited by a malicious actor.

#### Is there an area of security research you think deserves more attention?
Supply chain attacks are the hot topic right now, and something we should all be concerned about. When our hundreds of dependencies themselves have hundreds of dependencies, how can we have any measure of confidence in the security of our code?

![xkcd dependency diagram](/images/blogimages/ajxchapman/xkcd_dependency.png){: .small.center}

_As always there is a relevant XKCD [https://xkcd.com/2347/](https://xkcd.com/2347/)_

This is already a huge problem, but one without a robust solution (I expect there is a vendor or two who may claim to solve this in their marketing material though). Until a solution can be made freely available to all, this is an area that needs significant open research.

## Tangential targets

#### If you use GitLab frequently, what features do you like the most? Where can we improve?
I use GitLab for all of my Bug Bounty issue tracking from idea, through discovery, PoC development, report writing and hopefully soon report tracking via the CI/CD pipeline. This means I write in markdown, a lot. Unfortunately I find that GitLab is not very friendly with writing or editing large markdown documents in repos, wikis or issues.

My writing style means I make multiple edits to issues or wiki pages, and having to scroll through a wall of markdown source to edit a detail half way through a page is really painful. It would be great to see markdown editing become first class in GitLab, or at the very least let me edit only a code block or text under a heading like on Wikipedia.

#### What was the first computer you owned?
Commodore 64, with the tape drive, hooked up to the lounge CRT TV. Ah, the good old days of waiting, what at the time at least, felt like hours to play Frogger. The kids don’t know how good they have it these days. 

#### Gif or Gif? (Gif vs Jif)
It’s Gif, and if you think otherwise (yes, even if you wrote and named the standard), I’m sorry to tell you are living a lie. It’s ok we can still be friends though... as long as you change your heathen ways.

#### Have a favorite quote?
> “It’s not worth doing something unless someone, somewhere, would much rather you weren’t doing it.” -- The late, great Terry Pratchett


_We held a live Ask Me Anything (AMA) session with Alex Chapman on March 22, 2021. He fielded a bunch of questions about his research approach and strategy to hacking._  

<!-- blank line -->
<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/Km6toD6CAAw" frameborder="0" allowfullscreen="true"> </iframe>
</figure>
<!-- blank line -->
