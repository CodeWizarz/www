---
title: "Run a consistent serverless platform with GitLab and Knative"
author: Daniel Gruesso
author_gitlab: danielgruesso
author_twitter: danielgruesso
categories: company
image_title: '/images/blogimages/gitlab-serverless-blog.png'
description: "Portability of your serverless platform is now easy with GitLab and Knative."
tags: cloud native, events, GKE, google, kubernetes
cta_button_text: 'Learn more about GitLab Serverless'
cta_button_link: '/topics/serverless/'
twitter_text: "Run a consistent serverless platform with @gitlab and @KnativeProject"
featured: yes # reviewer should set
postType: product
---

This past April, [Cloud Run](https://cloud.google.com/run/) was announced at Google Cloud Next. As a Google Cloud partner, GitLab had the opportunity to participate and demo our integration during the talk titled, "[Run a consistent serverless platform anywhere with Kubernetes and Knative](https://youtu.be/lb_bRRAgEyc?t=1100)."

<!-- blank line -->
<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/lb_bRRAgEyc?start=1100" frameborder="0" allowfullscreen="true"> </iframe>
</figure>
<!-- blank line -->

Just as Kubernetes has become the de facto default platform for running containers, Knative is shaping up to become the answer for running [serverless](/topics/serverless/) workloads in Kubernetes. Cloud Run brings all the benefits of Knative in a fully managed service or as an add-on to your Kubernetes cluster (called “Cloud Run on GKE”), abstracting developers from the complexities of deploying Kubernetes, Knative, and managing a cluster. This empowers developers to focus on adding value vs having to deploy and manage infrastructure.

At GitLab we believe in the power of open source and adopted Kubernetes and Knative from early on. During the talk, we demoed how GitLab enables operators to deploy Knative with ease so that developers can start deploying Functions-as-a-service (FaaS) or serverless applications using GitLab’s built-in features. GitLab also provides the configured Istio-Ingress endpoints automatically, which operators can then use to configure DNS for their domain, as well as providing the option to bind the domain to the ingress endpoint (via ConfigMap) so that the serving controller can configure the routes. This is all done with a single click.

After provisioning your project with the required [serverless templates](https://docs.gitlab.com/ee/user/project/clusters/serverless/#deploying-functions), GitLab will automatically build and deploy your application or function as a Knative service, provide you with the endpoint where the service is provisioned, and display load/invocation metrics for your function.

![GitLab Serverless](/images/blogimages/gitlab-serverless.png){: .shadow.small.center.wrap-text}

While it’s still early on, we are very excited to partner with both Google Cloud and the Knative community to bring all this awesome functionality to the GitLab community.

{::options parse_block_html="true" /}

<i class="fab fa-gitlab" style="color:rgb(107,79,187); font-size:.85em" aria-hidden="true"></i>&nbsp;&nbsp;
Learn more about [GitLab Serverless](https://docs.gitlab.com/ee/user/project/clusters/serverless)
&nbsp;&nbsp;<i class="fab fa-gitlab" style="color:rgb(107,79,187); font-size:.85em" aria-hidden="true"></i>
{: .alert .alert-webcast}

{::options parse_block_html="true" /}

<i class="fab fa-gitlab" style="color:rgb(107,79,187); font-size:.85em" aria-hidden="true"></i>&nbsp;&nbsp;
Learn more about [Cloud Run](http://cloud.google.com/run)
&nbsp;&nbsp;<i class="fab fa-gitlab" style="color:rgb(107,79,187); font-size:.85em" aria-hidden="true"></i>
{: .alert .alert-webcast}
