---
title: 'How to avoid the DevOps tax'
author: Rebecca Dodd
author_gitlab: rebecca
author_twitter: gitlab
categories: insights
image_title: '/images/blogimages/devops-nova-scotia-cover.jpg'
description: "Realize a faster DevOps lifecycle with these best practices for integration and automation – watch our recent webcast with guest speaker Forrester Senior Analyst Christoper Condo and GitLab Head of Product Mark Pundsack."
cta_button_text: 'Watch now'
cta_button_link: 'https://youtu.be/iIElDMEC3U0'
twitter_text: "Avoiding the DevOps tax with guest @forrester"
tags: DevOps, webcast
---

With the influx of DevOps-related products and services on the market, today’s application delivery toolchain has become complex and fragmented, resulting in more time spent on integrating tools instead of software innovation. Mark Pundsack, Head of Product at GitLab, and guest speaker Christopher Condo, Senior Analyst at Forrester, recently met to discuss the current state of [DevOps automation](/topics/devops/) and how IT leaders can unlock themselves from today’s toolchain to avoid the “DevOps tax.”

<!-- more -->

- [What is the DevOps tax?](#what-is-the-devops-tax)
- [What's in the webcast?](#whats-in-the-webcast)
- [Watch the recording](#watch-the-recording)
- [Key takeaways](#key-takeaways)

## What is the DevOps tax?

In a typical DevOps toolchain, lots of different tools are tied together to deliver DevOps. You have different tools for planning, code creation, CI and security testing, packaging, release and deploy, configuration management, and monitoring.

But administrating all these products and connecting them together is complex. For example, your CI needs to talk to your version control, your code review, your security testing, your container registry, and your configuration management. The permutations are staggering, and it’s not just a one-time configuration – each new project needs to reconnect all these pieces together.

That's the DevOps tax: time spent on integrating and maintaining complicated toolchains, limiting your efficiency.

## What's in the webcast

Before we dive into the DevOps tax and how to avoid it, we start by looking at digital transformation and current trends in DevOps, leading up to the DevOps tax, and then offering some best practices for reducing friction.

## Watch the recording
<!-- blank line -->
<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/iIElDMEC3U0" frameborder="0" allowfullscreen="true"> </iframe>
</figure>
<!-- blank line -->

## Key takeaways

### The digital transformation imperative

<div class="panel panel-default twitter-block"> <a class="twitter-block-link panel-body" href="http://twitter.com/share?text=%22When we think about digital transformation, we think about and talk about delivering value to your customer quickly, repeatedly, and with high quality%22 – guest @forrester via @GitLab webinar; url=/2018/03/21/avoiding-devops-tax-webcast/;hashtags=" rel="nofollow" target="_blank" title="Tweet!"> <span class="twitter-text pull-left"> "When we think about digital transformation, we think about and talk about delivering value to your customer quickly, repeatedly, and with high quality" – guest @forrester via @GitLab webinar</span> <span class="click-to-tweet"> Click to tweet! <i class="fab fa-twitter"></i> </span> </a> </div>

#### Customer experience is key

>The people with the bad customer experience, their stock is lagging those companies that have an excellent customer experience. That's showing you that customer experience really matters - Christopher Condo

#### Expect disruption

>The common thread is placing the customer first. If there's a place where the customer's not being placed first, and some company can come along with an innovative way to do it, it seems like the government is open to it and customers are certainly open to it as well - Christopher Condo

### Trends in DevOps

#### Better integration of tools

<div class="panel panel-default twitter-block"> <a class="twitter-block-link panel-body" href="http://twitter.com/share?text=%22You don't want people handcrafting all their tool chains all the time. You don't want a situation where every time an engineer changes teams he has to learn a whole new set of tools%22 – guest @forrester via @GitLab webinar;url=/2018/03/21/avoiding-devops-tax-webcast/;hashtags=" rel="nofollow" target="_blank" title="Tweet!"> <span class="twitter-text pull-left"> "You don't want people handcrafting all their tool chains all the time. You don't want a situation where every time an engineer changes teams he has to learn a whole new set of tools" – guest @forrester via @GitLab webinar </span> <span class="click-to-tweet"> Click to tweet! <i class="fab fa-twitter"></i> </span> </a> </div>

>I just ran a Wave on continuous integration tools and customers told us loud and clear that they are looking for a complete, integrated toolchain because they're tired of integrating their own toolchain. It's great to have the integrated tool chain but it comes at a cost - Christopher Condo

#### Better integration of teams

>They want to be able to check in with the security expert and say, "Here's our design, here's our architecture, here's how we're handling these problems. What are we missing? What do we need to be doing next?" All of those teams sort of act as shared resources, they don't act as blockers on a particular project - Christopher Condo

#### Containers are critical

<div class="panel panel-default twitter-block"> <a class="twitter-block-link panel-body" href="http://twitter.com/share?text=%22Containers allow folks to worry about what they're best at rather than trying to have everybody know everything – guest @forrester via @GitLab webinar; url=/2018/03/21/avoiding-devops-tax-webcast/; hashtags=" rel="nofollow" target="_blank" title="Tweet!"> <span class="twitter-text pull-left"> "Containers allow folks to worry about what they're best at rather than trying to have everybody know everything" – guest @forrester via @GitLab webinar </span> <span class="click-to-tweet"> Click to tweet! <i class="fab fa-twitter"></i> </span> </a> </div>

### What is the DevOps tax?

>When it's a pain to integrate security, how many teams just don't bother? Or when it's a pain to share information between teams, how many organizations overcome that burden and find a way to work together? How much impact does this tax have on collaboration? With separate tools and separate processes, we're naturally encouraging separate silos where functional teams work in isolation - Mark Pundsack

### Concurrent DevOps

<div class="panel panel-default twitter-block"> <a class="twitter-block-link panel-body" href="http://twitter.com/share?text=%22When the entire DevOps lifecycle is seamless, magic starts to happen. Teams can work concurrently, not sequentially – @MarkPundsack via @GitLab;url=/2018/03/21/avoiding-devops-tax-webcast/;hashtags=" rel="nofollow" target="_blank" title="Tweet!"> <span class="twitter-text pull-left"> "When the entire DevOps lifecycle is seamless, magic starts to happen. Teams can work concurrently, not sequentially" – @MarkPundsack via @GitLab </span> <span class="click-to-tweet"> Click to tweet! <i class="fab fa-twitter"></i> </span> </a> </div>

### DevOps best practices

- To maximize your digital transformation, you need to optimize your CI/CD pipeline, create integrated product teams, and modernize your application architecture with microservices and a cloud native approach.
- Avoid the DevOps tax by reducing the number of integration points in your toolchain, integrate as deeply as you can, and strive for a single conversation across development, operations, security and business.
- If you’re just getting started, start with continuous integration. Automating tests and building confidence in your code will pay dividends many times over.
- If you already got CI, then move on to continuous delivery. Automate deployments and make them less scary. If you already started the DevOps transformation, then embrace the culture. You can only go so far when there’s a wall between dev and ops.
<br><br>
