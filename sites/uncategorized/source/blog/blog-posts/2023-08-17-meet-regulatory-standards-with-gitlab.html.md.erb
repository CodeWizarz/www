---
title: "Meet regulatory standards with GitLab compliance & security policy management"
author: Abubakar Siddiq Ango 
author_gitlab: abuango 
author_twitter: sarki247  
categories: security
image_title: '/images/blogimages/securitycompliance.jpeg'
description: "Compliance is more than one-off audits; it's a continuous process of efficiently managing risk by implementing guardrails and monitoring specific metrics."
tags: DevSecOps, DevSecOps platform, security
guest: false 
twitter_text: "Learn how to use GitLab's compliance and security policy management features to meet regulatory standards and build trust." 
featured: no
postType: dev-evangelism 
---
Standards have always been the guiding principles that ensure products and services are offered to clients securely and reliably. These standards, often enforced by organizations saddled with the responsibility by law, keep industries in check and prevent the proliferation of substandard products. In the IT industry, maintaining standards goes beyond shipping a final product to clients; doing so covers the entire lifecycle of the solutions offered. Every industry uses technology in various forms to move fast and drive results efficiently, leading to the creation, storage, and transfer of massive amounts of data, which are often sensitive. Mishandling of data can cause significant damage, to the tune of [hundreds of millions of dollars](https://tech.co/news/data-breaches-updated-list). 

In a recent [blog post](https://www.imf.org/en/Blogs/Articles/2023/03/21/how-pandemic-accelerated-digital-transformation-in-advanced-economies), researchers at the International Monetary Fund (IMF) shared that the COVID-19 pandemic accelerated the adoption of digital technologies, shielded productivity across the globe from the impact of the pandemic and saw an increase in labor force participation in countries where working from home is more common. Contact-intensive sectors also sought innovative, mostly technology-based solutions to reduce exposure to the COVID-19 virus. This acceleration came with challenges, a rise in software supply chain security incidents, and data protection issues. Compliance and security policy management has never been more important, as companies want to ensure standard operating procedures, whether self-imposed or imposed by a regulatory body, are adhered to.

## Common IT compliance standards
Regulatory compliance standards come in various forms and depend on the industry or region an organization operates in. Common compliance standards include the following:
* [HIPAA](https://www.cdc.gov/phlp/publications/topic/hipaa.html): The Health Insurance Portability and Accountability Act of 1996 in the U.S. creates standards to protect patient information from disclosure without consent
* [GDPR](https://gdpr.eu/what-is-gdpr/): General Data Protection Regulation is a European Union data privacy and security law, which applies to all companies across the globe that process the personal data of EU  citizens or residents.
* [NIST SSDF](https://csrc.nist.gov/Projects/ssdf): The Secure Software Development Framework, created by the U.S. National Institute of Standards and Technology ([NIST](https://www.nist.gov/)) as standards and best practices for secure software development.
* [PCI DSS](https://listings.pcisecuritystandards.org/documents/PCI_DSS-QRG-v3_2_1.pdf): Information security standards for financial institutions that process payments, especially with credit cards. PCI DSS is administered by the [Payment Card Industry Security Standards Council](https://www.pcisecuritystandards.org/).

Aside from widely recognized standards, countries often have standards specific to their citizens or region and organizations are obliged to comply if they wish to operate in those regions.

## Compliance management
Organizations are mandated to meet standards or risk fines or legal action. Some organizations even go above and beyond to set more stringent standards for themselves to maintain a reputation and build trust with clients. To meet standards, [compliance metrics](https://advisory.kpmg.us/articles/2018/compliance-metrics.html) must be evaluated and integrated into standard operating procedures to provide insights that enable early detection and prevention of current and future compliance risks. Thus, the need for efficient [compliance management](https://about.gitlab.com/solutions/compliance/).

## Compliance management with GitLab
According to the [2023 GitLab Global DevSecOps Report](https://about.gitlab.com/developer-survey/), surveyed respondents mentioned [continuous compliance](https://about.gitlab.com/solutions/continuous-software-compliance/) as a key factor in ensuring the efficiency and security of their software development lifecycle. GitLab provides features that allow organizations to create compliance frameworks, security policies, and audit management. GitLab also enables compliance or leadership teams to monitor compliance metrics with [compliance reports](https://docs.gitlab.com/ee/user/compliance/compliance_report/index.html). Let's take a look at some of these features.

### Compliance frameworks and pipelines
Organizations can create [a compliance framework](https://docs.gitlab.com/ee/user/group/compliance_frameworks.html) that identifies projects that need to meet defined compliance requirements, which can be enforced with [compliance pipelines](https://docs.gitlab.com/ee/user/group/compliance_frameworks.html#compliance-pipelines). For example, a FinTech company can create a [default compliance framework](https://docs.gitlab.com/ee/user/group/compliance_frameworks.html#default-compliance-frameworks) for all projects, ensuring every stage of their software development lifecycle meets the PCI DSS requirements for handling cardholder data. 

These requirements are then enforced by ensuring every change introduced to the codebase is sufficiently tested automatically with GitLabâ€™s [application security features](https://docs.gitlab.com/ee/user/application_security/), which cover source code, as well as dependencies, and vulnerabilities in running application and infrastructure configurations. You can learn more about how GitLab helps you achieve [PCI compliance](https://about.gitlab.com/solutions/pci-compliance/) and other [regulatory compliance](https://about.gitlab.com/solutions/continuous-software-compliance/) with compliance frameworks.

The following video demonstrates setting up and using compliance frameworks and pipelines.

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/jKA_e_jimoI" frameborder="0" allowfullscreen="true"> </iframe>
</figure>


### Security policy management
Security and compliance teams can use GitLab to enforce compliance requirements by ensuring security scanners run in pipelines where necessary or by requiring approval on merge requests when [security policies](https://docs.gitlab.com/ee/user/application_security/policies/) are violated. GitLab supports [scan execution](https://docs.gitlab.com/ee/user/application_security/policies/scan-execution-policies.html) and [scan result](https://docs.gitlab.com/ee/user/application_security/policies/scan-result-policies.html) policies. These policies are defined in a dedicated [security policy project](https://docs.gitlab.com/ee/user/application_security/policies/#security-policy-project) that establishes a separation of duties between security and development teams. Security policies can be applied granularly at the group, sub-group, and project levels. The policies can be edited in rule mode, which uses the [policy editor](https://docs.gitlab.com/ee/user/application_security/policies/#policy-editor) or by using yaml mode.

### Scan execution policies
Scan execution policies can be configured to run a [SAST](https://docs.gitlab.com/ee/user/application_security/sast/), [SAST IaC](https://docs.gitlab.com/ee/user/application_security/iac_scanning/), [DAST](https://docs.gitlab.com/ee/user/application_security/dast/), [secret detection](https://docs.gitlab.com/ee/user/application_security/secret_detection/), [container](https://docs.gitlab.com/ee/user/application_security/container_scanning/), or [dependency](https://docs.gitlab.com/ee/user/application_security/dependency_scanning/) scan on a specified [GitLab runner](https://docs.gitlab.com/runner/). The scan jobs can be run on schedule, or anytime a pipeline runs. Compliance and security teams can use scan execution policies to periodicailly check on and proactively prevent escalation of vulnerabilities. They can also be used to reinforce controls when new trends are observed from scan results.

### Scan result policies
Scan result policies add required review and approval of merge requests when the results of specified security scans violate the policies' rules. For example, a policy can require a security team member to take action when a newly identified critical SAST vulnerability is detected. This way, security and compliance team members can support developers while ensuring the changes introduced to the codebase are secure and meet compliance requirements.

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/w5I9gcUgr9U" frameborder="0" allowfullscreen="true"> </iframe>
</figure>


### License approval policies
When selecting scan types for scan result policy rules, you have the option of security scan, the default behaviour for scan result policies, and license scan. License scanning depends on the output of [the dependency scanning](https://docs.gitlab.com/ee/user/application_security/dependency_scanning/) CI/CD job to check if identified licenses match specified criteria, then adds approval requirements before an open merge request can be merged. This is crucial to ensure that only dependencies with approved licenses are used in your organization.

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/34qBQ9t8qO8" frameborder="0" allowfullscreen="true"> </iframe>
</figure>


### Audit management
Understanding the security and compliance posture of your organization is an important part of compliance management. You want to be aware of every action taken on the GitLab instance with [audit events](https://docs.gitlab.com/ee/administration/audit_events.html), which allows you to track every important event, who performed it, and when. You can also generate detailed reports from audit events using [audit reports](https://docs.gitlab.com/ee/administration/audit_reports.html), allowing you to prove your compliance to auditors or regulators. 

[Compliance reports](https://docs.gitlab.com/ee/user/compliance/compliance_report/index.html) are a major component of audit management in GitLab, giving visibility to the compliance posture of your organization. Compliance reports detail every violation discovered with the [violations report](https://docs.gitlab.com/ee/user/compliance/compliance_report/index.html#compliance-violations-report) and the frameworks used by projects within your organization with the compliance [frameworks report](https://docs.gitlab.com/ee/user/compliance/compliance_report/index.html#compliance-frameworks-report).

![Compliance violations report](/images/blogimages/2023-06-30-meet-regulatory-standards-with-gitlab-compliance-security-policy-management/compliance_reports_violations.png)

An example of compliance violations report from a parent GitLab group
{: .note.text-center}

![Compliance frameworks report](/images/blogimages/2023-06-30-meet-regulatory-standards-with-gitlab-compliance-security-policy-management/compliance_reports_frameworks.png)

An example of compliance frameworks report for all projects in a group
{: .note.text-center}

### Audit events streaming
Most organizations have existing systems to monitor activites in their systems in real time. With [audit events streaming on GitLab](https://docs.gitlab.com/ee/administration/audit_event_streaming/index.html), you can integrate third-party solutions like [Splunk infrastructure monitoring](https://www.splunk.com/en_us/products/infrastructure-monitoring.html)  or [DataDog streams monitoring](https://www.datadoghq.com/product/data-streams-monitoring/) service, for real-time audit events analytics. All audit events data are sent to streaming destination (it's important to stream to a trusted service). Audit events streaming can be [configured at top-level groups](https://docs.gitlab.com/ee/administration/audit_event_streaming/index.html#top-level-group-streaming-destinations) and, from GitLab 16.1, you can configure the feature at instance level on self-managed GitLab instances. The feature is disabled by default and will require a self-managed instance administrator to enable it with the feature flag `instance_streaming_audit_event`.

## Learn more
Compliance is a continuous process of efficiently managing risk by implementing guardrails and monitoring compliance metrics. GitLab empowers organizations to fulfill regulatory standards with our [compliance management](https://about.gitlab.com/solutions/compliance/) features, which helps you build secure software and maintain the trust of your users, clients, and community. You can learn more about compliance and security policy management with the [GitLab DevSecOps tutorial](https://gitlab-de.gitlab.io/tutorials/security-and-governance/devsecops/simply-vulnerable-notes/), which contains lessons covering the complete application security lifecycle in GitLab.
