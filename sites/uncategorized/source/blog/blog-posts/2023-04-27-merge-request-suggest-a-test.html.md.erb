---
title: "ML experiment: Generate tests for code changes"
author: Kai Armstrong
author_gitlab: phikai
author_twitter: phikai
categories: ai-ml
posttype: product
tags: DevSecOps, product, features, AI/ML
description: "Learn how GitLab is experimenting with ML-powered test suggestions in this latest installment of our ongoing 'AI/ML in DevSecOps' series."
image_title: /images/blogimages/gitlab-data-science-icon.png
featured: yes
twitter_text: "Not sure how to write tests for your changes? Learn how @gitlab is experimenting with ML-powered product features that help write tests and ensure test scenarios are covered."
---

<i>This blog post is part of an ongoing series about GitLab's journey to [build and integrate AI/ML into our DevSecOps platform](/blog/2023/04/24/ai-ml-in-devsecops-series/). The series starts here: [What the ML is up with DevSecOps and AI?](/blog/2023/03/16/what-the-ml-ai/). Throughout the series, we'll feature blogs from our product, engineering, and UX teams to showcase how we're infusing AI/ML into GitLab.</i>

Proposing changes and new features via merge requests is great, but what about the tests? Sometimes, tests can be the hardest part of any code change you make. Maybe you're not sure how to start writing the tests? Maybe the test doesn't cover all the scenarios that need to be tested? Maybe you just want to get a second opinion on the tests that were written? We believe that we can use generative AI and large language models (LLMs) to help provide relevant test coverage for the proposed changes, so reviewers and authors can have confidence in the quality of code changes being submitted.

In a rapid prototype, [Phil Hughes](https://gitlab.com/iamphill), Staff Frontend Engineer for our [Code Review Group](/handbook/product/categories/#code-review-group), used AI to generate suggested test coverage for changes directly in the [merge request](https://docs.gitlab.com/ee/user/project/merge_requests/). He added a new option on merge request files to provide suggested tests in a sidebar:

![Merge request test generation AI](/images/blogimages/merge-request-generate-tests-ai.gif){: .shadow}

## Iterating on AI/ML features

While just an experiment today, we are iterating on how to effectively bring features like this to our customers. We're beginning by generating these test suggestions, and seeking ways to incorporate them into the review flow. We're exploring ideas like:

- Automatic detection of missing tests, with suggestions to add coverage
- Automated review of the proposed tests in the merge request, for appropriateness and completeness

This experiment is just the start of the ways we're infusing GitLab with AI/ML capabilities to help GitLab users become more efficient and effective at their jobs. We are [looking across the software development lifecycle](/blog/2023/03/16/what-the-ml-ai/) for painful and time-consuming tasks that are ideal for AI-assisted features. We'll continue to share these demos throughout this blog series.

Interested in using these AI-generated features? [Join our waitlist](https://forms.gle/9eeUkPJauKsbLaoz5) and share your ideas.

Continue reading our "[AI/ML in DevSecOps](https://about.gitlab.com/blog/2023/04/24/ai-ml-in-devsecops-series/)" series.

_Disclaimer: This blog contains information related to upcoming products, features, and functionality. It is important to note that the information in this blog post is for informational purposes only. Please do not rely on this information for purchasing or planning purposes. As with all projects, the items mentioned in this blog and linked pages are subject to change or delay. The development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab._
