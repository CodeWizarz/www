---
title: "It's raining repos: The microservices repo explosion, and what we're doing about it"
author: Aricka Flowers
author_gitlab: atflowers
author_twitter: arickaflowers
categories: engineering
image_title: '/images/blogimages/microservices-explosion.jpg'
description: "Microservices have spawned an explosion of dependent projects with multiple repos, creating the need for an integrated solution – we're working on it right now."
tags: CI, integrations, kubernetes, security, testing
ee_cta: false
just_commit_button_text: 'See how <strong>GitLab can help your team</strong> scale app deployment!'
just_commit_button_link: '/webcast/scalable-app-deploy/'
twitter_text: "Frazzled by the number of repos in your microservices? @GitLab CEO @systes says an integrated solution will give you peace of mind"
postType: content marketing
---

Gone are the days of "set it and forget it"-style software development. The increased demand for code and operations on all projects, especially [microservices](/topics/microservices/), means more repos. This calls for a more integrated solution to incorporate testing, security updates, monitoring, and more, says GitLab CEO [Sid Sijbrandij](/company/team/#sytses):

>"The bar's going up for software development. It's no longer enough to just write the code; you also have to write the tests. It's no longer enough to just ship it; you also have to monitor it. You can no longer make it once and forget about it; you have to stay current with security updates. For every product you make you have to integrate more of these tools. It used to be that only the big projects got all these things, but now every single service you ship should have these features, because other projects are dependent on it. One security vulnerability can be enough to take a company down."

An increasing number of project repos means exponential growth in the number of tools needed to handle them – bad news for those saddled managing project dependencies. A streamlined workflow is essential to alleviate this burden – here's how we want to help you get there.

### Everything under one roof

"With GitLab, we want to enable you to simply commit your code and have all the tools you need integrated out of the box," Sid said. "You don't have to do anything else. It's monitored; we measure whether your dependencies have a vulnerability and fix it for you automatically. I think that's the big benefit of GitLab; that you don't have to go into stitching together 10 tools for every project that you make."

By using an integrated solution to manage an ever-growing number of microservices, you can avoid having engineers siloed off with their respective teams and tools. Creating visibility among teams and getting rid of the need for handoffs leads to a faster [DevOps lifecycle](/topics/devops/) while also ensuring that your projects deploy and remain stable, Sid explains.

<%= partial "includes/blog/content-newsletter-cta", locals: { variant: "b" } %>

"Our customers that switched from a fragmented setup and were only able to get projects through that cycle a few times a year are now deploying a few times a week," Sid said. "The ability to go from planning to monitoring it in production is what GitLab brings to the table. We have an ample amount of customer case studies showing how we helped improve their speed."

### Better support for microservices

We are boning up our support of microservices, and have a number of features in the works to improve this area, including [group level Kubernetes clusters](https://gitlab.com/gitlab-org/gitlab-ce/issues/34758), a [global Docker registry browser](https://gitlab.com/gitlab-org/gitlab-ce/issues/49336), and adding the [ability to define multiple pipelines](https://gitlab.com/gitlab-org/gitlab-ce/issues/22972). This is to build on what's already there:

"We have great support for microservices. GitLab has [multi-project pipelines](/blog/2018/10/31/use-multiproject-pipelines-with-gitlab-cicd/) and [can trigger pipelines from multi-projects via API](https://docs.gitlab.com/ee/ci/jobs/ci_job_token.html)," Sid detailed. "The CI Working Group of the CNCF (Cloud Native Computing Foundation), the most cloud native organization in the world probably, uses GitLab to test their projects. We've got great support for things like [Kubernetes](/solutions/kubernetes/) and cloud native technologies. In GitLab, every project you have can be attached to a Kubernetes cluster, and GitLab uses that to run everything that’s going on. We know that a lot of our users and customers are using microservices, and we work great with them."

### Future focus: best-in-class solutions

GitLab is much more than just version control. Having started with the planning, creating and verifying stages in 2011 and 2012, we’ve had time to make those capabilities very strong. We are now strengthening our offerings in the other steps of the DevOps lifecycle: managing, packaging, releasing, configuring, monitoring and security.

"We are seeing enormous progress in those areas, but they can't go head to head with the best-in-class solutions just yet. So that's going be the theme for GitLab next year, to make sure each of our solutions is best in class instead of just the three things we started with," Sid says. "And we won't take our eyes off the ball."

[Cover image](https://unsplash.com/photos/wplxPRCF7gA) by [Ruben Bagues](https://unsplash.com/@rubavi78) on Unsplash
{: .note}
