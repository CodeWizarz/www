---
title: "Our top tips for better bug bounty reports, plus a hacker contest!"
author: Heather Simpson 
author_gitlab: heather
author_twitter: heatherswall
categories: security
image_title: '/images/blogimages/pexels-shawn-stutzman-1010496.jpg'
twitter_image: '/images/opengraph/bug-bounty-hacking-contest-blog.png'
description: "Our AppSec team breaks down what makes a great bug bounty report. That advice comes just in time, as we're having another bug bounty contest."
tags: security, bug bounty
twitter_text: ‚ÄúTry these tips for better bug bounty reports, plus a new @gitlab hacking contest!‚Äù 
featured: no 
postType: content marketing
---

We recently wrote an article with tips on [how to build and run a successful bug bounty program](https://thenewstack.io/gitlabs-top-5-tips-for-running-a-bug-bounty-program/) in the hopes that the processes and practices we‚Äôve built would help other organizations go from zero to sixty as quickly as possible.

But, the truth is, a bug bounty program will be a non-starter if you can't attract talented security hackers to join you. 

The reporters in our program bring an immense depth and breadth of expertise and research, represented in the unique and innovative findings they deliver and the thoughtful reports they submit. 

üéâ **For these reasons and more, we‚Äôre excited to announce that we‚Äôre once again holding a community hacking contest! See more details below and we look forward to your contributions!** üöÄ

But when we think about the reports that researchers submit to our program, questions come up. What makes a report stand out, makes it helpful, makes it...for lack of a better word...good? We asked two of our [Application Security](/topics/devsecops/) engineers, who work to triage, investigate and test within our bug bounty program, for their frank thoughts on bug bounty reports.

## What makes for a better bug bounty report?

---
![Vitor Meireles De Sousa Headshot](/images/blogimages/vdesousa_bw_sm.png){: .small.left.wrap-text}
### [Vitor Meireles De Sousa, senior security engineer, application security team](/company/team/#vdesousa)


We often see reports with an incomplete description of the initial setup, or ones missing the step-by-step instructions necessary to reproduce it. This often leads to multiple, potentially unnecessary, time-consuming exchanges with a reporter or our AppSec team exploring different settings attempting to reproduce the report (or trying to get as close as possible to reproducing it.) Screenshots or videos are a great way to document the issue and can help avoid situations like this.

In my mind, a good report is a combination of the following:

* A thorough description of the configuration used and a detailed step-by-step to reproduce the issue ‚Äì this significantly helps us in triaging the report as fast as possible with a minimum of questions regarding the requirements and how to exploit the vulnerability.
* A properly rated severity and impact analysis ‚Äì when triaging reports, we typically use the severity rating to prioritize one report over another. Frequently we see reports that are overrated in severity. I think it is really important to understand how our team applies severity. Becoming familiar with our [HackerOne policy](https://hackerone.com/gitlab) and particularly the ‚ÄòHow severity is determined‚Äô section can help reporters provide an accurate impact analysis and by extension, appropriate severity ratings.

### What‚Äôs an example of a report that exemplifies these criteria?

This report, [‚ÄúInjection of `http.<url>.*` git config settings leading to SSRF‚Äù](https://hackerone.com/reports/855276) from security researcher, [vakzz](https://hackerone.com/vakzz) has:

* A comprehensive description of the issue
* A detailed step-by-step with precise instructions on how to reproduce it
* A clear impact analysis that justifies the severity of the report  

**And remember, it doesn‚Äôt need to be a long report to be a good one.**

---
![Dominic Couture Headshot](/images/blogimages/dcouture_bw_sm.png){: .small.left.wrap-text}
### [Dominic Couture, Senior Security Engineer, application security team](https://about.gitlab.com/company/team/#dcouture)


I like to see the following things in a report:

* A detailed description of how the vulnerability is triggered
* Information outlining what happens when it is triggered ‚Äìthis helps us know if we‚Äôve reproduced it correctly
* Simple steps to reproduce the vulnerability
* A description of the impact of the vulnerability

To take it a few steps forward, here‚Äôs what makes a *great* report:

* Details about the specific code causing the vulnerability
* Scripted (Bash, Ruby, etc.) reproduction steps if it makes sense for that bug
* For complex bugs, a video can aid understanding, but this should not replace the written steps to reproduce

I would also like to note that a vulnerability report is not like a write-up that you‚Äôd post on your blog. Including details about anything that isn‚Äôt directly related to the vulnerability itself are great for a ‚Äústory‚Äù about how you found the bug, but they add noise to the report and should be left out (and saved for that blog post).

### What‚Äôs an example of a report that exemplifies these criteria?

This report: [SSRF on project import via the remote_attachment_url on a Note](https://hackerone.com/reports/826361) (and really all reports by vakzz mentioned above) ticks all the boxes above and falls firmly in the great report category. Additionally, there‚Äôs good communication from the reporter throughout the process and that‚Äôs the optimal triage experience for us.

## Celebrating great reports, and great reporters

We had so much fun recognizing you ‚Äì the amazing hackers who contribute to our program ‚Äì [last year](/blog/2019/12/12/bugs-bounties-and-cherry-browns/) when we celebrated our one year anniversary of [taking our bug bounty program public](/blog/2018/12/12/gitlab-hackerone-bug-bounty-program-is-public-today/) that we‚Äôre doing it again.

## <i class="fab fa-gitlab fa-fw" style="color:rgb(252,109,38); font-size:.99em" aria-hidden="true"></i>  <i class="fas fa-birthday-cake" style="color:rgb(107,79,187); font-size:.99em" aria-hidden="true"></i>  Two-year anniversary hacking contest <i class="fab fa-gitlab fa-fw" style="color:rgb(107,79,187); font-size:.99em" aria-hidden="true"></i>  <i class="fas fa-bug" style="color:rgb(252,109,38); font-size:.99em" aria-hidden="true"></i>
{: .text-center} 

**We are running a community hacking contest starting October 1 (4 am UTC) until November 30, 2020 (4 pm UTC).** Just find and report a bug to our [HackerOne bug bounty program](https://hackerone.com/gitlab) and you're entered to win. The top contributor in the following categories will receive a special reward:  

<i class="fas fa-address-card fa-fw" style="color:rgb(46,46,46); font-size:.95em" aria-hidden="true"></i> **Most reputation points from submissions to our program.** Collect the most reputation points from submissions to our program and win!
{: #id-card-black}

<i class="far fa-address-card fa-fw" style="color:rgb(56,13,117); font-size:.95em" aria-hidden="true"></i> **Most reputation points *collected by a reporter new to our program***. Getting started with a new bug bounty program is difficult. This one goes out to all the new reporters out there.
{: #id-card-purple}

<i class="fas fa-pencil-alt fa-fw" style="color:rgb(219,58,33); font-size:.95em" aria-hidden="true"></i> **Best written report.** See above. A well-written report goes a long way to demonstrate impact and to help us reproduce the problem efficiently and accurately.
{: #id-pencil}

<i class="far fa-lightbulb fa-fw" style="color:rgb(252,161,33); font-size:.95em" aria-hidden="true"></i> **Most innovative report.** Sometimes reporters demonstrate true out-of-the-box thinking in their approach to finding bugs. We appreciate this creativity.
{: #id-lightbulb}

<i class="fas fa-rocket fa-fw" style="color:rgb(252,109,38); font-size:.95em" aria-hidden="true"></i> **Most impactful finding.** At the end of the day, these high-risk, high-reward vulnerabilities are what we‚Äôre all looking for.
{: #id-rocket} 

**The winners will be announced on Dec. 14, 2020 (that's a new date!) via a [GitLab blog](/blog/) post.** A contributor can win at most one category. Of course, regular bounties still apply to any of your findings.   

*And, because everyone needs a laugh ... here's a joke that hints at a little something the winners will get:* 

{::options parse_block_html="true" /}
**Why does a keyboard work 24 hrs a day?**
{: .text-center}

Because it has 2 shifts! Badum bum ü•Å

Happy hacking!

Cover image by [meo](https://www.pexels.com/@xespri?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels) on [Pexels](https://www.pexels.com/)
{: .note}
