---
title: "GitLab’s guide to CI/CD for beginners"
author: Valerie Silverthorne
author_gitlab: vsilverthorne
author_twitter: ValSilverthorne
categories: engineering
image_title: "/images/blogimages/beginnercicd.jpg"
description: "CI/CD is a key part of the DevOps journey. Here’s everything you need to understand about this game-changing process."
tags: CI/CD, DevOps, kubernetes
twitter_text: "Just starting with DevOps? Grab @gitlab’s guide to CI/CD for beginners"
featured: yes
related_posts:
  - "/blog/2017/09/21/how-to-create-ci-cd-pipeline-with-autodeploy-to-kubernetes-using-gitlab-and-helm/"
  - "/blog/2020/12/17/gitlab-for-cicd-agile-gitops-cloudnative/"
  - "/blog/2020/12/10/basics-of-gitlab-ci-updated/"
---

Continuous integration and [continuous delivery/deployment](/topics/continuous-delivery/) (most often referred to as CI/CD) are the cornerstones of [DevOps](/topics/devops/) and any modern software development practice. Here’s everything you need to know about [CI/CD for beginners](/blog/2022/02/03/how-to-keep-up-with-ci-cd-best-practices/).

## What CI/CD means

If your software development process involves a lot of stopping, starting and handoffs, [CI/CD](/topics/ci-cd/) may be just what you’re looking for. A CI/CD pipeline is a seamless way for developers to make changes to code that are then automatically tested and pushed out for delivery and deployment. The goal is to eliminate downtime. Get CI/CD right and you’re well on the road to successful DevOps and dramatically faster code release. In our [2020 Global DevSecOps Survey](/blog/2020/05/18/devsecops-survey-released/), nearly 83% of survey takers said they’re getting code out the door more quickly thanks to DevOps.

## Understand CI/CD basics

If you’re not sure what a pipeline is, or how the entire process works, here’s a [detailed explanation](/blog/2018/01/22/a-beginners-guide-to-continuous-integration/) of how all the moving parts work together to make software development quicker and easier.

## Four benefits of CI/CD

Yes, CI/CD helps speed up delivery of code but it also makes for happier software developers. At a time when there continues to be [a worldwide shortage of software developers](https://www.gartner.com/en/newsroom/press-releases/2019-01-17-gartner-survey-shows-global-talent-shortage-is-now-the-top-emerging-risk-facing-organizations), it’s critical to retain technical talent. Developer job satisfaction is just one of [four key benefits](/blog/2019/06/27/positive-outcomes-ci-cd/) that come from implementing a CI/CD process.

## How to pick the right CI/CD tool

Now that you’re sold on the [benefits of CI/CD](/topics/ci-cd/benefits-continuous-integration/) it’s time to choose a tool. There are a number of considerations, from [budget to room for growth](/topics/ci-cd/choose-continuous-integration-tool/) so it’s worth taking the time to think it through.

## How to make the business case for CI/CD

To tie a CI/CD process to ROI isn’t difficult, but it’s an important step to take to get management buy-in. Here are [three factors to consider](/blog/2019/06/05/modernize-your-ci-cd/) – including the hidden cost of toolchain sprawl – as you make the case for CI/CD.

## Take 20 minutes and build a CI/CD pipeline

Ok, enough talking about theoreticals... it’s time to do something. Using GitLab’s [Auto DevOps](/stages-devops-lifecycle/auto-devops/) functionality, you can [move from code to production](/blog/2019/09/26/building-a-cicd-pipeline-in-20-mins/) in just two simple steps and in only 20 minutes (no, really, just 20 minutes).

## Next stop: Kubernetes!

Finally, you can tie your GitLab CI pipeline into Google Kubernetes Engine (GKE) and as a bonus it takes only 15 minutes. Our [step-by-step tutorial](/blog/2020/03/27/gitlab-ci-on-google-kubernetes-engine/) is completely beginner-friendly.

**Level up your CI/CD knowledge:**

[How CI can put the "Sec" in DevSecOps](/blog/2020/05/12/solve-devsecops-challenges-with-gitlab-ci-cd/)

[Autoscale GitLab CI with AWS Fargate](/blog/2020/05/11/introducing-autoscaling-gitlab-runners-on-aws-fargate/)

[Get started with parent-child pipelines](/blog/2020/04/24/parent-child-pipelines/)

Cover image by [Kyle Glenn](https://unsplash.com/@kylejglenn) on [Unsplash](https://www.unsplash.com)
{: .note}
