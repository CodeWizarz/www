---
title: "Start contributing to GitLab today"
author: R√©my Coutable
author_gitlab: rymai
author_twitter: rymai
categories: unfiltered
image_title: '/images/blogimages/collaboration.jpg'
description: "Learn how to start contributing to GitLab and how GitLab team members are here to help."
tags: collaboration, community, contributors, inside GitLab, open source
twitter_text: "Start contributing to @GitLab today"
---

{::options parse_block_html="true" /}



At GitLab, [everyone can contribute](https://about.gitlab.com/company/mission/#mission). This has been our mission from day
one, since GitLab started as --and is still-- an open-source project.

We believe that, when consumers become contributors, it benefits everyone: GitLab the product, GitLab the company, GitLab the community
as well as all GitLab users all around the world.

We already merged more than 7,700 [‚Äúcommunity contribution‚Äù](https://gitlab.com/groups/gitlab-org/-/merge_requests?label_name%5B%5D=Community+contribution&state=merged) merge requests from our wider community (at the `gitlab-org` group level).

![Screenshot showing more than 7,700 merged community MRs](/images/blogimages/2020-09-30-community-contributions.png){: .shadow.medium.center}
*<small>Merge requests from community members not employed by GitLab (aka from the GitLab wider community)</small>*

## Contributing tracks

Now, it's your turn to contribute and improve GitLab! Since not everyone share the same interests nor competencies, we
have multiple tracks to ensure everyone can contribute:

- [Development (new features, bug fixes, performance improvements)](/community/contribute/development/)
- [Documentation addition, improvements, and fixes](/community/contribute/documentation/)
- [Translations](/community/contribute/translation/)
- [UX design](https://about.gitlab.com/community/contribute/ux-design/)
- [Project templates](/community/contribute/project-templates/)

When you're ready, simply choose the track for you and follow the instructions.

## Start small...

To get familiar with the merge request workflow, I advise you start small.
[Fixing a typo](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/42447) or
[adding a comma](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/43021) in the documentation are small yet awesome
contributions that are usually merged in a matter of hours. These are awesome to gear up and get the ball rolling.

For more examples, be sure to take a look at the [community merge requests that touched GitLab documentation](https://gitlab.com/gitlab-org/gitlab/-/merge_requests?state=merged&label_name[]=documentation&label_name[]=Community%20contribution).

These kind of changes don't require a lot of time from you, but if you have more time and are ready to tackle bigger challenges,
you can start looking for [bugs](https://gitlab.com/gitlab-org/gitlab/-/issues?label_name%5B%5D=Accepting+merge+requests&label_name[]=type::bug&scope=all&sort=popularity&state=opened)
or [feature proposals](https://gitlab.com/gitlab-org/gitlab/-/issues?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=Accepting%20merge%20requests&label_name[]=feature).

## ...and end up MVP

Every contribution is a collaborative effort between the merge request author, the reviewer(s), potentially MR coaches, and the maintainer (who gets to merge the MR).

Some contributions are so complex and technical that they take months of collaboration to get accross the finish line!

Let's give you a few examples of great collaborative efforts that happened in the last 12 months:

1. [C√©dric Tabin](https://gitlab.com/ctabin) worked for more than 9 months contributing
   [a new CI job keyword allowing interruptible builds](/releases/2019/09/22/gitlab-12-3-released/#interruptible-keyword-to-indicate-if-a-job-can-be-safely-canceled)
   and working with the GitLab teams to get it across the line. The [merge request](https://gitlab.com/gitlab-org/gitlab-foss/-/merge_requests/23464) involved 51 people, who posted 405 discussion notes!
   This contribution was released in GitLab 12.3, and allows to save a lot of money by avoiding running redundant pipelines.
1. [Tuomo Ala-Vannesluoma](https://gitlab.com/tuomoa) worked for 7 months adding support for
   [previewing artifacts that are not public](/releases/2019/10/22/gitlab-12-4-released/#private-project-support-for-online-view-of-html-artifacts), a highly requested feature with almost 300 upvotes!
   The [merge request](https://gitlab.com/gitlab-org/gitlab-pages/-/merge_requests/134) landed in GitLab 12.4, and received two üçæ emoji votes.
1. [Roger Meier](https://gitlab.com/bufferoverflow) worked for more than 4 months contributing
   [support for S/MIME Signature Verification of Commits](/releases/2020/02/22/gitlab-12-8-released/#smime-signature-verification-of-commits), an important feature for sensitive projects and in regulated industries.
   Roger's teammate, [Henning Schild](https://gitlab.com/henning-schild), contributed the change upstream to Git and Roger made the change in GitLab.
   The [merge request](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/17773) involved 42 people, who posted 430 discussion notes, and landed in GitLab 12.8.
1. [Steve Exley](https://gitlab.com/steve.exley) worked for more than 5 months contributing one of
   [the biggest architectural changes to the Docker executor](/releases/2020/03/22/gitlab-12-9-released/#gitlab-runner-129).
   that solved multiple issues for the Docker executor, including [jobs sharing the same network bridge](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4430),
   [services don't work when `network_mode` is specified](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/2699),
   and lastly, services can connect to one another and connect with the build container as well!
   The [merge request](https://gitlab.com/gitlab-org/gitlab-runner/-/merge_requests/1569) involved 69 people, who posted 293 discussion notes. It landed in GitLab 12.9, and received five üî• emoji votes.
1. [Jesse Hall](https://gitlab.com/jessehall3) worked for more than 5 months contributing one of
   [the Batch Suggestions feature](/releases/2020/07/22/gitlab-13-2-released/#batch-suggestions) which allows MR reviewers to group all suggestions made to a diff and submit them at once.
   Because each suggestion translates into a Git operation, submitting these individually could take a long time if there were a large number of suggestions. Submitting suggestions in batches has numerous advantages, including time savings, efficient CI resource utilization (only one pipeline for all suggestions), and preventing an overly noisy Git history.
   The [merge request](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/22439) involved 38 people, who posted 358 discussion notes. It landed in GitLab 13.2, and received seven üíö emoji votes.

## Get some help from the GitLab team

If you need any help while contributing to GitLab, below are some of the resources that are available.

1. Ask questions on the [Contributors Gitter Channel](https://gitter.im/gitlabhq/contributors).
1. Get in touch with [Merge Request Coaches](https://handbook.gitlab.com/job-families/expert/merge-request-coach/). To find a merge request coach, go to the GitLab Team Page and search for "Merge Request Coach".
   You can also mention Merge Request Coaches by typing `@gitlab-org/coaches` in a comment.
1. Find reviewers & maintainers of Gitlab projects in our [handbook](/handbook/engineering/projects/#gitlab) and [mention](https://docs.gitlab.com/ee/user/group/subgroups/#mentioning-subgroups) them in a comment.
1. If you have feature ideas/questions, you can search for existing issues or create a new issue if there isn't one already. Feel free to [mention](https://docs.gitlab.com/ee/user/group/subgroups/#mentioning-subgroups) [product team members](/handbook/product/categories/) in the issue.

Wait for a reviewer. You‚Äôll likely need to change some things once the reviewer has completed a code review for your merge request.
You may also need multiple reviews depending on the size of the change.
If you don't hear from anyone in a timely manner, feel free to find reviewers or reach out to Merge Request Coaches.
Please don't be shy about [mentioning](https://docs.gitlab.com/ee/user/project/issues/issue_data_and_actions.html#mentions)
GitLab team members in your merge requests as all team members are expected to be responsive to fellow community members.

## How we stay on top of community contributions

In Q3 of 2020, several GitLab teams are focusing on improving the experience for community contributors. To achieve this goal,
we created a few metrics around community contributions:

* [Community Contribution Mean Time to Merge](/handbook/engineering/quality/performance-indicators/#community-contribution-mean-time-to-merge)
* [Unique Community Contributors per Month](/handbook/engineering/quality/performance-indicators/#unique-community-contributors-per-month)
* [Community MR Coaches per Month](/handbook/engineering/quality/performance-indicators/#community-mr-coaches-per-month)

To make sure the GitLab team is working hand in hand with the wider community in a timely fashion, we've already put a few automations in place:

1. Every hour, wider community contributions are automatically [labelled "Community contribution"](/handbook/engineering/quality/triage-operations/#community-contributions).
1. Every day, a report with the [untriaged](/handbook/engineering/quality/merge-request-triage/) community merge requests is created and assigned to the Merge Request Coaches for triage. This ensures each merge request has a [stage and group](/handbook/product/categories/#hierarchy) labels set.
1. Every two weeks, a report with unassigned and idle community contributions is created for each [group](/handbook/product/categories/#hierarchy).

These automations are powered by our [`triage-ops` project](https://gitlab.com/gitlab-org/quality/triage-ops/) and are documented in [Triage Operations](/handbook/engineering/quality/triage-operations/).

I hope this post convinced you to start contributing to GitLab. Keep in mind, any contribution is valuable, and don't worry, we're here to support you.

Cover image: ["≈ªuki le≈õne na li≈õciu jesieniƒÖ"](https://unsplash.com/photos/5S2xIoNpcGk) by [Krzysztof Niewolny](https://unsplash.com/@epan5).
{: .note}
