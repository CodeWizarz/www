---
title: "How to improve your communication as a remote designer in 6 simple steps"
author: "Pedro Moreira da Silva"
author_gitlab: pedroms
author_twitter: PedroMScom
categories: unfiltered
image_title: '/images/blogimages/how-to-improve-communication-remote-designer/cover.jpg'
description: "When you're explaining designs or requesting feedback, it's easy to give too much information. Here are some tips on how you can communicate better as a designer, especially if you're working remotely."
tags: collaboration, design, remote work, UX
ee_cta: false # required only if you do not want to display the EE-trial banner
install_cta: false # required only if you do not want to display the "Install GitLab" banner
twitter_text: "Are you a remote designer? Learn how you can improve your communication in 6 simple steps"
related_posts:
  - "/blog/2020/10/16/iterate-like-a-gitlab-designer/"
  - "/blog/2020/04/01/synchronous-collaboration-as-a-remote-designer-at-gitlab/"
  - "/blog/2020/11/30/why-gitlab-is-the-right-design-collaboration-tool-for-the-whole-team/"
---

{::options parse_block_html="true" /}



## Communication is hard

At GitLab, [efficiency](https://about.gitlab.com/handbook/values/#efficiency) is one of our core values. Being efficient in everything we do is important, but it's even more important when communicating and collaborating with others. We need this emphasis on efficiency, [collaboration](https://about.gitlab.com/handbook/values/#collaboration), and [communication](https://about.gitlab.com/handbook/communication/) for GitLab to work as an all-remote company, with zero offices and team members distributed across the globe.

In the context of design, when you're explaining a design decision or requesting feedback, it's easy to fall into the trap of giving too much information. **You want people to understand it right away, so you give as much background and arguments as possible. The problem is that long messages and explanations can put up a collaboration-barrier.** When people have many things competing for their attention, it's hard for them to take the necessary time to read long messages and engage themselves in a constructive discussion. Also, often the most important points get diluted because of how long something is.

**So how can you communicate better and more efficiently as a designer, especially if you're working remotely?** I'm a designer working remotely for over 4 years and I've learned a lot about communication. Let me share 6 practical tips that you can use when sharing information or requesting something from someone:

1. Important things first
1. Keep it short
1. Balance context and conciseness
1. Use multiple formats
1. Clear calls-to-action
1. Use simple language

At the end of this article, there's a [structure and example that puts all of these tips together](#example), so that you can improve your communication today.

## ‚ùóÔ∏è Important things first

**Make sure you communicate the important things first.** Journalists do this very well by using the [inverted pyramid](https://en.wikipedia.org/wiki/Inverted_pyramid_(journalism)) method: information is prioritized so that the major details come before the minor details. So empathize with your audience and think how much little time they can afford to invest in your message. Prioritize and structure your communication so that the key aspects come first and it's as easy as possible to learn about them.

## üìü Keep it short

[**Keeping written communication short**](https://about.gitlab.com/handbook/values/#keep-broadcasts-short) **and** [**giving short verbal answers**](https://about.gitlab.com/handbook/values/#short-verbal-answers) goes hand in hand with communicating the important things first. If you need to give a lot of information, maybe there's a communication or expectations problem.

Although we default to [asynchronous communication](https://about.gitlab.com/handbook/communication/#asynchronous-communication) at GitLab, sometimes a short video call is enough to unblock and make sure everyone's aligned without having to invest too much time in writing and reading something. Our rule of thumb is: ‚Äúif you have gone back and forth 3 times, it's time for a video call.‚Äù (also see [video calls guidelines](https://about.gitlab.com/handbook/communication/#video-calls)).

Other times, it can also be that the topic at hand is just too large to discuss in one go. Think about how you can break it down into smaller, more ‚Äúconsumable‚Äù pieces. It will make life easier for you, the other participants, and anyone else that is following that topic. To help you break things down, read ‚Äú[Iterate Like a GitLab Designer](https://about.gitlab.com/blog/2020/10/16/iterate-like-a-gitlab-designer/)‚Äù or our handbook section on [iteration](https://about.gitlab.com/handbook/values/#iteration).

## ü§π Balance context and conciseness

**Try to provide as much context as possible while balancing the conciseness of your message.** This may seem the opposite of keeping it short, but you do need to strike a balance. You don't want your message to be too short, as it can cause confusion and require clarification, which ultimately delays things. But you also don't want your message to be too long, for all of the reasons I've mentioned so far. Striking this balance sounds incredibly challenging, but fortunately, we have some methods to help us with that, like the inverted pyramid that I described before or multiformat communication.

## üé® Use multiple formats

**Communicating through multiple formats means thinking about your audience and applying your message to the formats that are most likely to attract that audience.** An example is requesting feedback on an idea: you can share an image, a brief paragraph explaining the idea, a list of bullet points with the pros and cons, and maybe even a short video where you walk people through it. This way, each person jumps to and consumes the format that resonates the most with them, how they want it.

But remember that you don't have to use every format, every time. It depends on who you're communicating with, what you're communicating, and when a certain action is needed. Think about these aspects and choose the communication format that best suits them (and also the time you can invest in crafting your message).

## ‚òùÔ∏è Clear calls-to-action

**If you have calls-to-action, make them clear, direct, and specific.**

Perhaps the most important aspect of those three: try to direct your asks to specific people, instead of a group of people or no one at all. The work you put into selecting and targetting who you ask is proportional to the quality of their responses. Asking a group of people is sometimes necessary, but there's a risk of getting nothing but ‚Äúradio silence,‚Äù so be extra careful in crafting your message if you're targetting a group.

<%= partial "includes/blog/tweet", locals: { text: 'Try to direct your asks to specific people, instead of a group of people or no one at all. The work you put into selecting and targetting who you ask is proportional to the quality of their responses.', author: 'PedroMScom' } %>

Regarding CCs, one of our [communication best practices](https://about.gitlab.com/handbook/communication/#top-tips-and-best-practices) says it best:

> It is OK to bring an issue to someone's attention with a CC ("cc @user"), but CCs alone are not enough if specific action is needed from someone. The mentioned user may read the issue and take no further action. If you need something, please explicitly communicate your need along with @ mentioning who you need it from.

Be clear and specific about the who, what, and why. If it's a vague or broad ask, it will be much more difficult for others to respond.

Finally, place any asks you have at the beginning of your message. These asks fall into the ‚Äúimportant things first‚Äù tip because, well, they are supposed to be important! If possible, consider repeating them at the end of the message as a reminder.

## üëê Use simple language

**Finally, use** [**simple language**](https://about.gitlab.com/handbook/communication/#simple-language) **and terms that everyone understands** (see [ubiquitous language](https://about.gitlab.com/handbook/communication/#ubiquitous-language)). For example, instead of using the ‚ÄúIxD‚Äù acronym, say ‚Äúinteraction design.‚Äù Or explain what that means with simple language if you can, like saying ‚Äúhow a user might interact with the user interface and how it behaves.‚Äù

## Example

To bring it all together, I'll first share with you a structure that you can use when requesting feedback or communicating your work, either in a written message, a video, or a presentation:

1. **Summary**: A very short summary ([tl;dr](https://en.wiktionary.org/wiki/tl;dr)) of your message, with simple language and shared terms. If possible, consider bolding the whole summary so it sticks out from the rest.
1. **Asks**: Be clear about what you want and until when. If possible, mention specific people and make sure to bold/highlight their names (if not automatically highlighted). When requesting feedback, specify the kind of feedback you're looking for, what they should comment on, and also what they should not comment on.
1. **Walkthrough**: If you have a video or presentation that gives an overview of the topic, link to it. Better yet, embed it in your message to reduce clicks and friction, but always keep a link so it's accessible to everyone.
1. **Visual**: Try to add a simple image/diagram that describes the core elements of what you're communicating.
   - If you have more visuals that you'd like to share, link to an external page with them. For example, at GitLab we use Figma to design user interfaces, so we link to Figma files where people can view all of the design work.
1. **Details**: More information in the form of short paragraphs or lists. It could be links to any additional references, support documentation, or artifacts. Remember to keep them short!
   - Tip: Some writing tools support the `<details>` HTML tag, that allows you to easily hide information behind a toggle, like an accordion. See the [MDN web docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details) for a simple example and copy-pastable markup.
1. **Close**: Consider reiterating your asks and thank people for their time.

And to see how this can work in practice, here's an example message, where I requested feedback from my team members on a few possible design options:

![Example feedback request message showing an embedded video and collapsible information panels](/images/blogimages/how-to-improve-communication-remote-designer/example.gif){: .shadow.center}

## Keep improving your communication skills

The act of improving one's communication skills doesn't stop, because the ‚Äúwhy, what, how, and who‚Äù are always changing. The quality of communication can make or break an individual, a team, or an organization. As Anthony Robbins puts it:

> The way we communicate with others and ourselves ultimately determines our quality of life.

In this article I focused on writing, speaking, and showing. But communication is also about how you read, listen, and watch. Maybe I'll write about that other side of communication in the future. In the meantime, I leave you with our [handbook page on communication](https://about.gitlab.com/handbook/communication/), which is a great place to learn more about what makes good communication in a remote company.

Cover image by [Stellan Johansson](https://unsplash.com/@stellanj) on [Unsplash](https://unsplash.com/photos/1PP0Fc-KSd4)
{: .note}
